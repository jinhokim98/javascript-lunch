(()=>{"use strict";var t={850:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".restaurant__category {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 64px;\r\n  height: 64px;\r\n  min-width: 64px;\r\n  min-height: 64px;\r\n\r\n  margin-right: 16px;\r\n\r\n  border-radius: 50%;\r\n  background: var(--lighten-color);\r\n}\r\n","",{version:3,sources:["webpack://./src/components/categoryImage/CategoryImage.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,eAAe;EACf,gBAAgB;;EAEhB,kBAAkB;;EAElB,kBAAkB;EAClB,gCAAgC;AAClC",sourcesContent:["@import url('../../styles/style.css');\r\n\r\n.restaurant__category {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 64px;\r\n  height: 64px;\r\n  min-width: 64px;\r\n  min-height: 64px;\r\n\r\n  margin-right: 16px;\r\n\r\n  border-radius: 50%;\r\n  background: var(--lighten-color);\r\n}\r\n"],sourceRoot:""}]);const c=l},135:(t,e,n)=>{n.d(e,{Z:()=>o});var r=n(537),a=n.n(r),s=n(645),i=n.n(s)()(a());i.push([t.id,".favorite-icon {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 26px;\r\n  height: 26px;\r\n\r\n  cursor: pointer;\r\n  z-index: 1;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/favoriteIcon/FavoriteIcon.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,WAAW;EACX,YAAY;;EAEZ,eAAe;EACf,UAAU;AACZ",sourcesContent:[".favorite-icon {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 26px;\r\n  height: 26px;\r\n\r\n  cursor: pointer;\r\n  z-index: 1;\r\n}\r\n"],sourceRoot:""}]);const o=i},52:(t,e,n)=>{n.d(e,{Z:()=>o});var r=n(537),a=n.n(r),s=n(645),i=n.n(s)()(a());i.push([t.id,".form-fieldset {\r\n  border: none;\r\n}\r\n\r\n.form-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 36px;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/formItem/formItem.css"],names:[],mappings:"AAAA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;;EAEtB,mBAAmB;AACrB",sourcesContent:[".form-fieldset {\r\n  border: none;\r\n}\r\n\r\n.form-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 36px;\r\n}\r\n"],sourceRoot:""}]);const o=i},239:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".gnb {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 64px;\r\n\r\n  padding: 0 16px;\r\n\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.gnb__title {\r\n  color: #fcfcfd;\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/components/header/header.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,YAAY;;EAEZ,eAAe;;EAEf,sCAAsC;AACxC;;AAEA;EACE,cAAc;AAChB",sourcesContent:["@import url('../../styles/style.css');\r\n\r\n.gnb {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 64px;\r\n\r\n  padding: 0 16px;\r\n\r\n  background-color: var(--primary-color);\r\n}\r\n\r\n.gnb__title {\r\n  color: #fcfcfd;\r\n}\r\n\r\n"],sourceRoot:""}]);const c=l},116:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".nothing__restaurant {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n\r\n.nothing__ment {\r\n  text-align: center;\r\n  color: var(--grey-500);\r\n}","",{version:3,sources:["webpack://./src/components/listContainer/ListContainer.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;;EAEnB,WAAW;EACX,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;AACxB",sourcesContent:["@import url('../../styles/style.css');\r\n\r\n.nothing__restaurant {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  width: 100%;\r\n  height: 400px;\r\n}\r\n\r\n.nothing__ment {\r\n  text-align: center;\r\n  color: var(--grey-500);\r\n}"],sourceRoot:""}]);const c=l},577:(t,e,n)=>{n.d(e,{Z:()=>o});var r=n(537),a=n.n(r),s=n(645),i=n.n(s)()(a());i.push([t.id,".modal {\r\n  display: none;\r\n}\r\n\r\n.modal--open {\r\n  display: block;\r\n}\r\n\r\n.modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  background: rgba(0, 0, 0, 0.35);\r\n}\r\n\r\n.modal-container {\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 80%;\r\n  overflow-y: scroll;\r\n\r\n  padding: 32px 16px;\r\n  z-index: 2;\r\n\r\n  border-radius: 8px 8px 0px 0px;\r\n  background: var(--grey-100);\r\n}\r\n\r\n.modal-title {\r\n  margin-bottom: 36px;\r\n}\r\n\r\n.detail-modal {\r\n  display: none;\r\n}\r\n\r\n.detail-modal--open {\r\n  display: block;\r\n}\r\n\r\n.detail-modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  background: rgba(0, 0, 0, 0.35);\r\n}\r\n\r\n.detail-modal-container {\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 80%;\r\n  overflow-y: scroll;\r\n  z-index: 2;\r\n\r\n  padding: 32px 16px;\r\n\r\n  border-radius: 8px 8px 0px 0px;\r\n  background: var(--grey-100);\r\n}\r\n","",{version:3,sources:["webpack://./src/components/modal/modal.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;;EAEP,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,OAAO;EACP,SAAS;EACT,WAAW;EACX,WAAW;EACX,kBAAkB;;EAElB,kBAAkB;EAClB,UAAU;;EAEV,8BAA8B;EAC9B,2BAA2B;AAC7B;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;;EAEP,+BAA+B;AACjC;;AAEA;EACE,eAAe;EACf,OAAO;EACP,SAAS;EACT,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,UAAU;;EAEV,kBAAkB;;EAElB,8BAA8B;EAC9B,2BAA2B;AAC7B",sourcesContent:[".modal {\r\n  display: none;\r\n}\r\n\r\n.modal--open {\r\n  display: block;\r\n}\r\n\r\n.modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  background: rgba(0, 0, 0, 0.35);\r\n}\r\n\r\n.modal-container {\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 80%;\r\n  overflow-y: scroll;\r\n\r\n  padding: 32px 16px;\r\n  z-index: 2;\r\n\r\n  border-radius: 8px 8px 0px 0px;\r\n  background: var(--grey-100);\r\n}\r\n\r\n.modal-title {\r\n  margin-bottom: 36px;\r\n}\r\n\r\n.detail-modal {\r\n  display: none;\r\n}\r\n\r\n.detail-modal--open {\r\n  display: block;\r\n}\r\n\r\n.detail-modal-backdrop {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  background: rgba(0, 0, 0, 0.35);\r\n}\r\n\r\n.detail-modal-container {\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 80%;\r\n  overflow-y: scroll;\r\n  z-index: 2;\r\n\r\n  padding: 32px 16px;\r\n\r\n  border-radius: 8px 8px 0px 0px;\r\n  background: var(--grey-100);\r\n}\r\n"],sourceRoot:""}]);const o=i},465:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".detail__container {\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.detail__field {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.detail__title {\r\n  margin-top: 16px;\r\n}\r\n\r\n.restaurant__distance {\r\n  color: var(--primary-color);\r\n}\r\n\r\n.restaurant__description {\r\n  display: -webkit-box;\r\n\r\n  padding-top: 8px;\r\n\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.restaurant__link {\r\n  color: var(--grey-500);\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 16px;\r\n}\r\n\r\n.button-container button {\r\n  flex: 1;\r\n}","",{version:3,sources:["webpack://./src/components/restaurantDetail/RestaurantDetail.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,oBAAoB;;EAEpB,gBAAgB;;EAEhB,gBAAgB;EAChB,uBAAuB;EACvB,qBAAqB;EACrB,4BAA4B;AAC9B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,OAAO;AACT",sourcesContent:["@import url('../../styles/style.css');\r\n\r\n.detail__container {\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n}\r\n\r\n.detail__field {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.detail__title {\r\n  margin-top: 16px;\r\n}\r\n\r\n.restaurant__distance {\r\n  color: var(--primary-color);\r\n}\r\n\r\n.restaurant__description {\r\n  display: -webkit-box;\r\n\r\n  padding-top: 8px;\r\n\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.restaurant__link {\r\n  color: var(--grey-500);\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n  width: 100%;\r\n  margin-top: 16px;\r\n}\r\n\r\n.button-container button {\r\n  flex: 1;\r\n}"],sourceRoot:""}]);const c=l},127:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".restaurant {\r\n  display: flex;\r\n  position: relative;\r\n  align-items: flex-start;\r\n\r\n  margin: 16px 8px 0 8px;\r\n  padding-bottom: 16px;\r\n  border-bottom: 1px solid #e9eaed;\r\n}\r\n\r\n.restaurant__info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.restaurant__name {\r\n  margin: 0;\r\n}\r\n\r\n.restaurant__distance {\r\n  color: var(--primary-color);\r\n}\r\n\r\n.restaurant__description {\r\n  display: -webkit-box;\r\n\r\n  padding-top: 8px;\r\n\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/restaurant/restaurant.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,uBAAuB;;EAEvB,sBAAsB;EACtB,oBAAoB;EACpB,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,2BAA2B;AAC7B;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,oBAAoB;;EAEpB,gBAAgB;;EAEhB,gBAAgB;EAChB,uBAAuB;EACvB,qBAAqB;EACrB,4BAA4B;AAC9B",sourcesContent:["@import url('../../styles/style.css');\r\n\r\n.restaurant {\r\n  display: flex;\r\n  position: relative;\r\n  align-items: flex-start;\r\n\r\n  margin: 16px 8px 0 8px;\r\n  padding-bottom: 16px;\r\n  border-bottom: 1px solid #e9eaed;\r\n}\r\n\r\n.restaurant__info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.restaurant__name {\r\n  margin: 0;\r\n}\r\n\r\n.restaurant__distance {\r\n  color: var(--primary-color);\r\n}\r\n\r\n.restaurant__description {\r\n  display: -webkit-box;\r\n\r\n  padding-top: 8px;\r\n\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n"],sourceRoot:""}]);const c=l},553:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".tab {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  border-bottom: 2px solid var(--grey-200);\r\n}","",{version:3,sources:["webpack://./src/components/tab/Tab.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,WAAW;EACX,YAAY;;EAEZ,wCAAwC;AAC1C",sourcesContent:["@import url('../../styles/style.css');\r\n\r\n.tab {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  border-bottom: 2px solid var(--grey-200);\r\n}"],sourceRoot:""}]);const c=l},710:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,'.tab-element {\r\n  position: relative;\r\n  flex: 1;\r\n  color: var(--grey-300);\r\n  background-color: transparent;\r\n  border: none;\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n.indicator {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  width: 100%;\r\n  content: "";\r\n}\r\n\r\n.indicator-active {\r\n  border-bottom: 2px solid var(--primary-color);\r\n}\r\n\r\n.tab-element-active {\r\n  color: var(--primary-color);\r\n}\r\n\r\n',"",{version:3,sources:["webpack://./src/components/tab/TabElement.css"],names:[],mappings:"AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,sBAAsB;EACtB,6BAA6B;EAC7B,YAAY;;EAEZ,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,WAAW;EACX,WAAW;AACb;;AAEA;EACE,6CAA6C;AAC/C;;AAEA;EACE,2BAA2B;AAC7B",sourcesContent:["@import url('../../styles/style.css');\r\n\r\n.tab-element {\r\n  position: relative;\r\n  flex: 1;\r\n  color: var(--grey-300);\r\n  background-color: transparent;\r\n  border: none;\r\n\r\n  cursor: pointer;\r\n}\r\n\r\n.indicator {\r\n  position: absolute;\r\n  bottom: -2px;\r\n  width: 100%;\r\n  content: \"\";\r\n}\r\n\r\n.indicator-active {\r\n  border-bottom: 2px solid var(--primary-color);\r\n}\r\n\r\n.tab-element-active {\r\n  color: var(--primary-color);\r\n}\r\n\r\n"],sourceRoot:""}]);const c=l},365:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".gnb__button {\r\n  height: 40px;\r\n\r\n  border: none;\r\n  border-radius: 8px;\r\n  background: transparent;\r\n\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.gnb__button img {\r\n  display: block;\r\n  width: 40px;\r\n  height: 40px;\r\n  object-fit: contain;\r\n}\r\n\r\n.button {\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  margin-right: 16px;\r\n\r\n  border: none;\r\n  border-radius: 8px;\r\n\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n}\r\n\r\n.button:last-child {\r\n  margin-right: 0;\r\n}\r\n\r\n.secondary__button {\r\n  border: 1px solid var(--grey-300);\r\n  background: transparent;\r\n\r\n  color: var(--grey-300);\r\n}\r\n\r\n.primary__button {\r\n  background: var(--primary-color);\r\n\r\n  color: var(--grey-100);\r\n}\r\n\r\n.button:disabled {\r\n  background: var(--grey-300);\r\n\r\n  color: var(--grey-100);\r\n  cursor: not-allowed;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/tag/button/button.css"],names:[],mappings:"AAEA;EACE,YAAY;;EAEZ,YAAY;EACZ,kBAAkB;EAClB,uBAAuB;;EAEvB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;;EAEZ,kBAAkB;;EAElB,YAAY;EACZ,kBAAkB;;EAElB,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iCAAiC;EACjC,uBAAuB;;EAEvB,sBAAsB;AACxB;;AAEA;EACE,gCAAgC;;EAEhC,sBAAsB;AACxB;;AAEA;EACE,2BAA2B;;EAE3B,sBAAsB;EACtB,mBAAmB;AACrB",sourcesContent:["@import url('../../../styles/style.css');\r\n\r\n.gnb__button {\r\n  height: 40px;\r\n\r\n  border: none;\r\n  border-radius: 8px;\r\n  background: transparent;\r\n\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n.gnb__button img {\r\n  display: block;\r\n  width: 40px;\r\n  height: 40px;\r\n  object-fit: contain;\r\n}\r\n\r\n.button {\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  margin-right: 16px;\r\n\r\n  border: none;\r\n  border-radius: 8px;\r\n\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n}\r\n\r\n.button:last-child {\r\n  margin-right: 0;\r\n}\r\n\r\n.secondary__button {\r\n  border: 1px solid var(--grey-300);\r\n  background: transparent;\r\n\r\n  color: var(--grey-300);\r\n}\r\n\r\n.primary__button {\r\n  background: var(--primary-color);\r\n\r\n  color: var(--grey-100);\r\n}\r\n\r\n.button:disabled {\r\n  background: var(--grey-300);\r\n\r\n  color: var(--grey-100);\r\n  cursor: not-allowed;\r\n}\r\n"],sourceRoot:""}]);const c=l},731:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".text-caption {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-weight: 400;\r\n}\r\n\r\n.help-text {\r\n  color: var(--grey-300);\r\n}\r\n","",{version:3,sources:["webpack://./src/components/tag/caption/caption.css"],names:[],mappings:"AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,sBAAsB;AACxB",sourcesContent:["@import url('../../../styles/style.css');\r\n\r\n.text-caption {\r\n  font-size: 14px;\r\n  line-height: 20px;\r\n  font-weight: 400;\r\n}\r\n\r\n.help-text {\r\n  color: var(--grey-300);\r\n}\r\n"],sourceRoot:""}]);const c=l},148:(t,e,n)=>{n.d(e,{Z:()=>o});var r=n(537),a=n.n(r),s=n(645),i=n.n(s)()(a());i.push([t.id,".category-icon {\r\n  width: 36px;\r\n  height: 36px;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/tag/image/image.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,YAAY;AACd",sourcesContent:[".category-icon {\r\n  width: 36px;\r\n  height: 36px;\r\n}\r\n"],sourceRoot:""}]);const o=i},526:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".form-item input {\r\n  padding: 8px;\r\n  margin: 6px 0;\r\n\r\n  border: 1px solid var(--grey-200);\r\n  border-radius: 8px;\r\n\r\n  font-size: 16px;\r\n}\r\n\r\ninput[name='name'],\r\ninput[name='link'] {\r\n  height: 44px;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/tag/input/input.css"],names:[],mappings:"AAEA;EACE,YAAY;EACZ,aAAa;;EAEb,iCAAiC;EACjC,kBAAkB;;EAElB,eAAe;AACjB;;AAEA;;EAEE,YAAY;AACd",sourcesContent:["@import url('../../../styles/style.css');\r\n\r\n.form-item input {\r\n  padding: 8px;\r\n  margin: 6px 0;\r\n\r\n  border: 1px solid var(--grey-200);\r\n  border-radius: 8px;\r\n\r\n  font-size: 16px;\r\n}\r\n\r\ninput[name='name'],\r\ninput[name='link'] {\r\n  height: 44px;\r\n}\r\n"],sourceRoot:""}]);const c=l},157:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".form-item label {\r\n  color: var(--grey-400);\r\n  font-size: 14px;\r\n}\r\n\r\n.form-item--required label::after {\r\n  padding-left: 4px;\r\n\r\n  color: var(--primary-color);\r\n  content: '*';\r\n}\r\n","",{version:3,sources:["webpack://./src/components/tag/label/label.css"],names:[],mappings:"AAEA;EACE,sBAAsB;EACtB,eAAe;AACjB;;AAEA;EACE,iBAAiB;;EAEjB,2BAA2B;EAC3B,YAAY;AACd",sourcesContent:["@import url('../../../styles/style.css');\r\n\r\n.form-item label {\r\n  color: var(--grey-400);\r\n  font-size: 14px;\r\n}\r\n\r\n.form-item--required label::after {\r\n  padding-left: 4px;\r\n\r\n  color: var(--primary-color);\r\n  content: '*';\r\n}\r\n"],sourceRoot:""}]);const c=l},770:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".form-item select {\r\n  height: 44px;\r\n  padding: 8px;\r\n  margin: 6px 0;\r\n\r\n  border: 1px solid var(--grey-200);\r\n  border-radius: 8px;\r\n\r\n  font-size: 16px;\r\n  color: var(--grey-300);\r\n}\r\n\r\n.restaurant-filter-container select {\r\n  height: 44px;\r\n  min-width: 125px;\r\n\r\n  border: 1px solid #d0d5dd;\r\n  border-radius: 8px;\r\n  background: transparent;\r\n\r\n  font-size: 16px;\r\n}\r\n\r\n\r\n","",{version:3,sources:["webpack://./src/components/tag/select/select.css"],names:[],mappings:"AAEA;EACE,YAAY;EACZ,YAAY;EACZ,aAAa;;EAEb,iCAAiC;EACjC,kBAAkB;;EAElB,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,gBAAgB;;EAEhB,yBAAyB;EACzB,kBAAkB;EAClB,uBAAuB;;EAEvB,eAAe;AACjB",sourcesContent:["@import url('../../../styles/style.css');\r\n\r\n.form-item select {\r\n  height: 44px;\r\n  padding: 8px;\r\n  margin: 6px 0;\r\n\r\n  border: 1px solid var(--grey-200);\r\n  border-radius: 8px;\r\n\r\n  font-size: 16px;\r\n  color: var(--grey-300);\r\n}\r\n\r\n.restaurant-filter-container select {\r\n  height: 44px;\r\n  min-width: 125px;\r\n\r\n  border: 1px solid #d0d5dd;\r\n  border-radius: 8px;\r\n  background: transparent;\r\n\r\n  font-size: 16px;\r\n}\r\n\r\n\r\n"],sourceRoot:""}]);const c=l},212:(t,e,n)=>{n.d(e,{Z:()=>c});var r=n(537),a=n.n(r),s=n(645),i=n.n(s),o=n(890),l=i()(a());l.i(o.Z),l.push([t.id,".form-item textarea {\r\n  padding: 8px;\r\n  margin: 6px 0;\r\n\r\n  border: 1px solid var(--grey-200);\r\n  border-radius: 8px;\r\n\r\n  font-size: 16px;\r\n}\r\n\r\n.form-item textarea {\r\n  resize: none;\r\n}\r\n","",{version:3,sources:["webpack://./src/components/tag/textarea/textarea.css"],names:[],mappings:"AAEA;EACE,YAAY;EACZ,aAAa;;EAEb,iCAAiC;EACjC,kBAAkB;;EAElB,eAAe;AACjB;;AAEA;EACE,YAAY;AACd",sourcesContent:["@import url('../../../styles/style.css');\r\n\r\n.form-item textarea {\r\n  padding: 8px;\r\n  margin: 6px 0;\r\n\r\n  border: 1px solid var(--grey-200);\r\n  border-radius: 8px;\r\n\r\n  font-size: 16px;\r\n}\r\n\r\n.form-item textarea {\r\n  resize: none;\r\n}\r\n"],sourceRoot:""}]);const c=l},890:(t,e,n)=>{n.d(e,{Z:()=>o});var r=n(537),a=n.n(r),s=n(645),i=n.n(s)()(a());i.push([t.id,"* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nul,\r\nli {\r\n  list-style: none;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n}\r\n\r\n/* Colors *****************************************/\r\n:root {\r\n  --primary-color: #ec4a0a;\r\n  --lighten-color: #f6a88a;\r\n  --grey-100: #ffffff;\r\n  --grey-200: #d0d5dd;\r\n  --grey-300: #667085;\r\n  --grey-400: #344054;\r\n  --grey-500: #000000;\r\n}\r\n\r\nmain {\r\n  padding: 16px;\r\n}\r\n\r\n/* Typography *************************************/\r\n.text-title {\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.text-subtitle {\r\n  font-size: 18px;\r\n  line-height: 28px;\r\n  font-weight: 600;\r\n}\r\n\r\n.text-body {\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  font-weight: 400;\r\n}\r\n\r\n/* 카테고리/정렬 필터 */\r\n.restaurant-filter-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  padding: 0 16px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.restaurant-filter {\r\n  padding: 8px;\r\n}\r\n\r\n/* 음식점 목록 */\r\n.restaurant-list-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 0 16px;\r\n  margin: 16px 0;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n}\r\n","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;;EAEE,uBAAuB;EACvB,eAAe;AACjB;;AAEA,mDAAmD;AACnD;EACE,wBAAwB;EACxB,wBAAwB;EACxB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,aAAa;AACf;;AAEA,mDAAmD;AACnD;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA,eAAe;AACf;EACE,aAAa;EACb,8BAA8B;;EAE9B,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,YAAY;AACd;;AAEA,WAAW;AACX;EACE,aAAa;EACb,sBAAsB;;EAEtB,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,aAAa;AACf",sourcesContent:["* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nul,\r\nli {\r\n  list-style: none;\r\n}\r\n\r\nhtml,\r\nbody {\r\n  font-family: sans-serif;\r\n  font-size: 16px;\r\n}\r\n\r\n/* Colors *****************************************/\r\n:root {\r\n  --primary-color: #ec4a0a;\r\n  --lighten-color: #f6a88a;\r\n  --grey-100: #ffffff;\r\n  --grey-200: #d0d5dd;\r\n  --grey-300: #667085;\r\n  --grey-400: #344054;\r\n  --grey-500: #000000;\r\n}\r\n\r\nmain {\r\n  padding: 16px;\r\n}\r\n\r\n/* Typography *************************************/\r\n.text-title {\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.text-subtitle {\r\n  font-size: 18px;\r\n  line-height: 28px;\r\n  font-weight: 600;\r\n}\r\n\r\n.text-body {\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  font-weight: 400;\r\n}\r\n\r\n/* 카테고리/정렬 필터 */\r\n.restaurant-filter-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  padding: 0 16px;\r\n  margin-top: 24px;\r\n}\r\n\r\n.restaurant-filter {\r\n  padding: 8px;\r\n}\r\n\r\n/* 음식점 목록 */\r\n.restaurant-list-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 0 16px;\r\n  margin: 16px 0;\r\n}\r\n\r\n.button-container {\r\n  display: flex;\r\n}\r\n"],sourceRoot:""}]);const o=i},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,a,s){"string"==typeof t&&(t=[[null,t,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(i[l]=!0)}for(var c=0;c<t.length;c++){var d=[].concat(t[c]);r&&i[d[0]]||(void 0!==s&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=s),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},537:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(a," */");return[e].concat([s]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var s={},i=[],o=0;o<t.length;o++){var l=t[o],c=r.base?l[0]+r.base:l[0],d=s[c]||0,A="".concat(c," ").concat(d);s[c]=d+1;var p=n(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,r);r.byIndex=o,e.splice(o,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,a){var s=r(t=t||[],a=a||{});return function(t){t=t||[];for(var i=0;i<s.length;i++){var o=n(s[i]);e[o].references--}for(var l=r(t,a),c=0;c<s.length;c++){var d=n(s[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}s=l}}},569:t=>{var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(r){var a=e[r];if(void 0!==a)return a.exports;var s=e[r]={id:r,exports:{}};return t[r](s,s.exports,n),s.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{var t=n(379),e=n.n(t),r=n(795),a=n.n(r),s=n(569),i=n.n(s),o=n(565),l=n.n(o),c=n(216),d=n.n(c),A=n(589),p=n.n(A),u=n(890),m={};m.styleTagTransform=p(),m.setAttributes=l(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const h={CATEGORY:{whole:"전체",koreanFood:"한식",chineseFood:"중식",japaneseFood:"일식",westernFood:"양식",asianFood:"아시안",etc:"기타"},DISTANCE:[5,10,15,20,30],REGULAR_EXPRESSION:{URL:/(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/}},{CATEGORY:E}=h,g={empty(t){if(t.length<=0)throw new Error("카테고리 입력은 필수입니다.")},exist(t){if(!Object.values(E).map(String).includes(t))throw new Error("존재하지 않는 카테고리입니다. 당신 어느 나라 사람인가요?")}},C={empty(t){if(t.length<=0)throw new Error("이름을 입력하세요.")}},{DISTANCE:x}=h,b={empty(t){if(void 0===t)throw new Error("입력값이 비어있습니다.")},exist(t){if(!x.includes(t))throw new Error("당신 저를 어디까지 보낼 생각인거죠?")}},{CATEGORY:v}=h,f={addData(t,e){const n=localStorage.getItem(t);if(null===n)return void localStorage.setItem(t,JSON.stringify([e]));const r=[...JSON.parse(n),e];localStorage.setItem(t,JSON.stringify(r))},getData(t){const e=localStorage.getItem(t);return null===e?[]:JSON.parse(e)},modifyData(t,e){null!==localStorage.getItem(t)&&localStorage.setItem(t,JSON.stringify(e))}},B=Object.freeze({MATZIP_DATA:"matzipData",FAVORITE_DATA:"favoriteData"});function y(t){if(""===t||void 0===t)throw alert("잘못된 셀렉터 값입니다."),new Error("잘못된 셀렉터 값입니다.")}const w={$:t=>{y(t);const e=document.querySelector(t);return function(t,e){if(null===e)throw alert(`element를 찾을 수 없습니다, ${t}`),new Error("element를 찾을 수 없습니다")}(t,e),e},$$:t=>{y(t);const e=document.querySelectorAll(t);return function(t){if(0===t.length)throw alert("element를 찾을 수 없습니다,"),new Error("element를 찾을 수 없습니다")}(e),e},insertElementsInTarget(t,e){const n=document.createDocumentFragment();e.forEach((t=>{n.appendChild(t)})),t.appendChild(n)}};class k extends HTMLOptionElement{constructor(t){super();const{value:e,text:n}=t;this.value=e,this.textContent=n}}customElements.define("matzip-option",k,{extends:"option"});const T=k;var _=n(770),Z={};Z.styleTagTransform=p(),Z.setAttributes=l(),Z.insert=i().bind(null,"head"),Z.domAPI=a(),Z.insertStyleElement=d(),e()(_.Z,Z),_.Z&&_.Z.locals&&_.Z.locals;const{insertElementsInTarget:L}=w;class I extends HTMLSelectElement{constructor(t){super();const{name:e,id:n,classname:r,required:a,options:s}=t;this.name=e,this.id=n,void 0!==r&&this.classList.add(r),this.required=a,this.addOptions(s)}addOptions(t){const e=t.map((t=>new T(t)));L(this,e)}getValue(){return this.options[this.selectedIndex].value}isValidate(){return this.validity.valid}}customElements.define("matzip-select",I,{extends:"select"});const S=I;class F extends HTMLDivElement{constructor(){super(),this.className="restaurant-filter-container",this.category=this.createCategorySelect(),this.sort=this.createSortSelect(),this.setEvent()}setEvent(){this.categoryChange(),this.sortChange()}createCategorySelect(){const t=new S({name:"category",id:"category-filter",classname:"restaurant-filter",required:!0,options:[{value:"전체",text:"전체"},{value:"한식",text:"한식"},{value:"중식",text:"중식"},{value:"일식",text:"일식"},{value:"양식",text:"양식"},{value:"아시안",text:"아시안"},{value:"기타",text:"기타"}]});return this.appendChild(t),t}createSortSelect(){const t=new S({name:"sorting",id:"sorting-filter",classname:"restaurant-filter",required:!0,options:[{value:"name",text:"이름순"},{value:"distance",text:"거리순"}]});return this.appendChild(t),t}getFilterValues(){return{category:this.category.getValue(),sort:this.sort.getValue()}}categoryChange(){this.category.addEventListener("change",(()=>{const t=new CustomEvent("filterChange",{detail:{selectedCategory:this.category.getValue(),selectedSort:this.sort.getValue()}});document.dispatchEvent(t)}))}sortChange(){this.sort.addEventListener("change",(()=>{const t=new CustomEvent("filterChange",{detail:{selectedCategory:this.category.getValue(),selectedSort:this.sort.getValue()}});document.dispatchEvent(t)}))}}customElements.define("matzip-filter-container",F,{extends:"div"});const M=F,{$:R}=w;class z extends HTMLElement{constructor(){super(),this.className="tabpane",this.filterContainer=null,this.listContainer=null}removeTabPane(){this.replaceChildren(),this.filterContainer=null,this.listContainer=null}removeListContainer(){this.removeChild(R("#restaurant-lists")),this.listContainer=null}showContent(t){this.removeTabPane();const{filterContainer:e,listContainer:n}=t;void 0!==e&&(this.appendChild(e),this.filterContainer=e),this.appendChild(n),this.listContainer=n}showListChange(t){this.removeListContainer(),this.appendChild(t),this.listContainer=t}showListAppend(t){this.listContainer?.addRestaurants(t)}showListDelete(t){this.listContainer?.deleteRestaurant(t)}}customElements.define("matzip-tabpane",z,{extends:"section"});const D=z,Y=n.p+"add-button.png",j=n.p+"category-asian.png",N=n.p+"category-chinese.png",P=n.p+"category-etc.png",O=n.p+"category-japanese.png",W=n.p+"category-korean.png",H=n.p+"category-western.png",q=n.p+"favorite-icon-filled.png",V=n.p+"favorite-icon-lined.png";var U=n(365),$={};$.styleTagTransform=p(),$.setAttributes=l(),$.insert=i().bind(null,"head"),$.domAPI=a(),$.insertStyleElement=d(),e()(U.Z,$),U.Z&&U.Z.locals&&U.Z.locals;class X extends HTMLButtonElement{constructor(t){super();const{type:e,classnames:n,ariaLabel:r,children:a,disabled:s,varient:i}=t;this.type=e,void 0!==n&&this.classList.add(...n),this.classList.add(`${i}__button`),void 0!==r&&(this.ariaLabel=r),"string"==typeof a&&(this.textContent=a),a instanceof HTMLImageElement&&this.appendChild(a),void 0!==s&&(this.disabled=s)}}customElements.define("matzip-button",X,{extends:"button"});const J=X;var Q=n(148),G={};G.styleTagTransform=p(),G.setAttributes=l(),G.insert=i().bind(null,"head"),G.domAPI=a(),G.insertStyleElement=d(),e()(Q.Z,G),Q.Z&&Q.Z.locals&&Q.Z.locals;class K extends HTMLImageElement{constructor(t){super();const{src:e,alt:n,classnames:r}=t;this.src=e,void 0!==n&&(this.alt=n),void 0!==r&&this.classList.add(...r)}}customElements.define("matzip-image",K,{extends:"img"});const tt=K;var et=n(239),nt={};nt.styleTagTransform=p(),nt.setAttributes=l(),nt.insert=i().bind(null,"head"),nt.domAPI=a(),nt.insertStyleElement=d(),e()(et.Z,nt),et.Z&&et.Z.locals&&et.Z.locals;const{$:rt}=w;class at extends HTMLElement{constructor(){super(),this.className="gnb",this.createH1(),this.gnbButton=this.createButton(),this.openModal()}createH1(){const t=document.createElement("h1");t.classList.add("gnb__title","text-title"),t.textContent="점심 뭐 먹지",this.appendChild(t)}createButton(){const t={type:"button",varient:"gnb",ariaLabel:"음식점 추가",children:new tt({src:Y,alt:"음식점 추가"})},e=new J(t);return this.appendChild(e),e}openModal(){this.gnbButton.addEventListener("click",(()=>{rt(".modal").classList.add("modal--open")}))}}customElements.define("matzip-gnb",at,{extends:"header"});const st=at;var it=n(553),ot={};ot.styleTagTransform=p(),ot.setAttributes=l(),ot.insert=i().bind(null,"head"),ot.domAPI=a(),ot.insertStyleElement=d(),e()(it.Z,ot),it.Z&&it.Z.locals&&it.Z.locals;var lt=n(710),ct={};ct.styleTagTransform=p(),ct.setAttributes=l(),ct.insert=i().bind(null,"head"),ct.domAPI=a(),ct.insertStyleElement=d(),e()(lt.Z,ct),lt.Z&&lt.Z.locals&&lt.Z.locals;class dt extends HTMLButtonElement{constructor(t){super();const{active:e,tabName:n,index:r}=t;this.classList.add("tab-element","text-subtitle"),this.textContent=n,this.index=r,this.active=e,this.indicator=this.createIndicator(),this.initTab()}createIndicator(){const t=document.createElement("div");return t.classList.add("indicator"),this.appendChild(t),t}setActive(){this.active=!0,this.classList.add("tab-element-active"),this.indicator.classList.add("indicator-active")}setInactive(){this.active=!1,this.classList.remove("tab-element-active"),this.indicator.classList.remove("indicator-active")}initTab(){this.active?this.setActive():this.setInactive()}tabClick(t,e){this.addEventListener("click",(()=>{t(),this.setActive(),e(this.index);const n=new CustomEvent("tabChangeEvent",{detail:{activeTabIndex:this.index}});document.dispatchEvent(n)}))}}customElements.define("matzip-tab-element",dt,{extends:"button"});const At=dt,{insertElementsInTarget:pt}=w;class ut extends HTMLDivElement{constructor(t){super(),this.className="tab",this.activeIndex=0,this.tabElements=this.createTabElements(t),this.listenTabChange()}createTabElements(t){const e=t.map(((t,e)=>new At({active:e===this.activeIndex,tabName:t,index:e})));return pt(this,e),e}listenTabChange(){this.tabElements.forEach((t=>{t.tabClick(this.clearActivate.bind(this),this.setActiveTab.bind(this))}))}clearActivate(){this.tabElements.forEach((t=>t.setInactive()))}setActiveTab(t){this.activeIndex=t}}customElements.define("matzip-tab",ut,{extends:"div"});const mt=ut;var ht=n(127),Et={};Et.styleTagTransform=p(),Et.setAttributes=l(),Et.insert=i().bind(null,"head"),Et.domAPI=a(),Et.insertStyleElement=d(),e()(ht.Z,Et),ht.Z&&ht.Z.locals&&ht.Z.locals;var gt=n(577),Ct={};Ct.styleTagTransform=p(),Ct.setAttributes=l(),Ct.insert=i().bind(null,"head"),Ct.domAPI=a(),Ct.insertStyleElement=d(),e()(gt.Z,Ct),gt.Z&&gt.Z.locals&&gt.Z.locals;class xt extends HTMLDivElement{constructor(t){super(),this.className=t.classname,this.modalBackdrop=this.createBackdrop(t),this.modalContainer=this.createModalContainer(t)}createBackdrop({classname:t}){const e=document.createElement("div");return e.className=`${t}-backdrop`,this.appendChild(e),e}createModalContainer({classname:t,child:e,title:n}){const r=document.createElement("div");if(r.className=`${t}-container`,void 0!==n){const t=document.createElement("h2");t.className="modal-title";const e=["modal-title","text-title"];t.textContent=n,t.classList.add(...e),r.appendChild(t)}return r.appendChild(e),this.appendChild(r),r}stopEventBubbling(){this.modalContainer.addEventListener("click",(t=>{t.stopPropagation()}))}backdropClick(t,e){this.modalBackdrop.addEventListener("click",(()=>{t.toggleModal(e)}))}toggleModal(t){this.classList.toggle(`${t}--open`)}}customElements.define("matzip-modal",xt,{extends:"div"});const bt=xt;var vt=n(465),ft={};ft.styleTagTransform=p(),ft.setAttributes=l(),ft.insert=i().bind(null,"head"),ft.domAPI=a(),ft.insertStyleElement=d(),e()(vt.Z,ft),vt.Z&&vt.Z.locals&&vt.Z.locals;var Bt=n(850),yt={};yt.styleTagTransform=p(),yt.setAttributes=l(),yt.insert=i().bind(null,"head"),yt.domAPI=a(),yt.insertStyleElement=d(),e()(Bt.Z,yt),Bt.Z&&Bt.Z.locals&&Bt.Z.locals;const wt={한식:W,중식:N,일식:O,양식:H,아시안:j,기타:P,전체:""};class kt extends HTMLDivElement{constructor(t){super(),this.className="restaurant__category",this.createRestaurantCategory(t)}createRestaurantCategory(t){const e=document.createElement("img");e.setAttribute("src",wt[t]),e.setAttribute("alt",t),e.className="category-icon",this.appendChild(e)}}customElements.define("matzip-category-image",kt,{extends:"div"});const Tt=kt;var _t=n(135),Zt={};Zt.styleTagTransform=p(),Zt.setAttributes=l(),Zt.insert=i().bind(null,"head"),Zt.domAPI=a(),Zt.insertStyleElement=d(),e()(_t.Z,Zt),_t.Z&&_t.Z.locals&&_t.Z.locals;class Lt extends HTMLImageElement{constructor({active:t,isChild:e,changeState:n}){super(),this.active=t,this.src=this.showStarIcon(),this.alt="favorite-icon",this.className="favorite-icon",e?this.classList.add("favorite-icon-cloned"):this.classList.add("favorite-icon-origin"),this.stopEventBubbling(),this.listenChangeState(n)}showStarIcon(){return this.active?q:V}listenChangeState({addFavorite:t,deleteFavorite:e,targetId:n}){this.addEventListener("click",(r=>{r.stopPropagation(),this.active?e():t(),this.active=!this.active,this.src=this.showStarIcon();const a=new CustomEvent("iconStateChange",{detail:{targetId:n,state:this.active}});document.dispatchEvent(a)}))}stopEventBubbling(){this.addEventListener("click",(t=>{t.stopPropagation()}))}}customElements.define("matzip-favorite-icon",Lt,{extends:"img"});const It=Lt,{$:St}=w,{FAVORITE_DATA:Ft}=B;class Mt extends HTMLDivElement{constructor(t,e){super(),this.id=t.id,this.className="detail__container",this.createLayout(t);const{cancelButton:n,deleteButton:r}=this.createButtons();this.cancelButton=n,this.deleteButton=r,this.favoriteIcon=e,this.appendChild(this.favoriteIcon),this.listenRerender()}createLayout({category:t,name:e,distance:n,introduction:r,link:a}){this.createCategoryImage(t),this.createRestaurantName(e),this.createDistance(n),this.createIntroduction(r),this.createLink(a)}createCategoryImage(t){const e=new Tt(t);this.appendChild(e)}createRestaurantName(t){const e=document.createElement("h2");e.classList.add("text-subtitle","detail__field","detail__title"),e.textContent=t,this.appendChild(e)}createDistance(t){const e=document.createElement("span");e.classList.add("restaurant__distance","text-body","detail__field"),e.textContent=`캠퍼스부터 ${t}분 내`,this.appendChild(e)}createIntroduction(t){if(void 0===t)return;const e=document.createElement("p");e.classList.add("restaurant__description","text-body","detail__field"),e.textContent=t,this.appendChild(e)}createLink(t){if(void 0===t||""===t)return void this.createLinkFallback();const e=document.createElement("a");e.classList.add("restaurant__link","text-body","detail__field"),e.href=t,e.textContent=t,e.target="blank",this.appendChild(e)}createLinkFallback(){const t=document.createElement("p");t.classList.add("restaurant__description","text-body","detail__field"),t.textContent="등록된 url이 없습니다ㅜㅜ",this.appendChild(t)}createButtons(){const t=document.createElement("div");t.setAttribute("class","button-container");const e={cancelButton:new J({type:"button",classnames:["button","text-caption","detail-modal--close"],varient:"primary",children:"닫기"}),deleteButton:new J({type:"button",classnames:["button","text-caption","delete-restaurant-button"],varient:"secondary",children:"삭제하기"})};return t.appendChild(e.deleteButton),t.appendChild(e.cancelButton),this.appendChild(t),e}listenCloseButtonClick(){this.cancelButton.addEventListener("click",(()=>{this.parentElement?.parentElement.toggleModal("detail-modal")}))}listenDeleteButonClick(t){this.deleteButton.addEventListener("click",(()=>{window.confirm("정말 삭제하시겠습니까?")&&(t(),this.dispatchRestaurantDeleteEvent())}))}dispatchRestaurantDeleteEvent(){const t=new CustomEvent("deleteRestaurant",{detail:{targetId:this.id}});document.dispatchEvent(t)}getChangeState(t){return{addFavorite:()=>{Ce.matzip.addFavorite(t),f.addData(Ft,t)},deleteFavorite:()=>{Ce.matzip.deleteFavorite(t),f.modifyData(Ft,Ce.matzip.getMyFavorites())},targetId:t}}listenRerender(){document.addEventListener("iconStateChange",(t=>{const e=t,{targetId:n,state:r}=e.detail,a=new It({active:r,isChild:!1,changeState:this.getChangeState(n)}),s=St(`#restaurant-list${n}`).querySelector(".favorite-icon-origin");St(`#restaurant-list${n}`).replaceChild(a,s)}))}}customElements.define("matzip-restaurant-detail-modal",Mt,{extends:"div"});const Rt=Mt,{$:zt}=w,{FAVORITE_DATA:Dt}=B;class Yt extends HTMLLIElement{constructor(t,e){super(),this.id=`restaurant-list${t.id}`,this.className="restaurant",this.createLayout(t),this.favoriteIcon=this.createFavoriteIcon(t,e);const{modal:n,content:r}=this.createDetailModal(t,e);this.modal=n,this.content=r,this.listenOpenDetailModal(),this.listenCancelButtonClick(),this.listenDeleteButtonClick(),this.listenRerender()}rerenderModal(t,e){const{modal:n,content:r}=this.createDetailModal(t,e);this.modal=n,this.content=r,this.listenOpenDetailModal(),this.listenCancelButtonClick(),this.listenDeleteButtonClick()}createLayout(t){const e=document.createDocumentFragment(),n=new Tt(t.category),r=this.createRestaurantInfo(t);e.appendChild(n),e.appendChild(r),this.appendChild(e)}createFavoriteIcon(t,e){const n=new It({active:e,isChild:!1,changeState:this.getChangeState(t.id)});return this.appendChild(n),n}createRestaurantInfo(t){const{name:e,distance:n,introduction:r}=t,a=document.createElement("div");a.className="restaurant__info";const s=document.createElement("h3");s.classList.add("restaurant__name","text-subtitle"),s.textContent=e;const i=document.createElement("span");i.classList.add("restaurant__distance","text-body"),i.textContent=`캠퍼스부터 ${n}분 내`;const o=document.createElement("p");return o.classList.add("restaurant__description","text-body"),o.textContent=r??"",a.appendChild(s),a.appendChild(i),a.appendChild(o),a}createDetailModal(t,e){const n=new Rt(t,function(t,e,n){const r=new It({active:e,isChild:!0,changeState:n});return r.showStarIcon=t.showStarIcon,r.listenChangeState=t.listenChangeState,r}(this.favoriteIcon,e,this.getChangeState(t.id))),r=new bt({classname:"detail-modal",child:n});return this.appendChild(r),{modal:r,content:n}}listenOpenDetailModal(){this.addEventListener("click",(()=>{this.modal.stopEventBubbling(),this.toggleModal()}))}toggleModal(){this.modal.toggleModal("detail-modal")}listenCancelButtonClick(){this.content.listenCloseButtonClick()}listenDeleteButtonClick(){this.content.listenDeleteButonClick(this.toggleModal.bind(this))}getChangeState(t){return{addFavorite:()=>{Ce.matzip.addFavorite(t),f.addData(Dt,t)},deleteFavorite:()=>{Ce.matzip.deleteFavorite(t),f.modifyData(Dt,Ce.matzip.getMyFavorites())},targetId:t}}listenRerender(){document.addEventListener("iconStateChange",(t=>{const e=t,{targetId:n,state:r}=e.detail,a=new It({active:r,isChild:!0,changeState:this.getChangeState(n)}),s=zt(`#${n}`).querySelector(".favorite-icon-cloned");zt(`#${n}`).replaceChild(a,s)}))}}customElements.define("restaurant-list-container",Yt,{extends:"li"});const jt=Yt;var Nt=n(116),Pt={};Pt.styleTagTransform=p(),Pt.setAttributes=l(),Pt.insert=i().bind(null,"head"),Pt.domAPI=a(),Pt.insertStyleElement=d(),e()(Nt.Z,Pt),Nt.Z&&Nt.Z.locals&&Nt.Z.locals;const{insertElementsInTarget:Ot}=w;class Wt extends HTMLUListElement{constructor(t){super(),this.id="restaurant-lists",this.className="restaurant-lists",this.fallbackUI=null,this.restaurants=this.createRestaurants(t)}createRestaurants(t){return 0===t.length?(this.fallbackUI=this.createFallback(),[]):(Ot(this,t),t)}createFallback(){const t=document.createElement("div");t.id="nothing__restaurant",t.classList.add("nothing__restaurant");const e=document.createElement("p");return e.classList.add("text-title","nothing__ment"),e.textContent="어머나 등록된 맛집이 없어요ㅠ",t.appendChild(e),this.appendChild(t),t}addRestaurants(t){this.appendChild(t),0===this.restaurants.length&&null!==this.fallbackUI&&this.removeChild(this.fallbackUI),this.restaurants.push(t)}deleteRestaurant(t){const e=this.restaurants.find((e=>e.id===`restaurant-list${t}`)),n=this.restaurants.findIndex((e=>e.id===`restaurant-list${t}`));void 0!==e&&(this.removeChild(e),this.restaurants.splice(n,1),0===this.restaurants.length&&null===this.fallbackUI&&(this.fallbackUI=this.createFallback()))}get restaurantCount(){return this.restaurants.length}}customElements.define("matzip-list-container",Wt,{extends:"ul"});const Ht=Wt;var qt=n(731),Vt={};Vt.styleTagTransform=p(),Vt.setAttributes=l(),Vt.insert=i().bind(null,"head"),Vt.domAPI=a(),Vt.insertStyleElement=d(),e()(qt.Z,Vt),qt.Z&&qt.Z.locals&&qt.Z.locals;class Ut extends HTMLSpanElement{constructor(t){super();const{classnames:e,text:n}=t;this.classList.add(...e),this.textContent=n}}customElements.define("matzip-caption",Ut,{extends:"span"});const $t=Ut;var Xt=n(526),Jt={};Jt.styleTagTransform=p(),Jt.setAttributes=l(),Jt.insert=i().bind(null,"head"),Jt.domAPI=a(),Jt.insertStyleElement=d(),e()(Xt.Z,Jt),Xt.Z&&Xt.Z.locals&&Xt.Z.locals;class Qt extends HTMLInputElement{constructor(t){super();const{type:e,name:n,id:r,required:a,pattern:s}=t;this.type=e,this.name=n,this.id=r,this.required=a,void 0!==s&&(this.pattern=s.toString().slice(1,-1))}getValue(){return this.value}isValidate(){return this.validity.valid}}customElements.define("matzip-input",Qt,{extends:"input"});const Gt=Qt;var Kt=n(157),te={};te.styleTagTransform=p(),te.setAttributes=l(),te.insert=i().bind(null,"head"),te.domAPI=a(),te.insertStyleElement=d(),e()(Kt.Z,te),Kt.Z&&Kt.Z.locals&&Kt.Z.locals;class ee extends HTMLLabelElement{constructor(t){super();const{htmlFor:e,text:n,classname:r}=t;this.htmlFor=e,this.textContent=n,this.classList.add(r)}}customElements.define("matzip-label",ee,{extends:"label"});const ne=ee;var re=n(212),ae={};ae.styleTagTransform=p(),ae.setAttributes=l(),ae.insert=i().bind(null,"head"),ae.domAPI=a(),ae.insertStyleElement=d(),e()(re.Z,ae),re.Z&&re.Z.locals&&re.Z.locals;class se extends HTMLTextAreaElement{constructor(t){super();const{name:e,id:n,cols:r,rows:a}=t;this.name=e,this.id=n,this.cols=r,this.rows=a}getValue(){return this.value}isValidate(){return this.validity.valid}}customElements.define("matzip-textarea",se,{extends:"textarea"});const ie=se;var oe=n(52),le={};le.styleTagTransform=p(),le.setAttributes=l(),le.insert=i().bind(null,"head"),le.domAPI=a(),le.insertStyleElement=d(),e()(oe.Z,le),oe.Z&&oe.Z.locals&&oe.Z.locals;class ce extends HTMLDivElement{constructor(t){const{required:e}=t;super(),this.classList.add("form-item"),e&&this.classList.add("form-item--required"),this.createElements(t)}createElements(t){const{label:e,select:n,caption:r,input:a,textarea:s}=t;this.createLabel(e),this.createSelect(n),this.createInput(a),this.createTextArea(s),this.createCaption(r)}createLabel(t){this.appendChild(new ne(t))}createSelect(t){void 0!==t&&this.appendChild(new S(t))}createInput(t){void 0!==t&&this.appendChild(new Gt(t))}createTextArea(t){void 0!==t&&this.appendChild(new ie(t))}createCaption(t){void 0!==t&&this.appendChild(new $t(t))}}customElements.define("matzip-formitem",ce,{extends:"div"});const de=ce,{REGULAR_EXPRESSION:Ae}=h;class pe extends HTMLFormElement{constructor(){super(),this.id="restaurant-form",this.submitButton=null,this.createElements()}createElements(){this.createCategoryField(),this.createRestaurantNameField(),this.createDistanceField(),this.createDescriptionField(),this.createLinkField(),this.createButtons(),this.setupValidation()}createCategoryField(){this.appendChild(new de({required:!0,label:{htmlFor:"category",classname:"text-caption",text:"카테고리"},select:{name:"category",id:"category",required:!0,options:[{value:"",text:"선택해 주세요"},{value:"한식",text:"한식"},{value:"중식",text:"중식"},{value:"일식",text:"일식"},{value:"양식",text:"양식"},{value:"아시안",text:"아시안"},{value:"기타",text:"기타"}]}}))}createRestaurantNameField(){this.appendChild(new de({required:!0,label:{htmlFor:"name",classname:"text-caption",text:"이름"},input:{type:"text",name:"name",id:"name",required:!0}}))}createDistanceField(){this.appendChild(new de({required:!0,label:{htmlFor:"distance",classname:"text-caption",text:"거리(도보 이동 시간)"},select:{name:"distance",id:"distance",required:!0,options:[{value:"",text:"선택해 주세요"},{value:"5",text:"5분 내"},{value:"10",text:"10분 내"},{value:"15",text:"15분 내"},{value:"20",text:"20분 내"},{value:"30",text:"30분 내"}]}}))}createDescriptionField(){this.appendChild(new de({required:!1,label:{htmlFor:"description",classname:"text-caption",text:"설명"},textarea:{name:"description",id:"description",cols:30,rows:15},caption:{classnames:["help-text","text-caption"],text:"메뉴 등 추가 정보를 입력해 주세요."}}))}createLinkField(){const t={type:"text",name:"link",id:"link",required:!1,pattern:Ae.URL};this.appendChild(new de({required:!1,label:{htmlFor:"link",classname:"text-caption",text:"참고 링크"},input:t,caption:{classnames:["help-text","text-caption"],text:"매장 정보를 확인할 수 있는 링크를 입력해 주세요."}}))}createButtons(){const t=document.createElement("div");t.setAttribute("class","button-container"),this.submitButton=new J({type:"submit",classnames:["button","text-caption","form-submit"],varient:"primary",children:"추가하기",disabled:!0}),t.appendChild(new J({type:"reset",classnames:["button","text-caption","modal--close"],varient:"secondary",children:"취소하기"})),t.appendChild(this.submitButton),this.appendChild(t)}getFormFields(){return[...this.children].filter((t=>t.className.includes("form-item"))).map((t=>Array.from(t.children).find((t=>this.getInputField(t)))))}getInputField(t){return["SELECT","TEXTAREA","INPUT"].includes(t.tagName)}updateButtonState(){this.getFormFields().every((t=>t.isValidate()))?this.submitButton.removeAttribute("disabled"):this.submitButton.setAttribute("disabled","true")}setupValidation(){this.getFormFields().forEach((t=>{t.addEventListener("input",(()=>{this.updateButtonState()}))}))}}customElements.define("restaurant-form",pe,{extends:"form"});const ue=pe,{MATZIP_DATA:me,FAVORITE_DATA:he}=B,{$:Ee}=w;class ge extends HTMLElement{constructor(){super(),ge.matzip=new class{constructor(t,e){this.restaurants=[],this.myFavorites=[],this.restaurants=t,this.myFavorites=e}getRestaurants(){return[...this.restaurants]}getMyFavorites(){return[...this.myFavorites]}getMyFavoriteRestaurants(){const t=this.restaurants.filter((t=>this.myFavorites.includes(t.id)));return[...t]}add(t){this.addValidate(t),this.restaurants.push(t)}addFavorite(t){this.myFavorites.push(t)}deleteFavorite(t){const e=this.myFavorites.findIndex((e=>e===t));this.myFavorites.splice(e,1)}isFavorite(t){return this.myFavorites.includes(t)}filterAndSort(t,e){if(t===v.whole)return this.sort(e,this.restaurants);const n=[...this.restaurants].filter((e=>e.category===t));return this.sort(e,n)}sort(t,e){const n={name:this.sortByName,distance:this.sortByDistance};return[...e].sort(n[t])}filterByCategory(t){return t===v.whole?[...this.restaurants]:[...this.restaurants].filter((e=>e.category===t))}sortByName(t,e){return t.name<e.name?-1:t.name>e.name?1:0}sortByDistance(t,e){return t.distance<e.distance?-1:t.distance>e.distance?1:0}addValidate(t){g.empty(t.category+""),g.exist(t.category+""),C.empty(t.name),b.empty(t.distance),b.exist(t.distance)}delete(t){const e=this.restaurants.findIndex((e=>e.id===t));this.restaurants.splice(e,1),this.deleteFavorite(t)}}(f.getData(me),f.getData(he)),this.createHeader(),this.main=this.createMain(),this.tab=this.createTab(),this.tabPane=this.createTabpane(),this.appendModal=this.createAppendModal(),this.listenTabChange(),this.setEvent()}listenTabChange(){document.addEventListener("tabChangeEvent",(t=>{0===t.detail.activeTabIndex?this.setEventWholeMode():this.setMyFavoriteMode()}))}setEvent(){this.listenModalToggle(),this.listenRestaurantAdd(),this.setEventWholeMode(),this.listenRestaurantDelete()}setEventWholeMode(){this.createWholeRestaurant(),this.changeFilter()}setMyFavoriteMode(){this.createMyFavoriteList()}createHeader(){const t=new st;this.prepend(t)}createMain(){const t=document.createElement("main");return this.appendChild(t),t}createTab(){const t=new mt(["모든 음식점","자주 가는 음식점"]);return this.main.prepend(t),t}createTabpane(){const t=new D;return this.main.appendChild(t),t}createWholeRestaurant(){const t=new M,{category:e,sort:n}=t.getFilterValues(),r=ge.matzip.filterAndSort(e,n).map((t=>new jt(t,ge.matzip.isFavorite(t.id)))),a=new Ht(r);this.tabPane.showContent({filterContainer:t,listContainer:a})}createMyFavoriteList(){const t=ge.matzip.getMyFavoriteRestaurants().map((t=>new jt(t,!0))),e=new Ht(t);this.tabPane.showContent({listContainer:e})}createAppendModal(){const t=new bt({classname:"modal",title:"새로운 음식점",child:new ue});return this.main.appendChild(t),t}listenModalToggle(){this.appendModal.backdropClick(this.appendModal,"modal"),Ee(".modal--close").addEventListener("click",(()=>{this.appendModal.toggleModal("modal")}))}changeFilter(){document.addEventListener("filterChange",(t=>{const e=t,n=e.detail.selectedCategory,r=e.detail.selectedSort,a=ge.matzip.filterAndSort(n,r).map((t=>new jt(t,ge.matzip.isFavorite(t.id)))),s=new Ht(a);this.tabPane.showListChange(s)}))}listenRestaurantAdd(){const t=Ee("#restaurant-form");t.addEventListener("submit",(e=>{e.preventDefault();const n=t.getFormFields().map((t=>t.getValue())),r={id:`matzip${crypto.randomUUID().replace(/-/g,"")}`,category:n[0],name:n[1],distance:Number(n[2]),introduction:n[3],link:n[4]};try{ge.matzip.add(r),f.addData(me,r),this.appendModal.toggleModal("modal"),this.tabPane.showListAppend(new jt(r,!1)),t.reset()}catch(t){alert(t)}}))}listenRestaurantDelete(){document.addEventListener("deleteRestaurant",(t=>{const e=t.detail.targetId;ge.matzip.delete(e),f.modifyData(me,ge.matzip.getRestaurants()),this.tabPane.showListDelete(e)}))}}customElements.define("matzip-app",ge);const Ce=ge})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UUFBUS9MLGVBQWVDLEVBQVMsR0FFN0MsRUFFSmpELGVBQWVDLE9BQU8sYUFBY3dOLElBQ3BDLFciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL2NhdGVnb3J5SW1hZ2UvQ2F0ZWdvcnlJbWFnZS5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9mYXZvcml0ZUljb24vRmF2b3JpdGVJY29uLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL2Zvcm1JdGVtL2Zvcm1JdGVtLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL2hlYWRlci9oZWFkZXIuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvbGlzdENvbnRhaW5lci9MaXN0Q29udGFpbmVyLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL21vZGFsL21vZGFsLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3Jlc3RhdXJhbnREZXRhaWwvUmVzdGF1cmFudERldGFpbC5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9yZXN0YXVyYW50L3Jlc3RhdXJhbnQuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFiL1RhYi5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWIvVGFiRWxlbWVudC5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWcvYnV0dG9uL2J1dHRvbi5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWcvY2FwdGlvbi9jYXB0aW9uLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhZy9pbWFnZS9pbWFnZS5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWcvaW5wdXQvaW5wdXQuY3NzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL2xhYmVsL2xhYmVsLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhZy9zZWxlY3Qvc2VsZWN0LmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhZy90ZXh0YXJlYS90ZXh0YXJlYS5jc3MiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvc3R5bGVzL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3N0eWxlcy9zdHlsZS5jc3M/ZmY5NCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb25zdGFudHMvQ29uZGl0aW9uLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3ZhbGlkYXRvci9DYXRlZ29yeVZhbGlkYXRvci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92YWxpZGF0b3IvTmFtZVZhbGlkYXRvci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy92YWxpZGF0b3IvRGlzdGFuY2VWYWxpZGF0b3IudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvbWF0emlwLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL3N0b3JhZ2UudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29uc3RhbnRzL0xvY2FsU3RvcmFnZUtleS50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy91dGlscy9ET00udHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWcvb3B0aW9uL09wdGlvbi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhZy9zZWxlY3Qvc2VsZWN0LmNzcz83ZmNmIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL3NlbGVjdC9TZWxlY3QudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9GaWx0ZXJDb250YWluZXIudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9UYWJQYW5lLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0L2ltZy9hZGQtYnV0dG9uLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldC9pbWcvY2F0ZWdvcnktYXNpYW4ucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0L2ltZy9jYXRlZ29yeS1jaGluZXNlLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldC9pbWcvY2F0ZWdvcnktZXRjLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldC9pbWcvY2F0ZWdvcnktamFwYW5lc2UucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0L2ltZy9jYXRlZ29yeS1rb3JlYW4ucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0L2ltZy9jYXRlZ29yeS13ZXN0ZXJuLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9hc3NldC9pbWcvZmF2b3JpdGUtaWNvbi1maWxsZWQucG5nIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2Fzc2V0L2ltZy9mYXZvcml0ZS1pY29uLWxpbmVkLnBuZyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhZy9idXR0b24vYnV0dG9uLmNzcz8zMjMwIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL2J1dHRvbi9CdXR0b24udHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWcvaW1hZ2UvaW1hZ2UuY3NzPzgwZTciLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWcvaW1hZ2UvSW1hZ2UudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNzcz9mN2ZhIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvaGVhZGVyL0hlYWRlci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhYi9UYWIuY3NzP2E2YTQiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWIvVGFiRWxlbWVudC5jc3M/NThmMCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhYi9UYWJFbGVtZW50LnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFiL1RhYi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3Jlc3RhdXJhbnQvcmVzdGF1cmFudC5jc3M/NjllYSIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL21vZGFsL21vZGFsLmNzcz8wMWRiIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvbW9kYWwvTW9kYWwudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9yZXN0YXVyYW50RGV0YWlsL1Jlc3RhdXJhbnREZXRhaWwuY3NzPzQ1MWMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9jYXRlZ29yeUltYWdlL0NhdGVnb3J5SW1hZ2UuY3NzPzQyOTAiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9jYXRlZ29yeUltYWdlL0NhdGVnb3J5SW1hZ2UudHMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9mYXZvcml0ZUljb24vRmF2b3JpdGVJY29uLmNzcz8yNDZlIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvZmF2b3JpdGVJY29uL0Zhdm9yaXRlSWNvbi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3Jlc3RhdXJhbnREZXRhaWwvUmVzdGF1cmFudERldGFpbC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3Jlc3RhdXJhbnQvUmVzdGF1cmFudC50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL2Zhdm9yaXRlSWNvbi9jbG9uZUZhdm9yaXRlSWNvbi50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL2xpc3RDb250YWluZXIvTGlzdENvbnRhaW5lci5jc3M/ODhlZCIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL2xpc3RDb250YWluZXIvTGlzdENvbnRhaW5lci50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL3RhZy9jYXB0aW9uL2NhcHRpb24uY3NzPzVmNDMiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy90YWcvY2FwdGlvbi9DYXB0aW9uLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL2lucHV0L2lucHV0LmNzcz84YmVjIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL2lucHV0L0lucHV0LnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL2xhYmVsL2xhYmVsLmNzcz85OTM1Iiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL2xhYmVsL0xhYmVsLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL3RleHRhcmVhL3RleHRhcmVhLmNzcz85M2FmIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvdGFnL3RleHRhcmVhL1RleHRBcmVhLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2NvbXBvbmVudHMvZm9ybUl0ZW0vZm9ybUl0ZW0uY3NzPzQ5N2EiLCJ3ZWJwYWNrOi8vQHdvb3dhY291cnNlL2phdmFzY3JpcHQtbHVuY2gvLi9zcmMvY29tcG9uZW50cy9mb3JtSXRlbS9Gb3JtSXRlbS50cyIsIndlYnBhY2s6Ly9Ad29vd2Fjb3Vyc2UvamF2YXNjcmlwdC1sdW5jaC8uL3NyYy9jb21wb25lbnRzL1Jlc3RhdXJhbnRGb3JtLnRzIiwid2VicGFjazovL0B3b293YWNvdXJzZS9qYXZhc2NyaXB0LWx1bmNoLy4vc3JjL2FwcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vc3R5bGVzL3N0eWxlLmNzc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnJlc3RhdXJhbnRfX2NhdGVnb3J5IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICB3aWR0aDogNjRweDtcXHJcXG4gIGhlaWdodDogNjRweDtcXHJcXG4gIG1pbi13aWR0aDogNjRweDtcXHJcXG4gIG1pbi1oZWlnaHQ6IDY0cHg7XFxyXFxuXFxyXFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxyXFxuXFxyXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1saWdodGVuLWNvbG9yKTtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvY2F0ZWdvcnlJbWFnZS9DYXRlZ29yeUltYWdlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLGdCQUFnQjs7RUFFaEIsa0JBQWtCOztFQUVsQixrQkFBa0I7RUFDbEIsZ0NBQWdDO0FBQ2xDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCcuLi8uLi9zdHlsZXMvc3R5bGUuY3NzJyk7XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnRfX2NhdGVnb3J5IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICB3aWR0aDogNjRweDtcXHJcXG4gIGhlaWdodDogNjRweDtcXHJcXG4gIG1pbi13aWR0aDogNjRweDtcXHJcXG4gIG1pbi1oZWlnaHQ6IDY0cHg7XFxyXFxuXFxyXFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxyXFxuXFxyXFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1saWdodGVuLWNvbG9yKTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmZhdm9yaXRlLWljb24ge1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICB3aWR0aDogMjZweDtcXHJcXG4gIGhlaWdodDogMjZweDtcXHJcXG5cXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gIHotaW5kZXg6IDE7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL2Zhdm9yaXRlSWNvbi9GYXZvcml0ZUljb24uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0VBQ1IsV0FBVztFQUNYLFlBQVk7O0VBRVosZUFBZTtFQUNmLFVBQVU7QUFDWlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZmF2b3JpdGUtaWNvbiB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICB0b3A6IDA7XFxyXFxuICByaWdodDogMDtcXHJcXG4gIHdpZHRoOiAyNnB4O1xcclxcbiAgaGVpZ2h0OiAyNnB4O1xcclxcblxcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbiAgei1pbmRleDogMTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmZvcm0tZmllbGRzZXQge1xcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4uZm9ybS1pdGVtIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcblxcclxcbiAgbWFyZ2luLWJvdHRvbTogMzZweDtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvZm9ybUl0ZW0vZm9ybUl0ZW0uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjs7RUFFdEIsbUJBQW1CO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5mb3JtLWZpZWxkc2V0IHtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLmZvcm0taXRlbSB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG5cXHJcXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vc3R5bGVzL3N0eWxlLmNzc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLmduYiB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIGhlaWdodDogNjRweDtcXHJcXG5cXHJcXG4gIHBhZGRpbmc6IDAgMTZweDtcXHJcXG5cXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbn1cXHJcXG5cXHJcXG4uZ25iX190aXRsZSB7XFxyXFxuICBjb2xvcjogI2ZjZmNmZDtcXHJcXG59XFxyXFxuXFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLG1CQUFtQjtFQUNuQixZQUFZOztFQUVaLGVBQWU7O0VBRWYsc0NBQXNDO0FBQ3hDOztBQUVBO0VBQ0UsY0FBYztBQUNoQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnLi4vLi4vc3R5bGVzL3N0eWxlLmNzcycpO1xcclxcblxcclxcbi5nbmIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBoZWlnaHQ6IDY0cHg7XFxyXFxuXFxyXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxyXFxuXFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXHJcXG59XFxyXFxuXFxyXFxuLmduYl9fdGl0bGUge1xcclxcbiAgY29sb3I6ICNmY2ZjZmQ7XFxyXFxufVxcclxcblxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vc3R5bGVzL3N0eWxlLmNzc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLm5vdGhpbmdfX3Jlc3RhdXJhbnQge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG5cXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiA0MDBweDtcXHJcXG59XFxyXFxuXFxyXFxuLm5vdGhpbmdfX21lbnQge1xcclxcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcclxcbiAgY29sb3I6IHZhcigtLWdyZXktNTAwKTtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvbGlzdENvbnRhaW5lci9MaXN0Q29udGFpbmVyLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1COztFQUVuQixXQUFXO0VBQ1gsYUFBYTtBQUNmOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLHNCQUFzQjtBQUN4QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnLi4vLi4vc3R5bGVzL3N0eWxlLmNzcycpO1xcclxcblxcclxcbi5ub3RoaW5nX19yZXN0YXVyYW50IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuXFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogNDAwcHg7XFxyXFxufVxcclxcblxcclxcbi5ub3RoaW5nX19tZW50IHtcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTUwMCk7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5tb2RhbCB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4ubW9kYWwtLW9wZW4ge1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxufVxcclxcblxcclxcbi5tb2RhbC1iYWNrZHJvcCB7XFxyXFxuICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICB0b3A6IDA7XFxyXFxuICByaWdodDogMDtcXHJcXG4gIGJvdHRvbTogMDtcXHJcXG4gIGxlZnQ6IDA7XFxyXFxuXFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMzUpO1xcclxcbn1cXHJcXG5cXHJcXG4ubW9kYWwtY29udGFpbmVyIHtcXHJcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gIGxlZnQ6IDA7XFxyXFxuICBib3R0b206IDA7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogODAlO1xcclxcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xcclxcblxcclxcbiAgcGFkZGluZzogMzJweCAxNnB4O1xcclxcbiAgei1pbmRleDogMjtcXHJcXG5cXHJcXG4gIGJvcmRlci1yYWRpdXM6IDhweCA4cHggMHB4IDBweDtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWdyZXktMTAwKTtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGFsLXRpdGxlIHtcXHJcXG4gIG1hcmdpbi1ib3R0b206IDM2cHg7XFxyXFxufVxcclxcblxcclxcbi5kZXRhaWwtbW9kYWwge1xcclxcbiAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLmRldGFpbC1tb2RhbC0tb3BlbiB7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG59XFxyXFxuXFxyXFxuLmRldGFpbC1tb2RhbC1iYWNrZHJvcCB7XFxyXFxuICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICB0b3A6IDA7XFxyXFxuICByaWdodDogMDtcXHJcXG4gIGJvdHRvbTogMDtcXHJcXG4gIGxlZnQ6IDA7XFxyXFxuXFxyXFxuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMzUpO1xcclxcbn1cXHJcXG5cXHJcXG4uZGV0YWlsLW1vZGFsLWNvbnRhaW5lciB7XFxyXFxuICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICBsZWZ0OiAwO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDgwJTtcXHJcXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcXHJcXG4gIHotaW5kZXg6IDI7XFxyXFxuXFxyXFxuICBwYWRkaW5nOiAzMnB4IDE2cHg7XFxyXFxuXFxyXFxuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDBweCAwcHg7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1ncmV5LTEwMCk7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL21vZGFsL21vZGFsLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTzs7RUFFUCwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsT0FBTztFQUNQLFNBQVM7RUFDVCxXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjs7RUFFbEIsa0JBQWtCO0VBQ2xCLFVBQVU7O0VBRVYsOEJBQThCO0VBQzlCLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLFFBQVE7RUFDUixTQUFTO0VBQ1QsT0FBTzs7RUFFUCwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsT0FBTztFQUNQLFNBQVM7RUFDVCxXQUFXO0VBQ1gsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixVQUFVOztFQUVWLGtCQUFrQjs7RUFFbEIsOEJBQThCO0VBQzlCLDJCQUEyQjtBQUM3QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubW9kYWwge1xcclxcbiAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGFsLS1vcGVuIHtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbn1cXHJcXG5cXHJcXG4ubW9kYWwtYmFja2Ryb3Age1xcclxcbiAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICBib3R0b206IDA7XFxyXFxuICBsZWZ0OiAwO1xcclxcblxcclxcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjM1KTtcXHJcXG59XFxyXFxuXFxyXFxuLm1vZGFsLWNvbnRhaW5lciB7XFxyXFxuICBwb3NpdGlvbjogZml4ZWQ7XFxyXFxuICBsZWZ0OiAwO1xcclxcbiAgYm90dG9tOiAwO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDgwJTtcXHJcXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcXHJcXG5cXHJcXG4gIHBhZGRpbmc6IDMycHggMTZweDtcXHJcXG4gIHotaW5kZXg6IDI7XFxyXFxuXFxyXFxuICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDBweCAwcHg7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1ncmV5LTEwMCk7XFxyXFxufVxcclxcblxcclxcbi5tb2RhbC10aXRsZSB7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAzNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZGV0YWlsLW1vZGFsIHtcXHJcXG4gIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbi5kZXRhaWwtbW9kYWwtLW9wZW4ge1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxufVxcclxcblxcclxcbi5kZXRhaWwtbW9kYWwtYmFja2Ryb3Age1xcclxcbiAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgdG9wOiAwO1xcclxcbiAgcmlnaHQ6IDA7XFxyXFxuICBib3R0b206IDA7XFxyXFxuICBsZWZ0OiAwO1xcclxcblxcclxcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjM1KTtcXHJcXG59XFxyXFxuXFxyXFxuLmRldGFpbC1tb2RhbC1jb250YWluZXIge1xcclxcbiAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgbGVmdDogMDtcXHJcXG4gIGJvdHRvbTogMDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiA4MCU7XFxyXFxuICBvdmVyZmxvdy15OiBzY3JvbGw7XFxyXFxuICB6LWluZGV4OiAyO1xcclxcblxcclxcbiAgcGFkZGluZzogMzJweCAxNnB4O1xcclxcblxcclxcbiAgYm9yZGVyLXJhZGl1czogOHB4IDhweCAwcHggMHB4O1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0xMDApO1xcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL3N0eWxlcy9zdHlsZS5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5kZXRhaWxfX2NvbnRhaW5lciB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcclxcbn1cXHJcXG5cXHJcXG4uZGV0YWlsX19maWVsZCB7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZGV0YWlsX190aXRsZSB7XFxyXFxuICBtYXJnaW4tdG9wOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9fZGlzdGFuY2Uge1xcclxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9fZGVzY3JpcHRpb24ge1xcclxcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxyXFxuXFxyXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcclxcblxcclxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcclxcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcclxcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnRfX2xpbmsge1xcclxcbiAgY29sb3I6IHZhcigtLWdyZXktNTAwKTtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbi1jb250YWluZXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgbWFyZ2luLXRvcDogMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbi1jb250YWluZXIgYnV0dG9uIHtcXHJcXG4gIGZsZXg6IDE7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL3Jlc3RhdXJhbnREZXRhaWwvUmVzdGF1cmFudERldGFpbC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0Qix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxvQkFBb0I7O0VBRXBCLGdCQUFnQjs7RUFFaEIsZ0JBQWdCO0VBQ2hCLHVCQUF1QjtFQUN2QixxQkFBcUI7RUFDckIsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxPQUFPO0FBQ1RcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJy4uLy4uL3N0eWxlcy9zdHlsZS5jc3MnKTtcXHJcXG5cXHJcXG4uZGV0YWlsX19jb250YWluZXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXHJcXG59XFxyXFxuXFxyXFxuLmRldGFpbF9fZmllbGQge1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuLmRldGFpbF9fdGl0bGUge1xcclxcbiAgbWFyZ2luLXRvcDogMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnRfX2Rpc3RhbmNlIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uIHtcXHJcXG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xcclxcblxcclxcbiAgcGFkZGluZy10b3A6IDhweDtcXHJcXG5cXHJcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxyXFxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcXHJcXG4gIC13ZWJraXQtbGluZS1jbGFtcDogMjtcXHJcXG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XFxyXFxufVxcclxcblxcclxcbi5yZXN0YXVyYW50X19saW5rIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTUwMCk7XFxyXFxufVxcclxcblxcclxcbi5idXR0b24tY29udGFpbmVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIG1hcmdpbi10b3A6IDE2cHg7XFxyXFxufVxcclxcblxcclxcbi5idXR0b24tY29udGFpbmVyIGJ1dHRvbiB7XFxyXFxuICBmbGV4OiAxO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL3N0eWxlcy9zdHlsZS5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5yZXN0YXVyYW50IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXHJcXG5cXHJcXG4gIG1hcmdpbjogMTZweCA4cHggMCA4cHg7XFxyXFxuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTllYWVkO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9faW5mbyB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnRfX25hbWUge1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9fZGlzdGFuY2Uge1xcclxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9fZGVzY3JpcHRpb24ge1xcclxcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxyXFxuXFxyXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcclxcblxcclxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcclxcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcclxcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvcmVzdGF1cmFudC9yZXN0YXVyYW50LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsdUJBQXVCOztFQUV2QixzQkFBc0I7RUFDdEIsb0JBQW9CO0VBQ3BCLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0Usb0JBQW9COztFQUVwQixnQkFBZ0I7O0VBRWhCLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIscUJBQXFCO0VBQ3JCLDRCQUE0QjtBQUM5QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnLi4vLi4vc3R5bGVzL3N0eWxlLmNzcycpO1xcclxcblxcclxcbi5yZXN0YXVyYW50IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXHJcXG5cXHJcXG4gIG1hcmdpbjogMTZweCA4cHggMCA4cHg7XFxyXFxuICBwYWRkaW5nLWJvdHRvbTogMTZweDtcXHJcXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTllYWVkO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9faW5mbyB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnRfX25hbWUge1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9fZGlzdGFuY2Uge1xcclxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudF9fZGVzY3JpcHRpb24ge1xcclxcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxyXFxuXFxyXFxuICBwYWRkaW5nLXRvcDogOHB4O1xcclxcblxcclxcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXHJcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcclxcbiAgLXdlYmtpdC1saW5lLWNsYW1wOiAyO1xcclxcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9zdHlsZXMvc3R5bGUuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFiIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGhlaWdodDogNDRweDtcXHJcXG5cXHJcXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL3RhYi9UYWIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0UsYUFBYTtFQUNiLFdBQVc7RUFDWCxZQUFZOztFQUVaLHdDQUF3QztBQUMxQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnLi4vLi4vc3R5bGVzL3N0eWxlLmNzcycpO1xcclxcblxcclxcbi50YWIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiA0NHB4O1xcclxcblxcclxcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLWdyZXktMjAwKTtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9zdHlsZXMvc3R5bGUuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFiLWVsZW1lbnQge1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcclxcbiAgZmxleDogMTtcXHJcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG5cXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmluZGljYXRvciB7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICBib3R0b206IC0ycHg7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcclxcbn1cXHJcXG5cXHJcXG4uaW5kaWNhdG9yLWFjdGl2ZSB7XFxyXFxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tcHJpbWFyeS1jb2xvcik7XFxyXFxufVxcclxcblxcclxcbi50YWItZWxlbWVudC1hY3RpdmUge1xcclxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbn1cXHJcXG5cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy90YWIvVGFiRWxlbWVudC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSxrQkFBa0I7RUFDbEIsT0FBTztFQUNQLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFDN0IsWUFBWTs7RUFFWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0VBQ1gsV0FBVztBQUNiOztBQUVBO0VBQ0UsNkNBQTZDO0FBQy9DOztBQUVBO0VBQ0UsMkJBQTJCO0FBQzdCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCcuLi8uLi9zdHlsZXMvc3R5bGUuY3NzJyk7XFxyXFxuXFxyXFxuLnRhYi1lbGVtZW50IHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXHJcXG4gIGZsZXg6IDE7XFxyXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuXFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5pbmRpY2F0b3Ige1xcclxcbiAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgYm90dG9tOiAtMnB4O1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBjb250ZW50OiBcXFwiXFxcIjtcXHJcXG59XFxyXFxuXFxyXFxuLmluZGljYXRvci1hY3RpdmUge1xcclxcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbn1cXHJcXG5cXHJcXG4udGFiLWVsZW1lbnQtYWN0aXZlIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXHJcXG59XFxyXFxuXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9zdHlsZXMvc3R5bGUuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZ25iX19idXR0b24ge1xcclxcbiAgaGVpZ2h0OiA0MHB4O1xcclxcblxcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuXFxyXFxuICBmb250LXNpemU6IDI0cHg7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5nbmJfX2J1dHRvbiBpbWcge1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxuICB3aWR0aDogNDBweDtcXHJcXG4gIGhlaWdodDogNDBweDtcXHJcXG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XFxyXFxufVxcclxcblxcclxcbi5idXR0b24ge1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDQ0cHg7XFxyXFxuXFxyXFxuICBtYXJnaW4tcmlnaHQ6IDE2cHg7XFxyXFxuXFxyXFxuICBib3JkZXI6IG5vbmU7XFxyXFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuXFxyXFxuICBmb250LXdlaWdodDogNjAwO1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uYnV0dG9uOmxhc3QtY2hpbGQge1xcclxcbiAgbWFyZ2luLXJpZ2h0OiAwO1xcclxcbn1cXHJcXG5cXHJcXG4uc2Vjb25kYXJ5X19idXR0b24ge1xcclxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0zMDApO1xcclxcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XFxyXFxuXFxyXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcclxcbn1cXHJcXG5cXHJcXG4ucHJpbWFyeV9fYnV0dG9uIHtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcblxcclxcbiAgY29sb3I6IHZhcigtLWdyZXktMTAwKTtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbjpkaXNhYmxlZCB7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1ncmV5LTMwMCk7XFxyXFxuXFxyXFxuICBjb2xvcjogdmFyKC0tZ3JleS0xMDApO1xcclxcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvdGFnL2J1dHRvbi9idXR0b24uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0UsWUFBWTs7RUFFWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7RUFFdkIsZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsV0FBVztFQUNYLFlBQVk7RUFDWixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTs7RUFFWixrQkFBa0I7O0VBRWxCLFlBQVk7RUFDWixrQkFBa0I7O0VBRWxCLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGlDQUFpQztFQUNqQyx1QkFBdUI7O0VBRXZCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdDQUFnQzs7RUFFaEMsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsMkJBQTJCOztFQUUzQixzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCcuLi8uLi8uLi9zdHlsZXMvc3R5bGUuY3NzJyk7XFxyXFxuXFxyXFxuLmduYl9fYnV0dG9uIHtcXHJcXG4gIGhlaWdodDogNDBweDtcXHJcXG5cXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXHJcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcclxcblxcclxcbiAgZm9udC1zaXplOiAyNHB4O1xcclxcbiAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uZ25iX19idXR0b24gaW1nIHtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgd2lkdGg6IDQwcHg7XFxyXFxuICBoZWlnaHQ6IDQwcHg7XFxyXFxuICBvYmplY3QtZml0OiBjb250YWluO1xcclxcbn1cXHJcXG5cXHJcXG4uYnV0dG9uIHtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgaGVpZ2h0OiA0NHB4O1xcclxcblxcclxcbiAgbWFyZ2luLXJpZ2h0OiAxNnB4O1xcclxcblxcclxcbiAgYm9yZGVyOiBub25lO1xcclxcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcblxcclxcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG4gIGN1cnNvcjogcG9pbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbjpsYXN0LWNoaWxkIHtcXHJcXG4gIG1hcmdpbi1yaWdodDogMDtcXHJcXG59XFxyXFxuXFxyXFxuLnNlY29uZGFyeV9fYnV0dG9uIHtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdyZXktMzAwKTtcXHJcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcclxcblxcclxcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXHJcXG59XFxyXFxuXFxyXFxuLnByaW1hcnlfX2J1dHRvbiB7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXHJcXG5cXHJcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTEwMCk7XFxyXFxufVxcclxcblxcclxcbi5idXR0b246ZGlzYWJsZWQge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tZ3JleS0zMDApO1xcclxcblxcclxcbiAgY29sb3I6IHZhcigtLWdyZXktMTAwKTtcXHJcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18gZnJvbSBcIi0hLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vc3R5bGVzL3N0eWxlLmNzc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18uaShfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzBfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnRleHQtY2FwdGlvbiB7XFxyXFxuICBmb250LXNpemU6IDE0cHg7XFxyXFxuICBsaW5lLWhlaWdodDogMjBweDtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxyXFxufVxcclxcblxcclxcbi5oZWxwLXRleHQge1xcclxcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvdGFnL2NhcHRpb24vY2FwdGlvbi5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnLi4vLi4vLi4vc3R5bGVzL3N0eWxlLmNzcycpO1xcclxcblxcclxcbi50ZXh0LWNhcHRpb24ge1xcclxcbiAgZm9udC1zaXplOiAxNHB4O1xcclxcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XFxyXFxuICBmb250LXdlaWdodDogNDAwO1xcclxcbn1cXHJcXG5cXHJcXG4uaGVscC10ZXh0IHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTMwMCk7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5jYXRlZ29yeS1pY29uIHtcXHJcXG4gIHdpZHRoOiAzNnB4O1xcclxcbiAgaGVpZ2h0OiAzNnB4O1xcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy90YWcvaW1hZ2UvaW1hZ2UuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuY2F0ZWdvcnktaWNvbiB7XFxyXFxuICB3aWR0aDogMzZweDtcXHJcXG4gIGhlaWdodDogMzZweDtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9zdHlsZXMvc3R5bGUuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZm9ybS1pdGVtIGlucHV0IHtcXHJcXG4gIHBhZGRpbmc6IDhweDtcXHJcXG4gIG1hcmdpbjogNnB4IDA7XFxyXFxuXFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuXFxyXFxuICBmb250LXNpemU6IDE2cHg7XFxyXFxufVxcclxcblxcclxcbmlucHV0W25hbWU9J25hbWUnXSxcXHJcXG5pbnB1dFtuYW1lPSdsaW5rJ10ge1xcclxcbiAgaGVpZ2h0OiA0NHB4O1xcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy90YWcvaW5wdXQvaW5wdXQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7O0VBRWIsaUNBQWlDO0VBQ2pDLGtCQUFrQjs7RUFFbEIsZUFBZTtBQUNqQjs7QUFFQTs7RUFFRSxZQUFZO0FBQ2RcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJy4uLy4uLy4uL3N0eWxlcy9zdHlsZS5jc3MnKTtcXHJcXG5cXHJcXG4uZm9ybS1pdGVtIGlucHV0IHtcXHJcXG4gIHBhZGRpbmc6IDhweDtcXHJcXG4gIG1hcmdpbjogNnB4IDA7XFxyXFxuXFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuXFxyXFxuICBmb250LXNpemU6IDE2cHg7XFxyXFxufVxcclxcblxcclxcbmlucHV0W25hbWU9J25hbWUnXSxcXHJcXG5pbnB1dFtuYW1lPSdsaW5rJ10ge1xcclxcbiAgaGVpZ2h0OiA0NHB4O1xcclxcbn1cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL3N0eWxlcy9zdHlsZS5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5mb3JtLWl0ZW0gbGFiZWwge1xcclxcbiAgY29sb3I6IHZhcigtLWdyZXktNDAwKTtcXHJcXG4gIGZvbnQtc2l6ZTogMTRweDtcXHJcXG59XFxyXFxuXFxyXFxuLmZvcm0taXRlbS0tcmVxdWlyZWQgbGFiZWw6OmFmdGVyIHtcXHJcXG4gIHBhZGRpbmctbGVmdDogNHB4O1xcclxcblxcclxcbiAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpO1xcclxcbiAgY29udGVudDogJyonO1xcclxcbn1cXHJcXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY29tcG9uZW50cy90YWcvbGFiZWwvbGFiZWwuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7O0VBRWpCLDJCQUEyQjtFQUMzQixZQUFZO0FBQ2RcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGltcG9ydCB1cmwoJy4uLy4uLy4uL3N0eWxlcy9zdHlsZS5jc3MnKTtcXHJcXG5cXHJcXG4uZm9ybS1pdGVtIGxhYmVsIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1ncmV5LTQwMCk7XFxyXFxuICBmb250LXNpemU6IDE0cHg7XFxyXFxufVxcclxcblxcclxcbi5mb3JtLWl0ZW0tLXJlcXVpcmVkIGxhYmVsOjphZnRlciB7XFxyXFxuICBwYWRkaW5nLWxlZnQ6IDRweDtcXHJcXG5cXHJcXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKTtcXHJcXG4gIGNvbnRlbnQ6ICcqJztcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9zdHlsZXMvc3R5bGUuY3NzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5pKF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuZm9ybS1pdGVtIHNlbGVjdCB7XFxyXFxuICBoZWlnaHQ6IDQ0cHg7XFxyXFxuICBwYWRkaW5nOiA4cHg7XFxyXFxuICBtYXJnaW46IDZweCAwO1xcclxcblxcclxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0yMDApO1xcclxcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcblxcclxcbiAgZm9udC1zaXplOiAxNnB4O1xcclxcbiAgY29sb3I6IHZhcigtLWdyZXktMzAwKTtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciBzZWxlY3Qge1xcclxcbiAgaGVpZ2h0OiA0NHB4O1xcclxcbiAgbWluLXdpZHRoOiAxMjVweDtcXHJcXG5cXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkMGQ1ZGQ7XFxyXFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXHJcXG5cXHJcXG4gIGZvbnQtc2l6ZTogMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2NvbXBvbmVudHMvdGFnL3NlbGVjdC9zZWxlY3QuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixhQUFhOztFQUViLGlDQUFpQztFQUNqQyxrQkFBa0I7O0VBRWxCLGVBQWU7RUFDZixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCOztFQUVoQix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLHVCQUF1Qjs7RUFFdkIsZUFBZTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnLi4vLi4vLi4vc3R5bGVzL3N0eWxlLmNzcycpO1xcclxcblxcclxcbi5mb3JtLWl0ZW0gc2VsZWN0IHtcXHJcXG4gIGhlaWdodDogNDRweDtcXHJcXG4gIHBhZGRpbmc6IDhweDtcXHJcXG4gIG1hcmdpbjogNnB4IDA7XFxyXFxuXFxyXFxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1ncmV5LTIwMCk7XFxyXFxuICBib3JkZXItcmFkaXVzOiA4cHg7XFxyXFxuXFxyXFxuICBmb250LXNpemU6IDE2cHg7XFxyXFxuICBjb2xvcjogdmFyKC0tZ3JleS0zMDApO1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudC1maWx0ZXItY29udGFpbmVyIHNlbGVjdCB7XFxyXFxuICBoZWlnaHQ6IDQ0cHg7XFxyXFxuICBtaW4td2lkdGg6IDEyNXB4O1xcclxcblxcclxcbiAgYm9yZGVyOiAxcHggc29saWQgI2QwZDVkZDtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXHJcXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xcclxcblxcclxcbiAgZm9udC1zaXplOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL3N0eWxlcy9zdHlsZS5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5mb3JtLWl0ZW0gdGV4dGFyZWEge1xcclxcbiAgcGFkZGluZzogOHB4O1xcclxcbiAgbWFyZ2luOiA2cHggMDtcXHJcXG5cXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWdyZXktMjAwKTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcXHJcXG5cXHJcXG4gIGZvbnQtc2l6ZTogMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuLmZvcm0taXRlbSB0ZXh0YXJlYSB7XFxyXFxuICByZXNpemU6IG5vbmU7XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9jb21wb25lbnRzL3RhZy90ZXh0YXJlYS90ZXh0YXJlYS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7RUFDRSxZQUFZO0VBQ1osYUFBYTs7RUFFYixpQ0FBaUM7RUFDakMsa0JBQWtCOztFQUVsQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTtBQUNkXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKCcuLi8uLi8uLi9zdHlsZXMvc3R5bGUuY3NzJyk7XFxyXFxuXFxyXFxuLmZvcm0taXRlbSB0ZXh0YXJlYSB7XFxyXFxuICBwYWRkaW5nOiA4cHg7XFxyXFxuICBtYXJnaW46IDZweCAwO1xcclxcblxcclxcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JleS0yMDApO1xcclxcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xcclxcblxcclxcbiAgZm9udC1zaXplOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4uZm9ybS1pdGVtIHRleHRhcmVhIHtcXHJcXG4gIHJlc2l6ZTogbm9uZTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXHJcXG59XFxyXFxuXFxyXFxudWwsXFxyXFxubGkge1xcclxcbiAgbGlzdC1zdHlsZTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuaHRtbCxcXHJcXG5ib2R5IHtcXHJcXG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xcclxcbiAgZm9udC1zaXplOiAxNnB4O1xcclxcbn1cXHJcXG5cXHJcXG4vKiBDb2xvcnMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxyXFxuOnJvb3Qge1xcclxcbiAgLS1wcmltYXJ5LWNvbG9yOiAjZWM0YTBhO1xcclxcbiAgLS1saWdodGVuLWNvbG9yOiAjZjZhODhhO1xcclxcbiAgLS1ncmV5LTEwMDogI2ZmZmZmZjtcXHJcXG4gIC0tZ3JleS0yMDA6ICNkMGQ1ZGQ7XFxyXFxuICAtLWdyZXktMzAwOiAjNjY3MDg1O1xcclxcbiAgLS1ncmV5LTQwMDogIzM0NDA1NDtcXHJcXG4gIC0tZ3JleS01MDA6ICMwMDAwMDA7XFxyXFxufVxcclxcblxcclxcbm1haW4ge1xcclxcbiAgcGFkZGluZzogMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuLyogVHlwb2dyYXBoeSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcclxcbi50ZXh0LXRpdGxlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMjBweDtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcclxcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG59XFxyXFxuXFxyXFxuLnRleHQtc3VidGl0bGUge1xcclxcbiAgZm9udC1zaXplOiAxOHB4O1xcclxcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XFxyXFxuICBmb250LXdlaWdodDogNjAwO1xcclxcbn1cXHJcXG5cXHJcXG4udGV4dC1ib2R5IHtcXHJcXG4gIGZvbnQtc2l6ZTogMTZweDtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAyNHB4O1xcclxcbiAgZm9udC13ZWlnaHQ6IDQwMDtcXHJcXG59XFxyXFxuXFxyXFxuLyog7Lm07YWM6rOg66asL+ygleugrCDtlYTthLAgKi9cXHJcXG4ucmVzdGF1cmFudC1maWx0ZXItY29udGFpbmVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxyXFxuXFxyXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxyXFxuICBtYXJnaW4tdG9wOiAyNHB4O1xcclxcbn1cXHJcXG5cXHJcXG4ucmVzdGF1cmFudC1maWx0ZXIge1xcclxcbiAgcGFkZGluZzogOHB4O1xcclxcbn1cXHJcXG5cXHJcXG4vKiDsnYzsi53soJAg66qp66GdICovXFxyXFxuLnJlc3RhdXJhbnQtbGlzdC1jb250YWluZXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuXFxyXFxuICBwYWRkaW5nOiAwIDE2cHg7XFxyXFxuICBtYXJnaW46IDE2cHggMDtcXHJcXG59XFxyXFxuXFxyXFxuLmJ1dHRvbi1jb250YWluZXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG59XFxyXFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtBQUN4Qjs7QUFFQTs7RUFFRSxnQkFBZ0I7QUFDbEI7O0FBRUE7O0VBRUUsdUJBQXVCO0VBQ3ZCLGVBQWU7QUFDakI7O0FBRUEsbURBQW1EO0FBQ25EO0VBQ0Usd0JBQXdCO0VBQ3hCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBLG1EQUFtRDtBQUNuRDtFQUNFLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGdCQUFnQjtBQUNsQjs7QUFFQSxlQUFlO0FBQ2Y7RUFDRSxhQUFhO0VBQ2IsOEJBQThCOztFQUU5QixlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBLFdBQVc7QUFDWDtFQUNFLGFBQWE7RUFDYixzQkFBc0I7O0VBRXRCLGVBQWU7RUFDZixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsYUFBYTtBQUNmXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIioge1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxufVxcclxcblxcclxcbnVsLFxcclxcbmxpIHtcXHJcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxyXFxufVxcclxcblxcclxcbmh0bWwsXFxyXFxuYm9keSB7XFxyXFxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXHJcXG4gIGZvbnQtc2l6ZTogMTZweDtcXHJcXG59XFxyXFxuXFxyXFxuLyogQ29sb3JzICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcclxcbjpyb290IHtcXHJcXG4gIC0tcHJpbWFyeS1jb2xvcjogI2VjNGEwYTtcXHJcXG4gIC0tbGlnaHRlbi1jb2xvcjogI2Y2YTg4YTtcXHJcXG4gIC0tZ3JleS0xMDA6ICNmZmZmZmY7XFxyXFxuICAtLWdyZXktMjAwOiAjZDBkNWRkO1xcclxcbiAgLS1ncmV5LTMwMDogIzY2NzA4NTtcXHJcXG4gIC0tZ3JleS00MDA6ICMzNDQwNTQ7XFxyXFxuICAtLWdyZXktNTAwOiAjMDAwMDAwO1xcclxcbn1cXHJcXG5cXHJcXG5tYWluIHtcXHJcXG4gIHBhZGRpbmc6IDE2cHg7XFxyXFxufVxcclxcblxcclxcbi8qIFR5cG9ncmFwaHkgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXHJcXG4udGV4dC10aXRsZSB7XFxyXFxuICBmb250LXNpemU6IDIwcHg7XFxyXFxuICBsaW5lLWhlaWdodDogMjRweDtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XFxyXFxufVxcclxcblxcclxcbi50ZXh0LXN1YnRpdGxlIHtcXHJcXG4gIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gIGxpbmUtaGVpZ2h0OiAyOHB4O1xcclxcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXHJcXG59XFxyXFxuXFxyXFxuLnRleHQtYm9keSB7XFxyXFxuICBmb250LXNpemU6IDE2cHg7XFxyXFxuICBsaW5lLWhlaWdodDogMjRweDtcXHJcXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XFxyXFxufVxcclxcblxcclxcbi8qIOy5tO2FjOqzoOumrC/soJXroKwg7ZWE7YSwICovXFxyXFxuLnJlc3RhdXJhbnQtZmlsdGVyLWNvbnRhaW5lciB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcblxcclxcbiAgcGFkZGluZzogMCAxNnB4O1xcclxcbiAgbWFyZ2luLXRvcDogMjRweDtcXHJcXG59XFxyXFxuXFxyXFxuLnJlc3RhdXJhbnQtZmlsdGVyIHtcXHJcXG4gIHBhZGRpbmc6IDhweDtcXHJcXG59XFxyXFxuXFxyXFxuLyog7J2M7Iud7KCQIOuqqeuhnSAqL1xcclxcbi5yZXN0YXVyYW50LWxpc3QtY29udGFpbmVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcblxcclxcbiAgcGFkZGluZzogMCAxNnB4O1xcclxcbiAgbWFyZ2luOiAxNnB4IDA7XFxyXFxufVxcclxcblxcclxcbi5idXR0b24tY29udGFpbmVyIHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxufVxcclxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJjb25zdCBDQVRFR09SWSA9IHtcclxuICAgIHdob2xlOiAn7KCE7LK0JyxcclxuICAgIGtvcmVhbkZvb2Q6ICftlZzsi50nLFxyXG4gICAgY2hpbmVzZUZvb2Q6ICfspJHsi50nLFxyXG4gICAgamFwYW5lc2VGb29kOiAn7J287IudJyxcclxuICAgIHdlc3Rlcm5Gb29kOiAn7JaR7IudJyxcclxuICAgIGFzaWFuRm9vZDogJ+yVhOyLnOyViCcsXHJcbiAgICBldGM6ICfquLDtg4AnLFxyXG59O1xyXG5jb25zdCBESVNUQU5DRSA9IFs1LCAxMCwgMTUsIDIwLCAzMF07XHJcbmNvbnN0IFJFR1VMQVJfRVhQUkVTU0lPTiA9IHtcclxuICAgIFVSTDogLyhmdHB8aHR0cHxodHRwcyk6XFwvXFwvKFxcdys6ezAsMX1cXHcqQCk/KFxcUyspKDpbMC05XSspPyhcXC98XFwvKFtcXHcjITouPys9JiVAIVxcLVxcL10pKT8vLFxyXG59O1xyXG5jb25zdCBDb25kaXRpb24gPSB7XHJcbiAgICBDQVRFR09SWSxcclxuICAgIERJU1RBTkNFLFxyXG4gICAgUkVHVUxBUl9FWFBSRVNTSU9OLFxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDb25kaXRpb247XHJcbiIsImltcG9ydCBDb25kaXRpb24gZnJvbSAnLi4vY29uc3RhbnRzL0NvbmRpdGlvbic7XHJcbmNvbnN0IHsgQ0FURUdPUlkgfSA9IENvbmRpdGlvbjtcclxuY29uc3QgQ2F0ZWdvcnlWYWxpZGF0b3IgPSB7XHJcbiAgICBlbXB0eShjYXRlZ29yeSkge1xyXG4gICAgICAgIGlmIChjYXRlZ29yeS5sZW5ndGggPD0gMClcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfsubTthYzqs6Drpqwg7J6F66Cl7J2AIO2VhOyImOyeheuLiOuLpC4nKTtcclxuICAgIH0sXHJcbiAgICBleGlzdChjYXRlZ29yeSkge1xyXG4gICAgICAgIGNvbnN0IGNhdGVnb3JpZXMgPSBPYmplY3QudmFsdWVzKENBVEVHT1JZKS5tYXAoU3RyaW5nKTtcclxuICAgICAgICBpZiAoIWNhdGVnb3JpZXMuaW5jbHVkZXMoY2F0ZWdvcnkpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign7KG07J6s7ZWY7KeAIOyViuuKlCDsubTthYzqs6DrpqzsnoXri4jri6QuIOuLueyLoCDslrTripAg64KY6528IOyCrOuejOyduOqwgOyalD8nKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBDYXRlZ29yeVZhbGlkYXRvcjtcclxuIiwiY29uc3QgTmFtZVZhbGlkYXRvciA9IHtcclxuICAgIGVtcHR5KG5hbWUpIHtcclxuICAgICAgICBpZiAobmFtZS5sZW5ndGggPD0gMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+ydtOumhOydhCDsnoXroKXtlZjshLjsmpQuJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxufTtcclxuZXhwb3J0IGRlZmF1bHQgTmFtZVZhbGlkYXRvcjtcclxuIiwiaW1wb3J0IENvbmRpdGlvbiBmcm9tICcuLi9jb25zdGFudHMvQ29uZGl0aW9uJztcclxuY29uc3QgeyBESVNUQU5DRSB9ID0gQ29uZGl0aW9uO1xyXG5jb25zdCBEaXN0YW5jZVZhbGlkYXRvciA9IHtcclxuICAgIGVtcHR5KGRpc3RhbmNlKSB7XHJcbiAgICAgICAgaWYgKGRpc3RhbmNlID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfsnoXroKXqsJLsnbQg67mE7Ja07J6I7Iq164uI64ukLicpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBleGlzdChkaXN0YW5jZSkge1xyXG4gICAgICAgIGlmICghRElTVEFOQ0UuaW5jbHVkZXMoZGlzdGFuY2UpKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcign64u57IugIOyggOulvCDslrTrlJTquYzsp4Ag67O064K8IOyDneqwgeyduOqxsOyjoD8nKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBEaXN0YW5jZVZhbGlkYXRvcjtcclxuIiwiaW1wb3J0IHsgQ2F0ZWdvcnlWYWxpZGF0b3IsIE5hbWVWYWxpZGF0b3IsIERpc3RhbmNlVmFsaWRhdG9yIH0gZnJvbSAnLi92YWxpZGF0b3IvaW5kZXgnO1xyXG5pbXBvcnQgQ29uZGl0aW9uIGZyb20gJy4vY29uc3RhbnRzL0NvbmRpdGlvbic7XHJcbmNvbnN0IHsgQ0FURUdPUlkgfSA9IENvbmRpdGlvbjtcclxuY2xhc3MgTWF0emlwIHtcclxuICAgIGNvbnN0cnVjdG9yKHJlc3RhdXJhbnRzLCBteUZhdm9yaXRlcykge1xyXG4gICAgICAgIHRoaXMucmVzdGF1cmFudHMgPSBbXTtcclxuICAgICAgICB0aGlzLm15RmF2b3JpdGVzID0gW107XHJcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50cyA9IHJlc3RhdXJhbnRzO1xyXG4gICAgICAgIHRoaXMubXlGYXZvcml0ZXMgPSBteUZhdm9yaXRlcztcclxuICAgIH1cclxuICAgIGdldFJlc3RhdXJhbnRzKCkge1xyXG4gICAgICAgIHJldHVybiBbLi4udGhpcy5yZXN0YXVyYW50c107XHJcbiAgICB9XHJcbiAgICBnZXRNeUZhdm9yaXRlcygpIHtcclxuICAgICAgICByZXR1cm4gWy4uLnRoaXMubXlGYXZvcml0ZXNdO1xyXG4gICAgfVxyXG4gICAgZ2V0TXlGYXZvcml0ZVJlc3RhdXJhbnRzKCkge1xyXG4gICAgICAgIGNvbnN0IGZhdm9yaXRlUmVzdGF1cmFudHMgPSB0aGlzLnJlc3RhdXJhbnRzLmZpbHRlcigocmVzdGF1cmFudCkgPT4gdGhpcy5teUZhdm9yaXRlcy5pbmNsdWRlcyhyZXN0YXVyYW50LmlkKSk7XHJcbiAgICAgICAgcmV0dXJuIFsuLi5mYXZvcml0ZVJlc3RhdXJhbnRzXTtcclxuICAgIH1cclxuICAgIGFkZChyZXN0YXVyYW50KSB7XHJcbiAgICAgICAgdGhpcy5hZGRWYWxpZGF0ZShyZXN0YXVyYW50KTtcclxuICAgICAgICB0aGlzLnJlc3RhdXJhbnRzLnB1c2gocmVzdGF1cmFudCk7XHJcbiAgICB9XHJcbiAgICBhZGRGYXZvcml0ZSh0YXJnZXRJZCkge1xyXG4gICAgICAgIHRoaXMubXlGYXZvcml0ZXMucHVzaCh0YXJnZXRJZCk7XHJcbiAgICB9XHJcbiAgICBkZWxldGVGYXZvcml0ZSh0YXJnZXRJZCkge1xyXG4gICAgICAgIGNvbnN0IHRhcmdldEluZGV4ID0gdGhpcy5teUZhdm9yaXRlcy5maW5kSW5kZXgoKGlkKSA9PiBpZCA9PT0gdGFyZ2V0SWQpO1xyXG4gICAgICAgIHRoaXMubXlGYXZvcml0ZXMuc3BsaWNlKHRhcmdldEluZGV4LCAxKTtcclxuICAgIH1cclxuICAgIGlzRmF2b3JpdGUodGFyZ2V0SWQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5teUZhdm9yaXRlcy5pbmNsdWRlcyh0YXJnZXRJZCk7XHJcbiAgICB9XHJcbiAgICBmaWx0ZXJBbmRTb3J0KGNhdGVnb3J5LCBzb3J0QnkpIHtcclxuICAgICAgICBpZiAoY2F0ZWdvcnkgPT09IENBVEVHT1JZLndob2xlKVxyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zb3J0KHNvcnRCeSwgdGhpcy5yZXN0YXVyYW50cyk7XHJcbiAgICAgICAgY29uc3QgZmlsdGVyUmVzdWx0ID0gWy4uLnRoaXMucmVzdGF1cmFudHNdLmZpbHRlcigocmVzdGF1cmFudCkgPT4gcmVzdGF1cmFudC5jYXRlZ29yeSA9PT0gY2F0ZWdvcnkpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNvcnQoc29ydEJ5LCBmaWx0ZXJSZXN1bHQpO1xyXG4gICAgfVxyXG4gICAgc29ydChzb3J0QnksIHJlc3RhdXJhbnRzKSB7XHJcbiAgICAgICAgY29uc3QgU09SVF9CWSA9IHtcclxuICAgICAgICAgICAgbmFtZTogdGhpcy5zb3J0QnlOYW1lLFxyXG4gICAgICAgICAgICBkaXN0YW5jZTogdGhpcy5zb3J0QnlEaXN0YW5jZSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHJldHVybiBbLi4ucmVzdGF1cmFudHNdLnNvcnQoU09SVF9CWVtzb3J0QnldKTtcclxuICAgIH1cclxuICAgIGZpbHRlckJ5Q2F0ZWdvcnkoY2F0ZWdvcnkpIHtcclxuICAgICAgICBpZiAoY2F0ZWdvcnkgPT09IENBVEVHT1JZLndob2xlKVxyXG4gICAgICAgICAgICByZXR1cm4gWy4uLnRoaXMucmVzdGF1cmFudHNdO1xyXG4gICAgICAgIHJldHVybiBbLi4udGhpcy5yZXN0YXVyYW50c10uZmlsdGVyKChyZXN0YXVyYW50KSA9PiByZXN0YXVyYW50LmNhdGVnb3J5ID09PSBjYXRlZ29yeSk7XHJcbiAgICB9XHJcbiAgICBzb3J0QnlOYW1lKGEsIGIpIHtcclxuICAgICAgICBpZiAoYS5uYW1lIDwgYi5uYW1lKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAtMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGEubmFtZSA+IGIubmFtZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcbiAgICBzb3J0QnlEaXN0YW5jZShhLCBiKSB7XHJcbiAgICAgICAgaWYgKGEuZGlzdGFuY2UgPCBiLmRpc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAtMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGEuZGlzdGFuY2UgPiBiLmRpc3RhbmNlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAxO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICAgIGFkZFZhbGlkYXRlKHJlc3RhdXJhbnQpIHtcclxuICAgICAgICBDYXRlZ29yeVZhbGlkYXRvci5lbXB0eShyZXN0YXVyYW50LmNhdGVnb3J5ICsgJycpO1xyXG4gICAgICAgIENhdGVnb3J5VmFsaWRhdG9yLmV4aXN0KHJlc3RhdXJhbnQuY2F0ZWdvcnkgKyAnJyk7XHJcbiAgICAgICAgTmFtZVZhbGlkYXRvci5lbXB0eShyZXN0YXVyYW50Lm5hbWUpO1xyXG4gICAgICAgIERpc3RhbmNlVmFsaWRhdG9yLmVtcHR5KHJlc3RhdXJhbnQuZGlzdGFuY2UpO1xyXG4gICAgICAgIERpc3RhbmNlVmFsaWRhdG9yLmV4aXN0KHJlc3RhdXJhbnQuZGlzdGFuY2UpO1xyXG4gICAgfVxyXG4gICAgZGVsZXRlKGlkKSB7XHJcbiAgICAgICAgY29uc3QgdGFyZ2V0SW5kZXggPSB0aGlzLnJlc3RhdXJhbnRzLmZpbmRJbmRleCgocmVzdGF1cmFudCkgPT4gcmVzdGF1cmFudC5pZCA9PT0gaWQpO1xyXG4gICAgICAgIHRoaXMucmVzdGF1cmFudHMuc3BsaWNlKHRhcmdldEluZGV4LCAxKTtcclxuICAgICAgICB0aGlzLmRlbGV0ZUZhdm9yaXRlKGlkKTtcclxuICAgIH1cclxuICAgIDtcclxufVxyXG5leHBvcnQgZGVmYXVsdCBNYXR6aXA7XHJcbiIsImNvbnN0IHN0b3JhZ2UgPSB7XHJcbiAgICBhZGREYXRhKGtleSwgZGF0YSkge1xyXG4gICAgICAgIGNvbnN0IGxvY2FsU3RvcmFnZURhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xyXG4gICAgICAgIGlmIChsb2NhbFN0b3JhZ2VEYXRhID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkoW2RhdGFdKSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgZXhpc3RpbmdEYXRhID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2VEYXRhKTtcclxuICAgICAgICBjb25zdCBuZXdEYXRhID0gWy4uLmV4aXN0aW5nRGF0YSwgZGF0YV07XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShuZXdEYXRhKSk7XHJcbiAgICB9LFxyXG4gICAgZ2V0RGF0YShrZXkpIHtcclxuICAgICAgICBjb25zdCBsb2NhbFN0b3JhZ2VEYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcclxuICAgICAgICBpZiAobG9jYWxTdG9yYWdlRGF0YSA9PT0gbnVsbClcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZURhdGEpO1xyXG4gICAgfSxcclxuICAgIG1vZGlmeURhdGEoa2V5LCBuZXdMaXN0KSB7XHJcbiAgICAgICAgY29uc3QgbG9jYWxTdG9yYWdlRGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XHJcbiAgICAgICAgaWYgKGxvY2FsU3RvcmFnZURhdGEgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShuZXdMaXN0KSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBzdG9yYWdlO1xyXG4iLCJjb25zdCBMT0NBTF9TVE9SQUdFX0tFWSA9IE9iamVjdC5mcmVlemUoe1xyXG4gICAgTUFUWklQX0RBVEE6ICdtYXR6aXBEYXRhJyxcclxuICAgIEZBVk9SSVRFX0RBVEE6ICdmYXZvcml0ZURhdGEnLFxyXG59KTtcclxuZXhwb3J0IGRlZmF1bHQgTE9DQUxfU1RPUkFHRV9LRVk7XHJcbiIsImZ1bmN0aW9uIHZhbGlkYXRlU2VsZWN0b3Ioc2VsZWN0b3IpIHtcclxuICAgIGlmIChzZWxlY3RvciA9PT0gJycgfHwgc2VsZWN0b3IgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgIGFsZXJ0KCfsnpjrqrvrkJwg7IWA66CJ7YSwIOqwkuyeheuLiOuLpC4nKTtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ+yemOuqu+uQnCDshYDroInthLAg6rCS7J6F64uI64ukLicpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIHZhbGlkYXRlRXhpc3RFbGVtZW50KHNlbGVjdG9yLCBlbGVtZW50KSB7XHJcbiAgICBpZiAoZWxlbWVudCA9PT0gbnVsbCkge1xyXG4gICAgICAgIGFsZXJ0KGBlbGVtZW5066W8IOywvuydhCDsiJgg7JeG7Iq164uI64ukLCAke3NlbGVjdG9yfWApO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignZWxlbWVudOulvCDssL7snYQg7IiYIOyXhuyKteuLiOuLpCcpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIHZhbGlkYXRlRXhpc3RFbGVtZW50cyhlbGVtZW50cykge1xyXG4gICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIGFsZXJ0KCdlbGVtZW5066W8IOywvuydhCDsiJgg7JeG7Iq164uI64ukLCcpO1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignZWxlbWVudOulvCDssL7snYQg7IiYIOyXhuyKteuLiOuLpCcpO1xyXG4gICAgfVxyXG59XHJcbmNvbnN0IERPTSA9IHtcclxuICAgICQ6IChzZWxlY3RvcikgPT4ge1xyXG4gICAgICAgIHZhbGlkYXRlU2VsZWN0b3Ioc2VsZWN0b3IpO1xyXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcclxuICAgICAgICB2YWxpZGF0ZUV4aXN0RWxlbWVudChzZWxlY3RvciwgZWxlbWVudCk7XHJcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7XHJcbiAgICB9LFxyXG4gICAgJCQ6IChzZWxlY3RvcikgPT4ge1xyXG4gICAgICAgIHZhbGlkYXRlU2VsZWN0b3Ioc2VsZWN0b3IpO1xyXG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3Rvcik7XHJcbiAgICAgICAgdmFsaWRhdGVFeGlzdEVsZW1lbnRzKGVsZW1lbnRzKTtcclxuICAgICAgICByZXR1cm4gZWxlbWVudHM7XHJcbiAgICB9LFxyXG4gICAgLy8gZnJhZ21lbnTsl5Ag7LaU6rCA7ZW065GQ6rOgIO2DgOqyn+yXkCBhcHBlbmRDaGlsZO2VmOuKlCDrsKnsi53snLzroZwg66as7ZSM66Gc7JqwLCDrpqztjpjsnbjtjIUg7LWc7KCB7ZmUXHJcbiAgICBpbnNlcnRFbGVtZW50c0luVGFyZ2V0KHRhcmdldCwgZWxlbWVudHMpIHtcclxuICAgICAgICBjb25zdCBmcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xyXG4gICAgICAgIGVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChlbGVtZW50KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoZnJhZyk7XHJcbiAgICB9LFxyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBET007XHJcbiIsImNsYXNzIE9wdGlvbiBleHRlbmRzIEhUTUxPcHRpb25FbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBjb25zdCB7IHZhbHVlLCB0ZXh0IH0gPSBwcm9wcztcclxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtb3B0aW9uJywgT3B0aW9uLCB7IGV4dGVuZHM6ICdvcHRpb24nIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBPcHRpb247XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zZWxlY3QuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zZWxlY3QuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IERPTSBmcm9tICcuLi8uLi8uLi91dGlscy9ET00nO1xyXG5pbXBvcnQgeyBPcHRpb24gfSBmcm9tICcuLi9vcHRpb24nO1xyXG5pbXBvcnQgJy4vc2VsZWN0LmNzcyc7XHJcbmNvbnN0IHsgaW5zZXJ0RWxlbWVudHNJblRhcmdldCB9ID0gRE9NO1xyXG5jbGFzcyBTZWxlY3QgZXh0ZW5kcyBIVE1MU2VsZWN0RWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgY29uc3QgeyBuYW1lLCBpZCwgY2xhc3NuYW1lLCByZXF1aXJlZCwgb3B0aW9ucyB9ID0gcHJvcHM7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgICAgICB0aGlzLmlkID0gaWQ7XHJcbiAgICAgICAgaWYgKGNsYXNzbmFtZSAhPT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoY2xhc3NuYW1lKTtcclxuICAgICAgICB0aGlzLnJlcXVpcmVkID0gcmVxdWlyZWQ7XHJcbiAgICAgICAgdGhpcy5hZGRPcHRpb25zKG9wdGlvbnMpO1xyXG4gICAgfVxyXG4gICAgYWRkT3B0aW9ucyhvcHRpb25zKSB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9uRWxlbWVudHMgPSBvcHRpb25zLm1hcCgob3B0aW9uKSA9PiBuZXcgT3B0aW9uKG9wdGlvbikpO1xyXG4gICAgICAgIGluc2VydEVsZW1lbnRzSW5UYXJnZXQodGhpcywgb3B0aW9uRWxlbWVudHMpO1xyXG4gICAgfVxyXG4gICAgZ2V0VmFsdWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uc1t0aGlzLnNlbGVjdGVkSW5kZXhdLnZhbHVlO1xyXG4gICAgfVxyXG4gICAgaXNWYWxpZGF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52YWxpZGl0eS52YWxpZDtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC1zZWxlY3QnLCBTZWxlY3QsIHsgZXh0ZW5kczogJ3NlbGVjdCcgfSk7XHJcbmV4cG9ydCBkZWZhdWx0IFNlbGVjdDtcclxuIiwiaW1wb3J0IHsgU2VsZWN0IH0gZnJvbSAnLi90YWcvc2VsZWN0JztcclxuY2xhc3MgRmlsdGVyQ29udGFpbmVyIGV4dGVuZHMgSFRNTERpdkVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50LWZpbHRlci1jb250YWluZXInO1xyXG4gICAgICAgIHRoaXMuY2F0ZWdvcnkgPSB0aGlzLmNyZWF0ZUNhdGVnb3J5U2VsZWN0KCk7XHJcbiAgICAgICAgdGhpcy5zb3J0ID0gdGhpcy5jcmVhdGVTb3J0U2VsZWN0KCk7XHJcbiAgICAgICAgdGhpcy5zZXRFdmVudCgpO1xyXG4gICAgfVxyXG4gICAgc2V0RXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5jYXRlZ29yeUNoYW5nZSgpO1xyXG4gICAgICAgIHRoaXMuc29ydENoYW5nZSgpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQ2F0ZWdvcnlTZWxlY3QoKSB7XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IFtcclxuICAgICAgICAgICAgeyB2YWx1ZTogJ+yghOyytCcsIHRleHQ6ICfsoITssrQnIH0sXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICftlZzsi50nLCB0ZXh0OiAn7ZWc7IudJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAn7KSR7IudJywgdGV4dDogJ+ykkeyLnScgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJ+ydvOyLnScsIHRleHQ6ICfsnbzsi50nIH0sXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICfslpHsi50nLCB0ZXh0OiAn7JaR7IudJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAn7JWE7Iuc7JWIJywgdGV4dDogJ+yVhOyLnOyViCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJ+q4sO2DgCcsIHRleHQ6ICfquLDtg4AnIH0sXHJcbiAgICAgICAgXTtcclxuICAgICAgICBjb25zdCBzZWxlY3RCb3ggPSB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdjYXRlZ29yeScsXHJcbiAgICAgICAgICAgIGlkOiAnY2F0ZWdvcnktZmlsdGVyJyxcclxuICAgICAgICAgICAgY2xhc3NuYW1lOiAncmVzdGF1cmFudC1maWx0ZXInLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgb3B0aW9uczogb3B0aW9ucyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdCA9IG5ldyBTZWxlY3Qoc2VsZWN0Qm94KTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKHNlbGVjdCk7XHJcbiAgICAgICAgcmV0dXJuIHNlbGVjdDtcclxuICAgIH1cclxuICAgIGNyZWF0ZVNvcnRTZWxlY3QoKSB7XHJcbiAgICAgICAgY29uc3Qgc29ydE9wdGlvbnMgPSBbXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICduYW1lJywgdGV4dDogJ+ydtOumhOyInCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJ2Rpc3RhbmNlJywgdGV4dDogJ+qxsOumrOyInCcgfSxcclxuICAgICAgICBdO1xyXG4gICAgICAgIGNvbnN0IHNvcnRCb3ggPSB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdzb3J0aW5nJyxcclxuICAgICAgICAgICAgaWQ6ICdzb3J0aW5nLWZpbHRlcicsXHJcbiAgICAgICAgICAgIGNsYXNzbmFtZTogJ3Jlc3RhdXJhbnQtZmlsdGVyJyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgIG9wdGlvbnM6IHNvcnRPcHRpb25zLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3Qgc2VsZWN0ID0gbmV3IFNlbGVjdChzb3J0Qm94KTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKHNlbGVjdCk7XHJcbiAgICAgICAgcmV0dXJuIHNlbGVjdDtcclxuICAgIH1cclxuICAgIGdldEZpbHRlclZhbHVlcygpIHtcclxuICAgICAgICBjb25zdCBmaWx0ZXJWYWx1ZXMgPSB7XHJcbiAgICAgICAgICAgIGNhdGVnb3J5OiB0aGlzLmNhdGVnb3J5LmdldFZhbHVlKCksXHJcbiAgICAgICAgICAgIHNvcnQ6IHRoaXMuc29ydC5nZXRWYWx1ZSgpLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIGZpbHRlclZhbHVlcztcclxuICAgIH1cclxuICAgIGNhdGVnb3J5Q2hhbmdlKCkge1xyXG4gICAgICAgIHRoaXMuY2F0ZWdvcnkuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBmaWx0ZXJDaGFuZ2VFdmVudCA9IG5ldyBDdXN0b21FdmVudCgnZmlsdGVyQ2hhbmdlJywge1xyXG4gICAgICAgICAgICAgICAgZGV0YWlsOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRDYXRlZ29yeTogdGhpcy5jYXRlZ29yeS5nZXRWYWx1ZSgpLFxyXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkU29ydDogdGhpcy5zb3J0LmdldFZhbHVlKCksXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudChmaWx0ZXJDaGFuZ2VFdmVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzb3J0Q2hhbmdlKCkge1xyXG4gICAgICAgIHRoaXMuc29ydC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpbHRlckNoYW5nZUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdmaWx0ZXJDaGFuZ2UnLCB7XHJcbiAgICAgICAgICAgICAgICBkZXRhaWw6IHtcclxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZENhdGVnb3J5OiB0aGlzLmNhdGVnb3J5LmdldFZhbHVlKCksXHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWRTb3J0OiB0aGlzLnNvcnQuZ2V0VmFsdWUoKSxcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGZpbHRlckNoYW5nZUV2ZW50KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC1maWx0ZXItY29udGFpbmVyJywgRmlsdGVyQ29udGFpbmVyLCB7IGV4dGVuZHM6ICdkaXYnIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBGaWx0ZXJDb250YWluZXI7XHJcbiIsImltcG9ydCBET00gZnJvbSBcIi4uL3V0aWxzL0RPTVwiO1xyXG5jb25zdCB7ICQgfSA9IERPTTtcclxuY2xhc3MgVGFiUGFuZSBleHRlbmRzIEhUTUxFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5jbGFzc05hbWUgPSAndGFicGFuZSc7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJDb250YWluZXIgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubGlzdENvbnRhaW5lciA9IG51bGw7XHJcbiAgICB9XHJcbiAgICByZW1vdmVUYWJQYW5lKCkge1xyXG4gICAgICAgIHRoaXMucmVwbGFjZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJDb250YWluZXIgPSBudWxsO1xyXG4gICAgICAgIHRoaXMubGlzdENvbnRhaW5lciA9IG51bGw7XHJcbiAgICB9XHJcbiAgICByZW1vdmVMaXN0Q29udGFpbmVyKCkge1xyXG4gICAgICAgIHRoaXMucmVtb3ZlQ2hpbGQoJCgnI3Jlc3RhdXJhbnQtbGlzdHMnKSk7XHJcbiAgICAgICAgdGhpcy5saXN0Q29udGFpbmVyID0gbnVsbDtcclxuICAgIH1cclxuICAgIHNob3dDb250ZW50KHRhYlBhbmVQcm9wcykge1xyXG4gICAgICAgIHRoaXMucmVtb3ZlVGFiUGFuZSgpO1xyXG4gICAgICAgIGNvbnN0IHsgZmlsdGVyQ29udGFpbmVyLCBsaXN0Q29udGFpbmVyIH0gPSB0YWJQYW5lUHJvcHM7XHJcbiAgICAgICAgaWYgKGZpbHRlckNvbnRhaW5lciAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoZmlsdGVyQ29udGFpbmVyKTtcclxuICAgICAgICAgICAgdGhpcy5maWx0ZXJDb250YWluZXIgPSBmaWx0ZXJDb250YWluZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQobGlzdENvbnRhaW5lcik7XHJcbiAgICAgICAgdGhpcy5saXN0Q29udGFpbmVyID0gbGlzdENvbnRhaW5lcjtcclxuICAgIH1cclxuICAgIHNob3dMaXN0Q2hhbmdlKGxpc3RDb250YWluZXIpIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUxpc3RDb250YWluZXIoKTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGxpc3RDb250YWluZXIpO1xyXG4gICAgICAgIHRoaXMubGlzdENvbnRhaW5lciA9IGxpc3RDb250YWluZXI7XHJcbiAgICB9XHJcbiAgICBzaG93TGlzdEFwcGVuZChyZXN0YXVyYW50KSB7XHJcbiAgICAgICAgdGhpcy5saXN0Q29udGFpbmVyPy5hZGRSZXN0YXVyYW50cyhyZXN0YXVyYW50KTtcclxuICAgIH1cclxuICAgIHNob3dMaXN0RGVsZXRlKHRhcmdldElkKSB7XHJcbiAgICAgICAgdGhpcy5saXN0Q29udGFpbmVyPy5kZWxldGVSZXN0YXVyYW50KHRhcmdldElkKTtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC10YWJwYW5lJywgVGFiUGFuZSwgeyBleHRlbmRzOiAnc2VjdGlvbicgfSk7XHJcbmV4cG9ydCBkZWZhdWx0IFRhYlBhbmU7XHJcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhZGQtYnV0dG9uLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1hc2lhbi5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktY2hpbmVzZS5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnktZXRjLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS1qYXBhbmVzZS5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiY2F0ZWdvcnkta29yZWFuLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjYXRlZ29yeS13ZXN0ZXJuLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmYXZvcml0ZS1pY29uLWZpbGxlZC5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZmF2b3JpdGUtaWNvbi1saW5lZC5wbmdcIjsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYnV0dG9uLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYnV0dG9uLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9idXR0b24uY3NzJztcclxuY2xhc3MgQnV0dG9uIGV4dGVuZHMgSFRNTEJ1dHRvbkVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGNvbnN0IHsgdHlwZSwgY2xhc3NuYW1lcywgYXJpYUxhYmVsLCBjaGlsZHJlbiwgZGlzYWJsZWQsIHZhcmllbnQgfSA9IHByb3BzO1xyXG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XHJcbiAgICAgICAgaWYgKGNsYXNzbmFtZXMgIT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzbmFtZXMpO1xyXG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZChgJHt2YXJpZW50fV9fYnV0dG9uYCk7XHJcbiAgICAgICAgaWYgKGFyaWFMYWJlbCAhPT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aGlzLmFyaWFMYWJlbCA9IGFyaWFMYWJlbDtcclxuICAgICAgICBpZiAodHlwZW9mIGNoaWxkcmVuID09PSAnc3RyaW5nJylcclxuICAgICAgICAgICAgdGhpcy50ZXh0Q29udGVudCA9IGNoaWxkcmVuO1xyXG4gICAgICAgIGlmIChjaGlsZHJlbiBpbnN0YW5jZW9mIEhUTUxJbWFnZUVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChjaGlsZHJlbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChkaXNhYmxlZCAhPT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICB0aGlzLmRpc2FibGVkID0gZGlzYWJsZWQ7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtYnV0dG9uJywgQnV0dG9uLCB7IGV4dGVuZHM6ICdidXR0b24nIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBCdXR0b247XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbWFnZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2ltYWdlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9pbWFnZS5jc3MnO1xyXG5jbGFzcyBJbWFnZSBleHRlbmRzIEhUTUxJbWFnZUVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGNvbnN0IHsgc3JjLCBhbHQsIGNsYXNzbmFtZXMgfSA9IHByb3BzO1xyXG4gICAgICAgIHRoaXMuc3JjID0gc3JjO1xyXG4gICAgICAgIGlmIChhbHQgIT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgdGhpcy5hbHQgPSBhbHQ7XHJcbiAgICAgICAgaWYgKGNsYXNzbmFtZXMgIT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzbmFtZXMpO1xyXG4gICAgfVxyXG59XHJcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnbWF0emlwLWltYWdlJywgSW1hZ2UsIHsgZXh0ZW5kczogJ2ltZycgfSk7XHJcbmV4cG9ydCBkZWZhdWx0IEltYWdlO1xyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaGVhZGVyLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IEFkZEJ1dHRvbiB9IGZyb20gJy4uLy4uL2Fzc2V0L2ltZy9pbmRleCc7XHJcbmltcG9ydCBET00gZnJvbSAnLi4vLi4vdXRpbHMvRE9NJztcclxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnLi4vdGFnL2J1dHRvbic7XHJcbmltcG9ydCB7IEltYWdlIH0gZnJvbSAnLi4vdGFnL2ltYWdlJztcclxuaW1wb3J0ICcuL2hlYWRlci5jc3MnO1xyXG5jb25zdCB7ICQgfSA9IERPTTtcclxuY2xhc3MgSGVhZGVyIGV4dGVuZHMgSFRNTEVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmNsYXNzTmFtZSA9ICdnbmInO1xyXG4gICAgICAgIHRoaXMuY3JlYXRlSDEoKTtcclxuICAgICAgICB0aGlzLmduYkJ1dHRvbiA9IHRoaXMuY3JlYXRlQnV0dG9uKCk7XHJcbiAgICAgICAgdGhpcy5vcGVuTW9kYWwoKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZUgxKCkge1xyXG4gICAgICAgIGNvbnN0IGgxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDEnKTtcclxuICAgICAgICBoMS5jbGFzc0xpc3QuYWRkKCdnbmJfX3RpdGxlJywgJ3RleHQtdGl0bGUnKTtcclxuICAgICAgICBoMS50ZXh0Q29udGVudCA9ICfsoJDsi6wg662QIOuoueyngCc7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChoMSk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVCdXR0b24oKSB7XHJcbiAgICAgICAgY29uc3QgaW1hZ2UgPSB7XHJcbiAgICAgICAgICAgIHNyYzogQWRkQnV0dG9uLFxyXG4gICAgICAgICAgICBhbHQ6ICfsnYzsi53soJAg7LaU6rCAJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGJ1dHRvbiA9IHtcclxuICAgICAgICAgICAgdHlwZTogJ2J1dHRvbicsXHJcbiAgICAgICAgICAgIHZhcmllbnQ6ICdnbmInLFxyXG4gICAgICAgICAgICBhcmlhTGFiZWw6ICfsnYzsi53soJAg7LaU6rCAJyxcclxuICAgICAgICAgICAgY2hpbGRyZW46IG5ldyBJbWFnZShpbWFnZSksXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBidXR0b25FbGVtZW50ID0gbmV3IEJ1dHRvbihidXR0b24pO1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoYnV0dG9uRWxlbWVudCk7XHJcbiAgICAgICAgcmV0dXJuIGJ1dHRvbkVsZW1lbnQ7XHJcbiAgICB9XHJcbiAgICBvcGVuTW9kYWwoKSB7XHJcbiAgICAgICAgdGhpcy5nbmJCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICQoJy5tb2RhbCcpLmNsYXNzTGlzdC5hZGQoJ21vZGFsLS1vcGVuJyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtZ25iJywgSGVhZGVyLCB7IGV4dGVuZHM6ICdoZWFkZXInIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9UYWIuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9UYWIuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL1RhYkVsZW1lbnQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9UYWJFbGVtZW50LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9UYWJFbGVtZW50LmNzcyc7XHJcbmNsYXNzIFRhYkVsZW1lbnQgZXh0ZW5kcyBIVE1MQnV0dG9uRWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0YWJFbGVtZW50KSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBjb25zdCB7IGFjdGl2ZSwgdGFiTmFtZSwgaW5kZXggfSA9IHRhYkVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCd0YWItZWxlbWVudCcsICd0ZXh0LXN1YnRpdGxlJyk7XHJcbiAgICAgICAgdGhpcy50ZXh0Q29udGVudCA9IHRhYk5hbWU7XHJcbiAgICAgICAgdGhpcy5pbmRleCA9IGluZGV4O1xyXG4gICAgICAgIHRoaXMuYWN0aXZlID0gYWN0aXZlO1xyXG4gICAgICAgIHRoaXMuaW5kaWNhdG9yID0gdGhpcy5jcmVhdGVJbmRpY2F0b3IoKTtcclxuICAgICAgICB0aGlzLmluaXRUYWIoKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZUluZGljYXRvcigpIHtcclxuICAgICAgICBjb25zdCBpbmRpY2F0b3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBpbmRpY2F0b3IuY2xhc3NMaXN0LmFkZCgnaW5kaWNhdG9yJyk7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChpbmRpY2F0b3IpO1xyXG4gICAgICAgIHJldHVybiBpbmRpY2F0b3I7XHJcbiAgICB9XHJcbiAgICBzZXRBY3RpdmUoKSB7XHJcbiAgICAgICAgdGhpcy5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgndGFiLWVsZW1lbnQtYWN0aXZlJyk7XHJcbiAgICAgICAgdGhpcy5pbmRpY2F0b3IuY2xhc3NMaXN0LmFkZCgnaW5kaWNhdG9yLWFjdGl2ZScpO1xyXG4gICAgfVxyXG4gICAgc2V0SW5hY3RpdmUoKSB7XHJcbiAgICAgICAgdGhpcy5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ3RhYi1lbGVtZW50LWFjdGl2ZScpO1xyXG4gICAgICAgIHRoaXMuaW5kaWNhdG9yLmNsYXNzTGlzdC5yZW1vdmUoJ2luZGljYXRvci1hY3RpdmUnKTtcclxuICAgIH1cclxuICAgIGluaXRUYWIoKSB7XHJcbiAgICAgICAgdGhpcy5hY3RpdmUgPyB0aGlzLnNldEFjdGl2ZSgpIDogdGhpcy5zZXRJbmFjdGl2ZSgpO1xyXG4gICAgfVxyXG4gICAgdGFiQ2xpY2soY2xlYXJBY3RpdmF0ZSwgc2V0QWN0aXZlVGFiKSB7XHJcbiAgICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgY2xlYXJBY3RpdmF0ZSgpO1xyXG4gICAgICAgICAgICB0aGlzLnNldEFjdGl2ZSgpO1xyXG4gICAgICAgICAgICBzZXRBY3RpdmVUYWIodGhpcy5pbmRleCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHRhYkNoYW5nZUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCd0YWJDaGFuZ2VFdmVudCcsIHtcclxuICAgICAgICAgICAgICAgIGRldGFpbDoge1xyXG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVRhYkluZGV4OiB0aGlzLmluZGV4LFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudCh0YWJDaGFuZ2VFdmVudCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtdGFiLWVsZW1lbnQnLCBUYWJFbGVtZW50LCB7IGV4dGVuZHM6ICdidXR0b24nIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBUYWJFbGVtZW50O1xyXG4iLCJpbXBvcnQgJy4vVGFiLmNzcyc7XHJcbmltcG9ydCBUYWJFbGVtZW50IGZyb20gXCIuL1RhYkVsZW1lbnRcIjtcclxuaW1wb3J0IERPTSBmcm9tICcuLi8uLi91dGlscy9ET00nO1xyXG5jb25zdCB7IGluc2VydEVsZW1lbnRzSW5UYXJnZXQgfSA9IERPTTtcclxuY2xhc3MgVGFiIGV4dGVuZHMgSFRNTERpdkVsZW1lbnQge1xyXG4gICAgY29uc3RydWN0b3IodGFiTmFtZXMpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuY2xhc3NOYW1lID0gJ3RhYic7XHJcbiAgICAgICAgdGhpcy5hY3RpdmVJbmRleCA9IDA7XHJcbiAgICAgICAgdGhpcy50YWJFbGVtZW50cyA9IHRoaXMuY3JlYXRlVGFiRWxlbWVudHModGFiTmFtZXMpO1xyXG4gICAgICAgIHRoaXMubGlzdGVuVGFiQ2hhbmdlKCk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVUYWJFbGVtZW50cyh0YWJOYW1lcykge1xyXG4gICAgICAgIGNvbnN0IHRhYkVsZW1lbnRzID0gdGFiTmFtZXMubWFwKCh0YWJOYW1lLCBpbmRleCkgPT4gbmV3IFRhYkVsZW1lbnQoe1xyXG4gICAgICAgICAgICBhY3RpdmU6IGluZGV4ID09PSB0aGlzLmFjdGl2ZUluZGV4LFxyXG4gICAgICAgICAgICB0YWJOYW1lLFxyXG4gICAgICAgICAgICBpbmRleCxcclxuICAgICAgICB9KSk7XHJcbiAgICAgICAgaW5zZXJ0RWxlbWVudHNJblRhcmdldCh0aGlzLCB0YWJFbGVtZW50cyk7XHJcbiAgICAgICAgcmV0dXJuIHRhYkVsZW1lbnRzO1xyXG4gICAgfVxyXG4gICAgbGlzdGVuVGFiQ2hhbmdlKCkge1xyXG4gICAgICAgIHRoaXMudGFiRWxlbWVudHMuZm9yRWFjaCgodGFiRWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICB0YWJFbGVtZW50LnRhYkNsaWNrKHRoaXMuY2xlYXJBY3RpdmF0ZS5iaW5kKHRoaXMpLCB0aGlzLnNldEFjdGl2ZVRhYi5iaW5kKHRoaXMpKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGNsZWFyQWN0aXZhdGUoKSB7XHJcbiAgICAgICAgdGhpcy50YWJFbGVtZW50cy5mb3JFYWNoKCh0YWIpID0+IHRhYi5zZXRJbmFjdGl2ZSgpKTtcclxuICAgIH1cclxuICAgIHNldEFjdGl2ZVRhYihpbmRleCkge1xyXG4gICAgICAgIHRoaXMuYWN0aXZlSW5kZXggPSBpbmRleDtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC10YWInLCBUYWIsIHsgZXh0ZW5kczogJ2RpdicgfSk7XHJcbmV4cG9ydCBkZWZhdWx0IFRhYjtcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc3RhdXJhbnQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZXN0YXVyYW50LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tb2RhbC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21vZGFsLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAnLi9tb2RhbC5jc3MnO1xyXG5jbGFzcyBNb2RhbCBleHRlbmRzIEhUTUxEaXZFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmNsYXNzTmFtZSA9IHByb3BzLmNsYXNzbmFtZTtcclxuICAgICAgICB0aGlzLm1vZGFsQmFja2Ryb3AgPSB0aGlzLmNyZWF0ZUJhY2tkcm9wKHByb3BzKTtcclxuICAgICAgICB0aGlzLm1vZGFsQ29udGFpbmVyID0gdGhpcy5jcmVhdGVNb2RhbENvbnRhaW5lcihwcm9wcyk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVCYWNrZHJvcCh7IGNsYXNzbmFtZSB9KSB7XHJcbiAgICAgICAgY29uc3QgbW9kYWxCYWNrZHJvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIG1vZGFsQmFja2Ryb3AuY2xhc3NOYW1lID0gYCR7Y2xhc3NuYW1lfS1iYWNrZHJvcGA7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChtb2RhbEJhY2tkcm9wKTtcclxuICAgICAgICByZXR1cm4gbW9kYWxCYWNrZHJvcDtcclxuICAgIH1cclxuICAgIGNyZWF0ZU1vZGFsQ29udGFpbmVyKHsgY2xhc3NuYW1lLCBjaGlsZCwgdGl0bGUgfSkge1xyXG4gICAgICAgIGNvbnN0IG1vZGFsQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbW9kYWxDb250YWluZXIuY2xhc3NOYW1lID0gYCR7Y2xhc3NuYW1lfS1jb250YWluZXJgO1xyXG4gICAgICAgIGlmICh0aXRsZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1vZGFsVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG4gICAgICAgICAgICBtb2RhbFRpdGxlLmNsYXNzTmFtZSA9ICdtb2RhbC10aXRsZSc7XHJcbiAgICAgICAgICAgIGNvbnN0IG1vZGFsVGl0bGVDbGFzc0xpc3QgPSBbJ21vZGFsLXRpdGxlJywgJ3RleHQtdGl0bGUnXTtcclxuICAgICAgICAgICAgbW9kYWxUaXRsZS50ZXh0Q29udGVudCA9IHRpdGxlO1xyXG4gICAgICAgICAgICBtb2RhbFRpdGxlLmNsYXNzTGlzdC5hZGQoLi4ubW9kYWxUaXRsZUNsYXNzTGlzdCk7XHJcbiAgICAgICAgICAgIG1vZGFsQ29udGFpbmVyLmFwcGVuZENoaWxkKG1vZGFsVGl0bGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBtb2RhbENvbnRhaW5lci5hcHBlbmRDaGlsZChjaGlsZCk7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChtb2RhbENvbnRhaW5lcik7XHJcbiAgICAgICAgcmV0dXJuIG1vZGFsQ29udGFpbmVyO1xyXG4gICAgfVxyXG4gICAgc3RvcEV2ZW50QnViYmxpbmcoKSB7XHJcbiAgICAgICAgdGhpcy5tb2RhbENvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGJhY2tkcm9wQ2xpY2sobW9kYWwsIGNsYXNzbmFtZSkge1xyXG4gICAgICAgIHRoaXMubW9kYWxCYWNrZHJvcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgbW9kYWwudG9nZ2xlTW9kYWwoY2xhc3NuYW1lKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHRvZ2dsZU1vZGFsKGNsYXNzbmFtZSkge1xyXG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LnRvZ2dsZShgJHtjbGFzc25hbWV9LS1vcGVuYCk7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtbW9kYWwnLCBNb2RhbCwgeyBleHRlbmRzOiAnZGl2JyB9KTtcclxuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9SZXN0YXVyYW50RGV0YWlsLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vUmVzdGF1cmFudERldGFpbC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vQ2F0ZWdvcnlJbWFnZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0NhdGVnb3J5SW1hZ2UuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuL0NhdGVnb3J5SW1hZ2UuY3NzJztcclxuaW1wb3J0IHsgQ2F0ZWdvcnlBc2lhbiwgQ2F0ZWdvcnlDaGluZXNlLCBDYXRlZ29yeUV0YywgQ2F0ZWdvcnlKYXBhbmVzZSwgQ2F0ZWdvcnlLb3JlYW4sIENhdGVnb3J5V2VzdGVybiwgfSBmcm9tICcuLi8uLi9hc3NldC9pbWcvaW5kZXgnO1xyXG5jb25zdCBDQVRFR09SWV9JTUFHRSA9IHtcclxuICAgIO2VnOyLnTogQ2F0ZWdvcnlLb3JlYW4sXHJcbiAgICDspJHsi506IENhdGVnb3J5Q2hpbmVzZSxcclxuICAgIOydvOyLnTogQ2F0ZWdvcnlKYXBhbmVzZSxcclxuICAgIOyWkeyLnTogQ2F0ZWdvcnlXZXN0ZXJuLFxyXG4gICAg7JWE7Iuc7JWIOiBDYXRlZ29yeUFzaWFuLFxyXG4gICAg6riw7YOAOiBDYXRlZ29yeUV0YyxcclxuICAgIOyghOyytDogJycsXHJcbn07XHJcbmNsYXNzIENhdGVnb3J5SW1hZ2UgZXh0ZW5kcyBIVE1MRGl2RWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcihjYXRlZ29yeSkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5jbGFzc05hbWUgPSAncmVzdGF1cmFudF9fY2F0ZWdvcnknO1xyXG4gICAgICAgIHRoaXMuY3JlYXRlUmVzdGF1cmFudENhdGVnb3J5KGNhdGVnb3J5KTtcclxuICAgIH1cclxuICAgIGNyZWF0ZVJlc3RhdXJhbnRDYXRlZ29yeShjYXRlZ29yeSkge1xyXG4gICAgICAgIGNvbnN0IGltZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG4gICAgICAgIGltZy5zZXRBdHRyaWJ1dGUoJ3NyYycsIENBVEVHT1JZX0lNQUdFW2NhdGVnb3J5XSk7XHJcbiAgICAgICAgaW1nLnNldEF0dHJpYnV0ZSgnYWx0JywgY2F0ZWdvcnkpO1xyXG4gICAgICAgIGltZy5jbGFzc05hbWUgPSAnY2F0ZWdvcnktaWNvbic7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChpbWcpO1xyXG4gICAgfVxyXG59XHJcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnbWF0emlwLWNhdGVnb3J5LWltYWdlJywgQ2F0ZWdvcnlJbWFnZSwgeyBleHRlbmRzOiAnZGl2JyB9KTtcclxuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcnlJbWFnZTtcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0Zhdm9yaXRlSWNvbi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0Zhdm9yaXRlSWNvbi5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgJy4vRmF2b3JpdGVJY29uLmNzcyc7XHJcbmltcG9ydCBGaWxsZWQgZnJvbSAnLi4vLi4vYXNzZXQvaW1nL2Zhdm9yaXRlLWljb24tZmlsbGVkLnBuZyc7XHJcbmltcG9ydCBMaW5lZCBmcm9tICcuLi8uLi9hc3NldC9pbWcvZmF2b3JpdGUtaWNvbi1saW5lZC5wbmcnO1xyXG5jbGFzcyBGYXZvcml0ZUljb24gZXh0ZW5kcyBIVE1MSW1hZ2VFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHsgYWN0aXZlLCBpc0NoaWxkLCBjaGFuZ2VTdGF0ZSB9KSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmFjdGl2ZSA9IGFjdGl2ZTtcclxuICAgICAgICB0aGlzLnNyYyA9IHRoaXMuc2hvd1N0YXJJY29uKCk7XHJcbiAgICAgICAgdGhpcy5hbHQgPSAnZmF2b3JpdGUtaWNvbic7XHJcbiAgICAgICAgdGhpcy5jbGFzc05hbWUgPSAnZmF2b3JpdGUtaWNvbic7XHJcbiAgICAgICAgaXNDaGlsZCA/IHRoaXMuY2xhc3NMaXN0LmFkZCgnZmF2b3JpdGUtaWNvbi1jbG9uZWQnKSA6IHRoaXMuY2xhc3NMaXN0LmFkZCgnZmF2b3JpdGUtaWNvbi1vcmlnaW4nKTtcclxuICAgICAgICB0aGlzLnN0b3BFdmVudEJ1YmJsaW5nKCk7XHJcbiAgICAgICAgdGhpcy5saXN0ZW5DaGFuZ2VTdGF0ZShjaGFuZ2VTdGF0ZSk7XHJcbiAgICB9XHJcbiAgICBzaG93U3Rhckljb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aXZlID8gRmlsbGVkIDogTGluZWQ7XHJcbiAgICB9XHJcbiAgICBsaXN0ZW5DaGFuZ2VTdGF0ZSh7IGFkZEZhdm9yaXRlLCBkZWxldGVGYXZvcml0ZSwgdGFyZ2V0SWQgfSkge1xyXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlID8gZGVsZXRlRmF2b3JpdGUoKSA6IGFkZEZhdm9yaXRlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlID0gIXRoaXMuYWN0aXZlO1xyXG4gICAgICAgICAgICB0aGlzLnNyYyA9IHRoaXMuc2hvd1N0YXJJY29uKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGljb25TdGF0ZUNoYW5nZUV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdpY29uU3RhdGVDaGFuZ2UnLCB7XHJcbiAgICAgICAgICAgICAgICBkZXRhaWw6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRJZCxcclxuICAgICAgICAgICAgICAgICAgICBzdGF0ZTogdGhpcy5hY3RpdmUsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGljb25TdGF0ZUNoYW5nZUV2ZW50KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIHN0b3BFdmVudEJ1YmJsaW5nKCkge1xyXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtZmF2b3JpdGUtaWNvbicsIEZhdm9yaXRlSWNvbiwgeyBleHRlbmRzOiAnaW1nJyB9KTtcclxuZXhwb3J0IGRlZmF1bHQgRmF2b3JpdGVJY29uO1xyXG4iLCJpbXBvcnQgJy4vUmVzdGF1cmFudERldGFpbC5jc3MnO1xyXG5pbXBvcnQgQ2F0ZWdvcnlJbWFnZSBmcm9tIFwiLi4vY2F0ZWdvcnlJbWFnZS9DYXRlZ29yeUltYWdlXCI7XHJcbmltcG9ydCBGYXZvcml0ZUljb24gZnJvbSAnLi4vZmF2b3JpdGVJY29uL0Zhdm9yaXRlSWNvbic7XHJcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gJy4uL3RhZy9idXR0b24nO1xyXG5pbXBvcnQgQXBwIGZyb20gJy4uLy4uL2FwcCc7XHJcbmltcG9ydCBzdG9yYWdlIGZyb20gJy4uLy4uL3N0b3JhZ2UnO1xyXG5pbXBvcnQgTE9DQUxfU1RPUkFHRV9LRVkgZnJvbSAnLi4vLi4vY29uc3RhbnRzL0xvY2FsU3RvcmFnZUtleSc7XHJcbmltcG9ydCBET00gZnJvbSAnLi4vLi4vdXRpbHMvRE9NJztcclxuY29uc3QgeyAkIH0gPSBET007XHJcbmNvbnN0IHsgRkFWT1JJVEVfREFUQSB9ID0gTE9DQUxfU1RPUkFHRV9LRVk7XHJcbmNsYXNzIFJlc3RhdXJhbnREZXRhaWwgZXh0ZW5kcyBIVE1MRGl2RWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcihyZXN0YXVyYW50LCBmYXZvcml0ZUljb24pIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuaWQgPSByZXN0YXVyYW50LmlkO1xyXG4gICAgICAgIHRoaXMuY2xhc3NOYW1lID0gJ2RldGFpbF9fY29udGFpbmVyJztcclxuICAgICAgICB0aGlzLmNyZWF0ZUxheW91dChyZXN0YXVyYW50KTtcclxuICAgICAgICBjb25zdCB7IGNhbmNlbEJ1dHRvbiwgZGVsZXRlQnV0dG9uIH0gPSB0aGlzLmNyZWF0ZUJ1dHRvbnMoKTtcclxuICAgICAgICB0aGlzLmNhbmNlbEJ1dHRvbiA9IGNhbmNlbEJ1dHRvbjtcclxuICAgICAgICB0aGlzLmRlbGV0ZUJ1dHRvbiA9IGRlbGV0ZUJ1dHRvbjtcclxuICAgICAgICB0aGlzLmZhdm9yaXRlSWNvbiA9IGZhdm9yaXRlSWNvbjtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKHRoaXMuZmF2b3JpdGVJY29uKTtcclxuICAgICAgICB0aGlzLmxpc3RlblJlcmVuZGVyKCk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVMYXlvdXQoeyBjYXRlZ29yeSwgbmFtZSwgZGlzdGFuY2UsIGludHJvZHVjdGlvbiwgbGluayB9KSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVDYXRlZ29yeUltYWdlKGNhdGVnb3J5KTtcclxuICAgICAgICB0aGlzLmNyZWF0ZVJlc3RhdXJhbnROYW1lKG5hbWUpO1xyXG4gICAgICAgIHRoaXMuY3JlYXRlRGlzdGFuY2UoZGlzdGFuY2UpO1xyXG4gICAgICAgIHRoaXMuY3JlYXRlSW50cm9kdWN0aW9uKGludHJvZHVjdGlvbik7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVMaW5rKGxpbmspO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQ2F0ZWdvcnlJbWFnZShjYXRlZ29yeSkge1xyXG4gICAgICAgIGNvbnN0IGNhdGVnb3J5SW1hZ2UgPSBuZXcgQ2F0ZWdvcnlJbWFnZShjYXRlZ29yeSk7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChjYXRlZ29yeUltYWdlKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZVJlc3RhdXJhbnROYW1lKG5hbWUpIHtcclxuICAgICAgICBjb25zdCB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XHJcbiAgICAgICAgdGl0bGUuY2xhc3NMaXN0LmFkZCgndGV4dC1zdWJ0aXRsZScsICdkZXRhaWxfX2ZpZWxkJywgJ2RldGFpbF9fdGl0bGUnKTtcclxuICAgICAgICB0aXRsZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZCh0aXRsZSk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVEaXN0YW5jZShkaXN0YW5jZSkge1xyXG4gICAgICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XHJcbiAgICAgICAgc3Bhbi5jbGFzc0xpc3QuYWRkKCdyZXN0YXVyYW50X19kaXN0YW5jZScsICd0ZXh0LWJvZHknLCAnZGV0YWlsX19maWVsZCcpO1xyXG4gICAgICAgIHNwYW4udGV4dENvbnRlbnQgPSBg7Lqg7Y287Iqk67aA7YSwICR7ZGlzdGFuY2V967aEIOuCtGA7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChzcGFuKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZUludHJvZHVjdGlvbihpbnRyb2R1Y3Rpb24pIHtcclxuICAgICAgICBpZiAoaW50cm9kdWN0aW9uID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgIHAuY2xhc3NMaXN0LmFkZCgncmVzdGF1cmFudF9fZGVzY3JpcHRpb24nLCAndGV4dC1ib2R5JywgJ2RldGFpbF9fZmllbGQnKTtcclxuICAgICAgICBwLnRleHRDb250ZW50ID0gaW50cm9kdWN0aW9uO1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQocCk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVMaW5rKGxpbmspIHtcclxuICAgICAgICBpZiAobGluayA9PT0gdW5kZWZpbmVkIHx8IGxpbmsgPT09ICcnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlTGlua0ZhbGxiYWNrKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgO1xyXG4gICAgICAgIGNvbnN0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbiAgICAgICAgYS5jbGFzc0xpc3QuYWRkKCdyZXN0YXVyYW50X19saW5rJywgJ3RleHQtYm9keScsICdkZXRhaWxfX2ZpZWxkJyk7XHJcbiAgICAgICAgYS5ocmVmID0gbGluaztcclxuICAgICAgICBhLnRleHRDb250ZW50ID0gbGluaztcclxuICAgICAgICBhLnRhcmdldCA9ICdibGFuayc7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChhKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZUxpbmtGYWxsYmFjaygpIHtcclxuICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgIHAuY2xhc3NMaXN0LmFkZCgncmVzdGF1cmFudF9fZGVzY3JpcHRpb24nLCAndGV4dC1ib2R5JywgJ2RldGFpbF9fZmllbGQnKTtcclxuICAgICAgICBwLnRleHRDb250ZW50ID0gJ+uTseuhneuQnCB1cmzsnbQg7JeG7Iq164uI64uk44Wc44WcJztcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKHApO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQnV0dG9ucygpIHtcclxuICAgICAgICBjb25zdCBidXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBidXR0b25Db250YWluZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsICdidXR0b24tY29udGFpbmVyJyk7XHJcbiAgICAgICAgY29uc3QgZGVsZXRlQnV0dG9uID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnYnV0dG9uJyxcclxuICAgICAgICAgICAgY2xhc3NuYW1lczogWydidXR0b24nLCAndGV4dC1jYXB0aW9uJywgJ2RlbGV0ZS1yZXN0YXVyYW50LWJ1dHRvbiddLFxyXG4gICAgICAgICAgICB2YXJpZW50OiAnc2Vjb25kYXJ5JyxcclxuICAgICAgICAgICAgY2hpbGRyZW46ICfsgq3soJztlZjquLAnLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAnYnV0dG9uJyxcclxuICAgICAgICAgICAgY2xhc3NuYW1lczogWydidXR0b24nLCAndGV4dC1jYXB0aW9uJywgJ2RldGFpbC1tb2RhbC0tY2xvc2UnXSxcclxuICAgICAgICAgICAgdmFyaWVudDogJ3ByaW1hcnknLFxyXG4gICAgICAgICAgICBjaGlsZHJlbjogJ+uLq+q4sCcsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBidXR0b25zID0ge1xyXG4gICAgICAgICAgICBjYW5jZWxCdXR0b246IG5ldyBCdXR0b24oY2FuY2VsQnV0dG9uKSxcclxuICAgICAgICAgICAgZGVsZXRlQnV0dG9uOiBuZXcgQnV0dG9uKGRlbGV0ZUJ1dHRvbiksXHJcbiAgICAgICAgfTtcclxuICAgICAgICBidXR0b25Db250YWluZXIuYXBwZW5kQ2hpbGQoYnV0dG9ucy5kZWxldGVCdXR0b24pO1xyXG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChidXR0b25zLmNhbmNlbEJ1dHRvbik7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChidXR0b25Db250YWluZXIpO1xyXG4gICAgICAgIHJldHVybiBidXR0b25zO1xyXG4gICAgfVxyXG4gICAgbGlzdGVuQ2xvc2VCdXR0b25DbGljaygpIHtcclxuICAgICAgICB0aGlzLmNhbmNlbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgKHRoaXMucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCkudG9nZ2xlTW9kYWwoJ2RldGFpbC1tb2RhbCcpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgbGlzdGVuRGVsZXRlQnV0b25DbGljayh0b2dnbGVNb2RhbCkge1xyXG4gICAgICAgIHRoaXMuZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAod2luZG93LmNvbmZpcm0oJ+ygleunkCDsgq3soJztlZjsi5zqsqDsirXri4jquYw/JykpIHtcclxuICAgICAgICAgICAgICAgIHRvZ2dsZU1vZGFsKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmRpc3BhdGNoUmVzdGF1cmFudERlbGV0ZUV2ZW50KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGRpc3BhdGNoUmVzdGF1cmFudERlbGV0ZUV2ZW50KCkge1xyXG4gICAgICAgIGNvbnN0IHJlc3RhdXJhbnREZWxldGVFdmVudCA9IG5ldyBDdXN0b21FdmVudCgnZGVsZXRlUmVzdGF1cmFudCcsIHtcclxuICAgICAgICAgICAgZGV0YWlsOiB7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXRJZDogdGhpcy5pZCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGRvY3VtZW50LmRpc3BhdGNoRXZlbnQocmVzdGF1cmFudERlbGV0ZUV2ZW50KTtcclxuICAgIH1cclxuICAgIGdldENoYW5nZVN0YXRlKGlkKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgYWRkRmF2b3JpdGU6ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIEFwcC5tYXR6aXAuYWRkRmF2b3JpdGUoaWQpO1xyXG4gICAgICAgICAgICAgICAgc3RvcmFnZS5hZGREYXRhKEZBVk9SSVRFX0RBVEEsIGlkKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGVsZXRlRmF2b3JpdGU6ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIEFwcC5tYXR6aXAuZGVsZXRlRmF2b3JpdGUoaWQpO1xyXG4gICAgICAgICAgICAgICAgc3RvcmFnZS5tb2RpZnlEYXRhKEZBVk9SSVRFX0RBVEEsIEFwcC5tYXR6aXAuZ2V0TXlGYXZvcml0ZXMoKSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRhcmdldElkOiBpZCxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgbGlzdGVuUmVyZW5kZXIoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaWNvblN0YXRlQ2hhbmdlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGljb25TdGF0ZUNoYW5nZUV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgdGFyZ2V0SWQsIHN0YXRlIH0gPSBpY29uU3RhdGVDaGFuZ2VFdmVudC5kZXRhaWw7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld0VsZW1lbnQgPSBuZXcgRmF2b3JpdGVJY29uKHsgYWN0aXZlOiBzdGF0ZSwgaXNDaGlsZDogZmFsc2UsIGNoYW5nZVN0YXRlOiB0aGlzLmdldENoYW5nZVN0YXRlKHRhcmdldElkKSB9KTtcclxuICAgICAgICAgICAgY29uc3QgdGFyZ2V0ID0gJChgI3Jlc3RhdXJhbnQtbGlzdCR7dGFyZ2V0SWR9YCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG9sZEVsZW1lbnQgPSB0YXJnZXQucXVlcnlTZWxlY3RvcignLmZhdm9yaXRlLWljb24tb3JpZ2luJyk7XHJcbiAgICAgICAgICAgICQoYCNyZXN0YXVyYW50LWxpc3Qke3RhcmdldElkfWApLnJlcGxhY2VDaGlsZChuZXdFbGVtZW50LCBvbGRFbGVtZW50KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC1yZXN0YXVyYW50LWRldGFpbC1tb2RhbCcsIFJlc3RhdXJhbnREZXRhaWwsIHsgZXh0ZW5kczogJ2RpdicgfSk7XHJcbmV4cG9ydCBkZWZhdWx0IFJlc3RhdXJhbnREZXRhaWw7XHJcbiIsImltcG9ydCAnLi9yZXN0YXVyYW50LmNzcyc7XHJcbmltcG9ydCBNb2RhbCBmcm9tICcuLi9tb2RhbC9Nb2RhbCc7XHJcbmltcG9ydCBSZXN0YXVyYW50RGV0YWlsIGZyb20gJy4uL3Jlc3RhdXJhbnREZXRhaWwvUmVzdGF1cmFudERldGFpbCc7XHJcbmltcG9ydCBDYXRlZ29yeUltYWdlIGZyb20gJy4uL2NhdGVnb3J5SW1hZ2UvQ2F0ZWdvcnlJbWFnZSc7XHJcbmltcG9ydCBGYXZvcml0ZUljb24gZnJvbSAnLi4vZmF2b3JpdGVJY29uL0Zhdm9yaXRlSWNvbic7XHJcbmltcG9ydCBBcHAgZnJvbSAnLi4vLi4vYXBwJztcclxuaW1wb3J0IHN0b3JhZ2UgZnJvbSAnLi4vLi4vc3RvcmFnZSc7XHJcbmltcG9ydCBMT0NBTF9TVE9SQUdFX0tFWSBmcm9tICcuLi8uLi9jb25zdGFudHMvTG9jYWxTdG9yYWdlS2V5JztcclxuaW1wb3J0IGNsb25lRmF2b3JpdGVJY29uIGZyb20gJy4uL2Zhdm9yaXRlSWNvbi9jbG9uZUZhdm9yaXRlSWNvbic7XHJcbmltcG9ydCBET00gZnJvbSAnLi4vLi4vdXRpbHMvRE9NJztcclxuY29uc3QgeyAkIH0gPSBET007XHJcbmNvbnN0IHsgRkFWT1JJVEVfREFUQSB9ID0gTE9DQUxfU1RPUkFHRV9LRVk7XHJcbmNsYXNzIFJlc3RhdXJhbnQgZXh0ZW5kcyBIVE1MTElFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHJlc3RhdXJhbnQsIGlzRmF2b3JpdGUpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuaWQgPSBgcmVzdGF1cmFudC1saXN0JHtyZXN0YXVyYW50LmlkfWA7XHJcbiAgICAgICAgdGhpcy5jbGFzc05hbWUgPSAncmVzdGF1cmFudCc7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVMYXlvdXQocmVzdGF1cmFudCk7XHJcbiAgICAgICAgdGhpcy5mYXZvcml0ZUljb24gPSB0aGlzLmNyZWF0ZUZhdm9yaXRlSWNvbihyZXN0YXVyYW50LCBpc0Zhdm9yaXRlKTtcclxuICAgICAgICBjb25zdCB7IG1vZGFsLCBjb250ZW50IH0gPSB0aGlzLmNyZWF0ZURldGFpbE1vZGFsKHJlc3RhdXJhbnQsIGlzRmF2b3JpdGUpO1xyXG4gICAgICAgIHRoaXMubW9kYWwgPSBtb2RhbDtcclxuICAgICAgICB0aGlzLmNvbnRlbnQgPSBjb250ZW50O1xyXG4gICAgICAgIHRoaXMubGlzdGVuT3BlbkRldGFpbE1vZGFsKCk7XHJcbiAgICAgICAgdGhpcy5saXN0ZW5DYW5jZWxCdXR0b25DbGljaygpO1xyXG4gICAgICAgIHRoaXMubGlzdGVuRGVsZXRlQnV0dG9uQ2xpY2soKTtcclxuICAgICAgICB0aGlzLmxpc3RlblJlcmVuZGVyKCk7XHJcbiAgICB9XHJcbiAgICA7XHJcbiAgICByZXJlbmRlck1vZGFsKHJlc3RhdXJhbnQsIGlzRmF2b3JpdGUpIHtcclxuICAgICAgICBjb25zdCB7IG1vZGFsLCBjb250ZW50IH0gPSB0aGlzLmNyZWF0ZURldGFpbE1vZGFsKHJlc3RhdXJhbnQsIGlzRmF2b3JpdGUpO1xyXG4gICAgICAgIHRoaXMubW9kYWwgPSBtb2RhbDtcclxuICAgICAgICB0aGlzLmNvbnRlbnQgPSBjb250ZW50O1xyXG4gICAgICAgIHRoaXMubGlzdGVuT3BlbkRldGFpbE1vZGFsKCk7XHJcbiAgICAgICAgdGhpcy5saXN0ZW5DYW5jZWxCdXR0b25DbGljaygpO1xyXG4gICAgICAgIHRoaXMubGlzdGVuRGVsZXRlQnV0dG9uQ2xpY2soKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZUxheW91dChyZXN0YXVyYW50KSB7XHJcbiAgICAgICAgY29uc3QgZnJhZyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcclxuICAgICAgICBjb25zdCByZXN0YXVyYW50Q2F0ZWdvcnkgPSBuZXcgQ2F0ZWdvcnlJbWFnZShyZXN0YXVyYW50LmNhdGVnb3J5KTtcclxuICAgICAgICBjb25zdCByZXN0YXVyYW50SW5mbyA9IHRoaXMuY3JlYXRlUmVzdGF1cmFudEluZm8ocmVzdGF1cmFudCk7XHJcbiAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChyZXN0YXVyYW50Q2F0ZWdvcnkpO1xyXG4gICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQocmVzdGF1cmFudEluZm8pO1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoZnJhZyk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVGYXZvcml0ZUljb24ocmVzdGF1cmFudCwgaXNGYXZvcml0ZSkge1xyXG4gICAgICAgIGNvbnN0IGZhdm9yaXRlSWNvbiA9IG5ldyBGYXZvcml0ZUljb24oeyBhY3RpdmU6IGlzRmF2b3JpdGUsIGlzQ2hpbGQ6IGZhbHNlLCBjaGFuZ2VTdGF0ZTogdGhpcy5nZXRDaGFuZ2VTdGF0ZShyZXN0YXVyYW50LmlkKSB9KTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGZhdm9yaXRlSWNvbik7XHJcbiAgICAgICAgcmV0dXJuIGZhdm9yaXRlSWNvbjtcclxuICAgIH1cclxuICAgIGNyZWF0ZVJlc3RhdXJhbnRJbmZvKHJlc3RhdXJhbnQpIHtcclxuICAgICAgICBjb25zdCB7IG5hbWUsIGRpc3RhbmNlLCBpbnRyb2R1Y3Rpb24gfSA9IHJlc3RhdXJhbnQ7XHJcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudEluZm8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICByZXN0YXVyYW50SW5mby5jbGFzc05hbWUgPSAncmVzdGF1cmFudF9faW5mbyc7XHJcbiAgICAgICAgY29uc3QgaDMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xyXG4gICAgICAgIGNvbnN0IGgzQ2xhc3NMaXN0ID0gWydyZXN0YXVyYW50X19uYW1lJywgJ3RleHQtc3VidGl0bGUnXTtcclxuICAgICAgICBoMy5jbGFzc0xpc3QuYWRkKC4uLmgzQ2xhc3NMaXN0KTtcclxuICAgICAgICBoMy50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgY29uc3Qgc3BhbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcclxuICAgICAgICBjb25zdCBzcGFuQ2xhc3NMaXN0ID0gWydyZXN0YXVyYW50X19kaXN0YW5jZScsICd0ZXh0LWJvZHknXTtcclxuICAgICAgICBzcGFuLmNsYXNzTGlzdC5hZGQoLi4uc3BhbkNsYXNzTGlzdCk7XHJcbiAgICAgICAgc3Bhbi50ZXh0Q29udGVudCA9IGDsuqDtjbzsiqTrtoDthLAgJHtkaXN0YW5jZX3rtoQg64K0YDtcclxuICAgICAgICBjb25zdCBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xyXG4gICAgICAgIGNvbnN0IHBDbGFzc0xpc3QgPSBbJ3Jlc3RhdXJhbnRfX2Rlc2NyaXB0aW9uJywgJ3RleHQtYm9keSddO1xyXG4gICAgICAgIHAuY2xhc3NMaXN0LmFkZCguLi5wQ2xhc3NMaXN0KTtcclxuICAgICAgICBwLnRleHRDb250ZW50ID0gaW50cm9kdWN0aW9uID8/ICcnO1xyXG4gICAgICAgIHJlc3RhdXJhbnRJbmZvLmFwcGVuZENoaWxkKGgzKTtcclxuICAgICAgICByZXN0YXVyYW50SW5mby5hcHBlbmRDaGlsZChzcGFuKTtcclxuICAgICAgICByZXN0YXVyYW50SW5mby5hcHBlbmRDaGlsZChwKTtcclxuICAgICAgICByZXR1cm4gcmVzdGF1cmFudEluZm87XHJcbiAgICB9XHJcbiAgICBjcmVhdGVEZXRhaWxNb2RhbChyZXN0YXVyYW50LCBpc0Zhdm9yaXRlKSB7XHJcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudERldGFpbCA9IG5ldyBSZXN0YXVyYW50RGV0YWlsKHJlc3RhdXJhbnQsIGNsb25lRmF2b3JpdGVJY29uKHRoaXMuZmF2b3JpdGVJY29uLCBpc0Zhdm9yaXRlLCB0aGlzLmdldENoYW5nZVN0YXRlKHJlc3RhdXJhbnQuaWQpKSk7XHJcbiAgICAgICAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoeyBjbGFzc25hbWU6ICdkZXRhaWwtbW9kYWwnLCBjaGlsZDogcmVzdGF1cmFudERldGFpbCB9KTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKG1vZGFsKTtcclxuICAgICAgICByZXR1cm4geyBtb2RhbCwgY29udGVudDogcmVzdGF1cmFudERldGFpbCB9O1xyXG4gICAgfVxyXG4gICAgbGlzdGVuT3BlbkRldGFpbE1vZGFsKCkge1xyXG4gICAgICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMubW9kYWwuc3RvcEV2ZW50QnViYmxpbmcoKTtcclxuICAgICAgICAgICAgdGhpcy50b2dnbGVNb2RhbCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgdG9nZ2xlTW9kYWwoKSB7XHJcbiAgICAgICAgdGhpcy5tb2RhbC50b2dnbGVNb2RhbCgnZGV0YWlsLW1vZGFsJyk7XHJcbiAgICB9XHJcbiAgICBsaXN0ZW5DYW5jZWxCdXR0b25DbGljaygpIHtcclxuICAgICAgICB0aGlzLmNvbnRlbnQubGlzdGVuQ2xvc2VCdXR0b25DbGljaygpO1xyXG4gICAgfVxyXG4gICAgbGlzdGVuRGVsZXRlQnV0dG9uQ2xpY2soKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZW50Lmxpc3RlbkRlbGV0ZUJ1dG9uQ2xpY2sodGhpcy50b2dnbGVNb2RhbC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuICAgIGdldENoYW5nZVN0YXRlKGlkKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgYWRkRmF2b3JpdGU6ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIEFwcC5tYXR6aXAuYWRkRmF2b3JpdGUoaWQpO1xyXG4gICAgICAgICAgICAgICAgc3RvcmFnZS5hZGREYXRhKEZBVk9SSVRFX0RBVEEsIGlkKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGVsZXRlRmF2b3JpdGU6ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIEFwcC5tYXR6aXAuZGVsZXRlRmF2b3JpdGUoaWQpO1xyXG4gICAgICAgICAgICAgICAgc3RvcmFnZS5tb2RpZnlEYXRhKEZBVk9SSVRFX0RBVEEsIEFwcC5tYXR6aXAuZ2V0TXlGYXZvcml0ZXMoKSk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRhcmdldElkOiBpZCxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgbGlzdGVuUmVyZW5kZXIoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaWNvblN0YXRlQ2hhbmdlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGljb25TdGF0ZUNoYW5nZUV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgdGFyZ2V0SWQsIHN0YXRlIH0gPSBpY29uU3RhdGVDaGFuZ2VFdmVudC5kZXRhaWw7XHJcbiAgICAgICAgICAgIGNvbnN0IG5ld0VsZW1lbnQgPSBuZXcgRmF2b3JpdGVJY29uKHsgYWN0aXZlOiBzdGF0ZSwgaXNDaGlsZDogdHJ1ZSwgY2hhbmdlU3RhdGU6IHRoaXMuZ2V0Q2hhbmdlU3RhdGUodGFyZ2V0SWQpIH0pO1xyXG4gICAgICAgICAgICBjb25zdCB0YXJnZXQgPSAkKGAjJHt0YXJnZXRJZH1gKTtcclxuICAgICAgICAgICAgY29uc3Qgb2xkRWxlbWVudCA9IHRhcmdldC5xdWVyeVNlbGVjdG9yKCcuZmF2b3JpdGUtaWNvbi1jbG9uZWQnKTtcclxuICAgICAgICAgICAgJChgIyR7dGFyZ2V0SWR9YCkucmVwbGFjZUNoaWxkKG5ld0VsZW1lbnQsIG9sZEVsZW1lbnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgncmVzdGF1cmFudC1saXN0LWNvbnRhaW5lcicsIFJlc3RhdXJhbnQsIHsgZXh0ZW5kczogJ2xpJyB9KTtcclxuZXhwb3J0IGRlZmF1bHQgUmVzdGF1cmFudDtcclxuIiwiaW1wb3J0IEZhdm9yaXRlSWNvbiBmcm9tIFwiLi9GYXZvcml0ZUljb25cIjtcclxuZnVuY3Rpb24gY2xvbmVGYXZvcml0ZUljb24ob3JpZ2luLCBhY3RpdmUsIGNoYW5nZVN0YXRlKSB7XHJcbiAgICBjb25zdCBjbG9uZSA9IG5ldyBGYXZvcml0ZUljb24oeyBhY3RpdmUsIGlzQ2hpbGQ6IHRydWUsIGNoYW5nZVN0YXRlIH0pO1xyXG4gICAgY2xvbmUuc2hvd1N0YXJJY29uID0gb3JpZ2luLnNob3dTdGFySWNvbjtcclxuICAgIGNsb25lLmxpc3RlbkNoYW5nZVN0YXRlID0gb3JpZ2luLmxpc3RlbkNoYW5nZVN0YXRlO1xyXG4gICAgcmV0dXJuIGNsb25lO1xyXG59XHJcbjtcclxuZXhwb3J0IGRlZmF1bHQgY2xvbmVGYXZvcml0ZUljb247XHJcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9MaXN0Q29udGFpbmVyLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vTGlzdENvbnRhaW5lci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgRE9NIGZyb20gXCIuLi8uLi91dGlscy9ET01cIjtcclxuaW1wb3J0ICcuL0xpc3RDb250YWluZXIuY3NzJztcclxuY29uc3QgeyBpbnNlcnRFbGVtZW50c0luVGFyZ2V0IH0gPSBET007XHJcbmNsYXNzIExpc3RDb250YWluZXIgZXh0ZW5kcyBIVE1MVUxpc3RFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHJlc3RhdXJhbnRzKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICB0aGlzLmlkID0gJ3Jlc3RhdXJhbnQtbGlzdHMnO1xyXG4gICAgICAgIHRoaXMuY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnQtbGlzdHMnO1xyXG4gICAgICAgIHRoaXMuZmFsbGJhY2tVSSA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50cyA9IHRoaXMuY3JlYXRlUmVzdGF1cmFudHMocmVzdGF1cmFudHMpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlUmVzdGF1cmFudHMocmVzdGF1cmFudHMpIHtcclxuICAgICAgICBpZiAocmVzdGF1cmFudHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZmFsbGJhY2tVSSA9IHRoaXMuY3JlYXRlRmFsbGJhY2soKTtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpbnNlcnRFbGVtZW50c0luVGFyZ2V0KHRoaXMsIHJlc3RhdXJhbnRzKTtcclxuICAgICAgICByZXR1cm4gcmVzdGF1cmFudHM7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVGYWxsYmFjaygpIHtcclxuICAgICAgICBjb25zdCBub3RoaW5nQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgbm90aGluZ0NvbnRhaW5lci5pZCA9ICdub3RoaW5nX19yZXN0YXVyYW50JztcclxuICAgICAgICBub3RoaW5nQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ25vdGhpbmdfX3Jlc3RhdXJhbnQnKTtcclxuICAgICAgICBjb25zdCBub3RoaW5nTWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcclxuICAgICAgICBub3RoaW5nTWVudC5jbGFzc0xpc3QuYWRkKCd0ZXh0LXRpdGxlJywgJ25vdGhpbmdfX21lbnQnKTtcclxuICAgICAgICBub3RoaW5nTWVudC50ZXh0Q29udGVudCA9ICfslrTrqLjrgpgg65Ox66Gd65CcIOunm+ynkeydtCDsl4bslrTsmpTjhaAnO1xyXG4gICAgICAgIG5vdGhpbmdDb250YWluZXIuYXBwZW5kQ2hpbGQobm90aGluZ01lbnQpO1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQobm90aGluZ0NvbnRhaW5lcik7XHJcbiAgICAgICAgcmV0dXJuIG5vdGhpbmdDb250YWluZXI7XHJcbiAgICB9XHJcbiAgICBhZGRSZXN0YXVyYW50cyhyZXN0YXVyYW50KSB7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChyZXN0YXVyYW50KTtcclxuICAgICAgICBpZiAodGhpcy5yZXN0YXVyYW50cy5sZW5ndGggPT09IDAgJiYgdGhpcy5mYWxsYmFja1VJICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlQ2hpbGQodGhpcy5mYWxsYmFja1VJKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5yZXN0YXVyYW50cy5wdXNoKHJlc3RhdXJhbnQpO1xyXG4gICAgfVxyXG4gICAgZGVsZXRlUmVzdGF1cmFudCh0YXJnZXRJZCkge1xyXG4gICAgICAgIGNvbnN0IHRhcmdldE5vZGUgPSB0aGlzLnJlc3RhdXJhbnRzLmZpbmQoKHJlc3RhdXJhbnQpID0+IHJlc3RhdXJhbnQuaWQgPT09IGByZXN0YXVyYW50LWxpc3Qke3RhcmdldElkfWApO1xyXG4gICAgICAgIGNvbnN0IHRhcmdldE5vZGVJbmRleCA9IHRoaXMucmVzdGF1cmFudHMuZmluZEluZGV4KChyZXN0YXVyYW50KSA9PiByZXN0YXVyYW50LmlkID09PSBgcmVzdGF1cmFudC1saXN0JHt0YXJnZXRJZH1gKTtcclxuICAgICAgICBpZiAodGFyZ2V0Tm9kZSA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgdGhpcy5yZW1vdmVDaGlsZCh0YXJnZXROb2RlKTtcclxuICAgICAgICB0aGlzLnJlc3RhdXJhbnRzLnNwbGljZSh0YXJnZXROb2RlSW5kZXgsIDEpO1xyXG4gICAgICAgIGlmICh0aGlzLnJlc3RhdXJhbnRzLmxlbmd0aCA9PT0gMCAmJiB0aGlzLmZhbGxiYWNrVUkgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5mYWxsYmFja1VJID0gdGhpcy5jcmVhdGVGYWxsYmFjaygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldCByZXN0YXVyYW50Q291bnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdGF1cmFudHMubGVuZ3RoO1xyXG4gICAgfVxyXG59XHJcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnbWF0emlwLWxpc3QtY29udGFpbmVyJywgTGlzdENvbnRhaW5lciwgeyBleHRlbmRzOiAndWwnIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBMaXN0Q29udGFpbmVyO1xyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vY2FwdGlvbi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NhcHRpb24uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuL2NhcHRpb24uY3NzJztcclxuY2xhc3MgQ2FwdGlvbiBleHRlbmRzIEhUTUxTcGFuRWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgY29uc3QgeyBjbGFzc25hbWVzLCB0ZXh0IH0gPSBwcm9wcztcclxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoLi4uY2xhc3NuYW1lcyk7XHJcbiAgICAgICAgdGhpcy50ZXh0Q29udGVudCA9IHRleHQ7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtY2FwdGlvbicsIENhcHRpb24sIHsgZXh0ZW5kczogJ3NwYW4nIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBDYXB0aW9uO1xyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5wdXQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbnB1dC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgJy4vaW5wdXQuY3NzJztcclxuY2xhc3MgSW5wdXQgZXh0ZW5kcyBIVE1MSW5wdXRFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBjb25zdCB7IHR5cGUsIG5hbWUsIGlkLCByZXF1aXJlZCwgcGF0dGVybiB9ID0gcHJvcHM7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuaWQgPSBpZDtcclxuICAgICAgICB0aGlzLnJlcXVpcmVkID0gcmVxdWlyZWQ7XHJcbiAgICAgICAgaWYgKHBhdHRlcm4gIT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgdGhpcy5wYXR0ZXJuID0gcGF0dGVybi50b1N0cmluZygpLnNsaWNlKDEsIC0xKTtcclxuICAgIH1cclxuICAgIGdldFZhbHVlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xyXG4gICAgfVxyXG4gICAgaXNWYWxpZGF0ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52YWxpZGl0eS52YWxpZDtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC1pbnB1dCcsIElucHV0LCB7IGV4dGVuZHM6ICdpbnB1dCcgfSk7XHJcbmV4cG9ydCBkZWZhdWx0IElucHV0O1xyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbGFiZWwuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9sYWJlbC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgJy4vbGFiZWwuY3NzJztcclxuY2xhc3MgTGFiZWwgZXh0ZW5kcyBIVE1MTGFiZWxFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBjb25zdCB7IGh0bWxGb3IsIHRleHQsIGNsYXNzbmFtZSB9ID0gcHJvcHM7XHJcbiAgICAgICAgdGhpcy5odG1sRm9yID0gaHRtbEZvcjtcclxuICAgICAgICB0aGlzLnRleHRDb250ZW50ID0gdGV4dDtcclxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoY2xhc3NuYW1lKTtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC1sYWJlbCcsIExhYmVsLCB7IGV4dGVuZHM6ICdsYWJlbCcgfSk7XHJcbmV4cG9ydCBkZWZhdWx0IExhYmVsO1xyXG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdGV4dGFyZWEuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi90ZXh0YXJlYS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgJy4vdGV4dGFyZWEuY3NzJztcclxuY2xhc3MgVGV4dEFyZWEgZXh0ZW5kcyBIVE1MVGV4dEFyZWFFbGVtZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBjb25zdCB7IG5hbWUsIGlkLCBjb2xzLCByb3dzIH0gPSBwcm9wcztcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuaWQgPSBpZDtcclxuICAgICAgICB0aGlzLmNvbHMgPSBjb2xzO1xyXG4gICAgICAgIHRoaXMucm93cyA9IHJvd3M7XHJcbiAgICB9XHJcbiAgICBnZXRWYWx1ZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcclxuICAgIH1cclxuICAgIGlzVmFsaWRhdGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtdGV4dGFyZWEnLCBUZXh0QXJlYSwgeyBleHRlbmRzOiAndGV4dGFyZWEnIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBUZXh0QXJlYTtcclxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Zvcm1JdGVtLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vZm9ybUl0ZW0uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgQ2FwdGlvbiB9IGZyb20gXCIuLi90YWcvY2FwdGlvblwiO1xyXG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCIuLi90YWcvaW5wdXRcIjtcclxuaW1wb3J0IHsgTGFiZWwgfSBmcm9tIFwiLi4vdGFnL2xhYmVsXCI7XHJcbmltcG9ydCB7IFNlbGVjdCB9IGZyb20gXCIuLi90YWcvc2VsZWN0XCI7XHJcbmltcG9ydCB7IFRleHRBcmVhIH0gZnJvbSBcIi4uL3RhZy90ZXh0YXJlYVwiO1xyXG5pbXBvcnQgJy4vZm9ybUl0ZW0uY3NzJztcclxuY2xhc3MgRm9ybUl0ZW0gZXh0ZW5kcyBIVE1MRGl2RWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIGNvbnN0IHsgcmVxdWlyZWQgfSA9IHByb3BzO1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmb3JtLWl0ZW0nKTtcclxuICAgICAgICBpZiAocmVxdWlyZWQpXHJcbiAgICAgICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZm9ybS1pdGVtLS1yZXF1aXJlZCcpO1xyXG4gICAgICAgIHRoaXMuY3JlYXRlRWxlbWVudHMocHJvcHMpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlRWxlbWVudHMocHJvcHMpIHtcclxuICAgICAgICBjb25zdCB7IGxhYmVsLCBzZWxlY3QsIGNhcHRpb24sIGlucHV0LCB0ZXh0YXJlYSB9ID0gcHJvcHM7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVMYWJlbChsYWJlbCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVTZWxlY3Qoc2VsZWN0KTtcclxuICAgICAgICB0aGlzLmNyZWF0ZUlucHV0KGlucHV0KTtcclxuICAgICAgICB0aGlzLmNyZWF0ZVRleHRBcmVhKHRleHRhcmVhKTtcclxuICAgICAgICB0aGlzLmNyZWF0ZUNhcHRpb24oY2FwdGlvbik7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVMYWJlbChsYWJlbCkge1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQobmV3IExhYmVsKGxhYmVsKSk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVTZWxlY3Qoc2VsZWN0KSB7XHJcbiAgICAgICAgaWYgKHNlbGVjdCA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChuZXcgU2VsZWN0KHNlbGVjdCkpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlSW5wdXQoaW5wdXQpIHtcclxuICAgICAgICBpZiAoaW5wdXQgPT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQobmV3IElucHV0KGlucHV0KSk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVUZXh0QXJlYSh0ZXh0YXJlYSkge1xyXG4gICAgICAgIGlmICh0ZXh0YXJlYSA9PT0gdW5kZWZpbmVkKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChuZXcgVGV4dEFyZWEodGV4dGFyZWEpKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZUNhcHRpb24oY2FwdGlvbikge1xyXG4gICAgICAgIGlmIChjYXB0aW9uID09PSB1bmRlZmluZWQpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKG5ldyBDYXB0aW9uKGNhcHRpb24pKTtcclxuICAgIH1cclxufVxyXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ21hdHppcC1mb3JtaXRlbScsIEZvcm1JdGVtLCB7IGV4dGVuZHM6ICdkaXYnIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBGb3JtSXRlbTtcclxuIiwiaW1wb3J0IENvbmRpdGlvbiBmcm9tICcuLi9jb25zdGFudHMvQ29uZGl0aW9uJztcclxuaW1wb3J0IEZvcm1JdGVtIGZyb20gJy4vZm9ybUl0ZW0vRm9ybUl0ZW0nO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuL3RhZy9idXR0b24nO1xyXG5jb25zdCB7IFJFR1VMQVJfRVhQUkVTU0lPTiB9ID0gQ29uZGl0aW9uO1xyXG5jbGFzcyBSZXN0YXVyYW50Rm9ybSBleHRlbmRzIEhUTUxGb3JtRWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuaWQgPSAncmVzdGF1cmFudC1mb3JtJztcclxuICAgICAgICB0aGlzLnN1Ym1pdEJ1dHRvbiA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVFbGVtZW50cygpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlRWxlbWVudHMoKSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVDYXRlZ29yeUZpZWxkKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVSZXN0YXVyYW50TmFtZUZpZWxkKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVEaXN0YW5jZUZpZWxkKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVEZXNjcmlwdGlvbkZpZWxkKCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVMaW5rRmllbGQoKTtcclxuICAgICAgICB0aGlzLmNyZWF0ZUJ1dHRvbnMoKTtcclxuICAgICAgICB0aGlzLnNldHVwVmFsaWRhdGlvbigpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQ2F0ZWdvcnlGaWVsZCgpIHtcclxuICAgICAgICBjb25zdCBsYWJlbCA9IHtcclxuICAgICAgICAgICAgaHRtbEZvcjogJ2NhdGVnb3J5JyxcclxuICAgICAgICAgICAgY2xhc3NuYW1lOiAndGV4dC1jYXB0aW9uJyxcclxuICAgICAgICAgICAgdGV4dDogJ+y5tO2FjOqzoOumrCcsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBvcHRpb25zID0gW1xyXG4gICAgICAgICAgICB7IHZhbHVlOiAnJywgdGV4dDogJ+yEoO2Dne2VtCDso7zshLjsmpQnIH0sXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICftlZzsi50nLCB0ZXh0OiAn7ZWc7IudJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAn7KSR7IudJywgdGV4dDogJ+ykkeyLnScgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJ+ydvOyLnScsIHRleHQ6ICfsnbzsi50nIH0sXHJcbiAgICAgICAgICAgIHsgdmFsdWU6ICfslpHsi50nLCB0ZXh0OiAn7JaR7IudJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAn7JWE7Iuc7JWIJywgdGV4dDogJ+yVhOyLnOyViCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJ+q4sO2DgCcsIHRleHQ6ICfquLDtg4AnIH0sXHJcbiAgICAgICAgXTtcclxuICAgICAgICBjb25zdCBzZWxlY3QgPSB7XHJcbiAgICAgICAgICAgIG5hbWU6ICdjYXRlZ29yeScsXHJcbiAgICAgICAgICAgIGlkOiAnY2F0ZWdvcnknLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgb3B0aW9uczogb3B0aW9ucyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQobmV3IEZvcm1JdGVtKHtcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgICAgIGxhYmVsLFxyXG4gICAgICAgICAgICBzZWxlY3QsXHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlUmVzdGF1cmFudE5hbWVGaWVsZCgpIHtcclxuICAgICAgICBjb25zdCBsYWJlbCA9IHtcclxuICAgICAgICAgICAgaHRtbEZvcjogJ25hbWUnLFxyXG4gICAgICAgICAgICBjbGFzc25hbWU6ICd0ZXh0LWNhcHRpb24nLFxyXG4gICAgICAgICAgICB0ZXh0OiAn7J2066aEJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGlucHV0ID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAndGV4dCcsXHJcbiAgICAgICAgICAgIG5hbWU6ICduYW1lJyxcclxuICAgICAgICAgICAgaWQ6ICduYW1lJyxcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgICAgICAgfTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKG5ldyBGb3JtSXRlbSh7XHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICBsYWJlbCxcclxuICAgICAgICAgICAgaW5wdXQsXHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlRGlzdGFuY2VGaWVsZCgpIHtcclxuICAgICAgICBjb25zdCBsYWJlbCA9IHtcclxuICAgICAgICAgICAgaHRtbEZvcjogJ2Rpc3RhbmNlJyxcclxuICAgICAgICAgICAgY2xhc3NuYW1lOiAndGV4dC1jYXB0aW9uJyxcclxuICAgICAgICAgICAgdGV4dDogJ+qxsOumrCjrj4Trs7Qg7J2064+ZIOyLnOqwhCknLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IFtcclxuICAgICAgICAgICAgeyB2YWx1ZTogJycsIHRleHQ6ICfshKDtg53tlbQg7KO87IS47JqUJyB9LFxyXG4gICAgICAgICAgICB7IHZhbHVlOiAnNScsIHRleHQ6ICc167aEIOuCtCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJzEwJywgdGV4dDogJzEw67aEIOuCtCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJzE1JywgdGV4dDogJzE167aEIOuCtCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJzIwJywgdGV4dDogJzIw67aEIOuCtCcgfSxcclxuICAgICAgICAgICAgeyB2YWx1ZTogJzMwJywgdGV4dDogJzMw67aEIOuCtCcgfSxcclxuICAgICAgICBdO1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdCA9IHtcclxuICAgICAgICAgICAgbmFtZTogJ2Rpc3RhbmNlJyxcclxuICAgICAgICAgICAgaWQ6ICdkaXN0YW5jZScsXHJcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgICAgICBvcHRpb25zLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChuZXcgRm9ybUl0ZW0oe1xyXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICAgICAgbGFiZWwsXHJcbiAgICAgICAgICAgIHNlbGVjdCxcclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVEZXNjcmlwdGlvbkZpZWxkKCkge1xyXG4gICAgICAgIGNvbnN0IGxhYmVsID0ge1xyXG4gICAgICAgICAgICBodG1sRm9yOiAnZGVzY3JpcHRpb24nLFxyXG4gICAgICAgICAgICBjbGFzc25hbWU6ICd0ZXh0LWNhcHRpb24nLFxyXG4gICAgICAgICAgICB0ZXh0OiAn7ISk66qFJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IHRleHRhcmVhID0ge1xyXG4gICAgICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nLFxyXG4gICAgICAgICAgICBpZDogJ2Rlc2NyaXB0aW9uJyxcclxuICAgICAgICAgICAgY29sczogMzAsXHJcbiAgICAgICAgICAgIHJvd3M6IDE1LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgY2FwdGlvbiA9IHtcclxuICAgICAgICAgICAgY2xhc3NuYW1lczogWydoZWxwLXRleHQnLCAndGV4dC1jYXB0aW9uJ10sXHJcbiAgICAgICAgICAgIHRleHQ6ICfrqZTribQg65OxIOy2lOqwgCDsoJXrs7Trpbwg7J6F66Cl7ZW0IOyjvOyEuOyalC4nLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5hcHBlbmRDaGlsZChuZXcgRm9ybUl0ZW0oe1xyXG4gICAgICAgICAgICByZXF1aXJlZDogZmFsc2UsXHJcbiAgICAgICAgICAgIGxhYmVsLFxyXG4gICAgICAgICAgICB0ZXh0YXJlYSxcclxuICAgICAgICAgICAgY2FwdGlvbixcclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcbiAgICBjcmVhdGVMaW5rRmllbGQoKSB7XHJcbiAgICAgICAgY29uc3QgbGFiZWwgPSB7XHJcbiAgICAgICAgICAgIGh0bWxGb3I6ICdsaW5rJyxcclxuICAgICAgICAgICAgY2xhc3NuYW1lOiAndGV4dC1jYXB0aW9uJyxcclxuICAgICAgICAgICAgdGV4dDogJ+ywuOqzoCDrp4HtgawnLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgaW5wdXQgPSB7XHJcbiAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcclxuICAgICAgICAgICAgbmFtZTogJ2xpbmsnLFxyXG4gICAgICAgICAgICBpZDogJ2xpbmsnLFxyXG4gICAgICAgICAgICByZXF1aXJlZDogZmFsc2UsXHJcbiAgICAgICAgICAgIHBhdHRlcm46IFJFR1VMQVJfRVhQUkVTU0lPTi5VUkwsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBjYXB0aW9uID0ge1xyXG4gICAgICAgICAgICBjbGFzc25hbWVzOiBbJ2hlbHAtdGV4dCcsICd0ZXh0LWNhcHRpb24nXSxcclxuICAgICAgICAgICAgdGV4dDogJ+unpOyepSDsoJXrs7Trpbwg7ZmV7J247ZWgIOyImCDsnojripQg66eB7YGs66W8IOyeheugpe2VtCDso7zshLjsmpQuJyxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQobmV3IEZvcm1JdGVtKHtcclxuICAgICAgICAgICAgcmVxdWlyZWQ6IGZhbHNlLFxyXG4gICAgICAgICAgICBsYWJlbCxcclxuICAgICAgICAgICAgaW5wdXQsXHJcbiAgICAgICAgICAgIGNhcHRpb24sXHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQnV0dG9ucygpIHtcclxuICAgICAgICBjb25zdCBidXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBidXR0b25Db250YWluZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsICdidXR0b24tY29udGFpbmVyJyk7XHJcbiAgICAgICAgY29uc3QgY2FuY2VsQnV0dG9uID0ge1xyXG4gICAgICAgICAgICB0eXBlOiAncmVzZXQnLFxyXG4gICAgICAgICAgICBjbGFzc25hbWVzOiBbJ2J1dHRvbicsICd0ZXh0LWNhcHRpb24nLCAnbW9kYWwtLWNsb3NlJ10sXHJcbiAgICAgICAgICAgIHZhcmllbnQ6ICdzZWNvbmRhcnknLFxyXG4gICAgICAgICAgICBjaGlsZHJlbjogJ+y3qOyGjO2VmOq4sCcsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCBzdWJtaXRCdXR0b24gPSB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdzdWJtaXQnLFxyXG4gICAgICAgICAgICBjbGFzc25hbWVzOiBbJ2J1dHRvbicsICd0ZXh0LWNhcHRpb24nLCAnZm9ybS1zdWJtaXQnXSxcclxuICAgICAgICAgICAgdmFyaWVudDogJ3ByaW1hcnknLFxyXG4gICAgICAgICAgICBjaGlsZHJlbjogJ+y2lOqwgO2VmOq4sCcsXHJcbiAgICAgICAgICAgIGRpc2FibGVkOiB0cnVlLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdGhpcy5zdWJtaXRCdXR0b24gPSBuZXcgQnV0dG9uKHN1Ym1pdEJ1dHRvbik7XHJcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKG5ldyBCdXR0b24oY2FuY2VsQnV0dG9uKSk7XHJcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuc3VibWl0QnV0dG9uKTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGJ1dHRvbkNvbnRhaW5lcik7XHJcbiAgICB9XHJcbiAgICBnZXRGb3JtRmllbGRzKCkge1xyXG4gICAgICAgIGNvbnN0IGZvcm1GaWVsZHMgPSBbLi4udGhpcy5jaGlsZHJlbl0uZmlsdGVyKChjaGlsZHJlbikgPT4gY2hpbGRyZW4uY2xhc3NOYW1lLmluY2x1ZGVzKCdmb3JtLWl0ZW0nKSk7XHJcbiAgICAgICAgcmV0dXJuIGZvcm1GaWVsZHMubWFwKChmaWVsZCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBpbnB1dEZpZWxkID0gQXJyYXkuZnJvbShmaWVsZC5jaGlsZHJlbikuZmluZCgoY2hpbGQpID0+IHRoaXMuZ2V0SW5wdXRGaWVsZChjaGlsZCkpO1xyXG4gICAgICAgICAgICByZXR1cm4gaW5wdXRGaWVsZDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGdldElucHV0RmllbGQoZWxlbWVudCkge1xyXG4gICAgICAgIHJldHVybiBbJ1NFTEVDVCcsICdURVhUQVJFQScsICdJTlBVVCddLmluY2x1ZGVzKGVsZW1lbnQudGFnTmFtZSk7XHJcbiAgICB9XHJcbiAgICB1cGRhdGVCdXR0b25TdGF0ZSgpIHtcclxuICAgICAgICBjb25zdCBmb3JtRmllbGRzID0gdGhpcy5nZXRGb3JtRmllbGRzKCk7XHJcbiAgICAgICAgY29uc3QgYWxsRmllbGRzVmFsaWQgPSBmb3JtRmllbGRzLmV2ZXJ5KGZpZWxkID0+IGZpZWxkLmlzVmFsaWRhdGUoKSk7XHJcbiAgICAgICAgaWYgKGFsbEZpZWxkc1ZhbGlkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3VibWl0QnV0dG9uLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3VibWl0QnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAndHJ1ZScpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldHVwVmFsaWRhdGlvbigpIHtcclxuICAgICAgICBjb25zdCBmb3JtRmllbGRzID0gdGhpcy5nZXRGb3JtRmllbGRzKCk7XHJcbiAgICAgICAgZm9ybUZpZWxkcy5mb3JFYWNoKGZpZWxkID0+IHtcclxuICAgICAgICAgICAgZmllbGQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgncmVzdGF1cmFudC1mb3JtJywgUmVzdGF1cmFudEZvcm0sIHsgZXh0ZW5kczogJ2Zvcm0nIH0pO1xyXG5leHBvcnQgZGVmYXVsdCBSZXN0YXVyYW50Rm9ybTtcclxuIiwiaW1wb3J0IE1hdHppcCBmcm9tIFwiLi9tYXR6aXBcIjtcclxuaW1wb3J0IHN0b3JhZ2UgZnJvbSAnLi9zdG9yYWdlJztcclxuaW1wb3J0IExPQ0FMX1NUT1JBR0VfS0VZIGZyb20gJy4vY29uc3RhbnRzL0xvY2FsU3RvcmFnZUtleSc7XHJcbmNvbnN0IHsgTUFUWklQX0RBVEEsIEZBVk9SSVRFX0RBVEEgfSA9IExPQ0FMX1NUT1JBR0VfS0VZO1xyXG5pbXBvcnQgRE9NIGZyb20gJy4vdXRpbHMvRE9NJztcclxuaW1wb3J0IEZpbHRlckNvbnRhaW5lciBmcm9tIFwiLi9jb21wb25lbnRzL0ZpbHRlckNvbnRhaW5lclwiO1xyXG5pbXBvcnQgVGFiUGFuZSBmcm9tIFwiLi9jb21wb25lbnRzL1RhYlBhbmVcIjtcclxuaW1wb3J0IEhlYWRlciBmcm9tIFwiLi9jb21wb25lbnRzL2hlYWRlci9IZWFkZXJcIjtcclxuaW1wb3J0IFRhYiBmcm9tIFwiLi9jb21wb25lbnRzL3RhYi9UYWJcIjtcclxuaW1wb3J0IFJlc3RhdXJhbnQgZnJvbSAnLi9jb21wb25lbnRzL3Jlc3RhdXJhbnQvUmVzdGF1cmFudCc7XHJcbmltcG9ydCBMaXN0Q29udGFpbmVyIGZyb20gJy4vY29tcG9uZW50cy9saXN0Q29udGFpbmVyL0xpc3RDb250YWluZXInO1xyXG5pbXBvcnQgUmVzdGF1cmFudEZvcm0gZnJvbSAnLi9jb21wb25lbnRzL1Jlc3RhdXJhbnRGb3JtJztcclxuaW1wb3J0IE1vZGFsIGZyb20gJy4vY29tcG9uZW50cy9tb2RhbC9Nb2RhbCc7XHJcbmNvbnN0IHsgJCB9ID0gRE9NO1xyXG5jbGFzcyBBcHAgZXh0ZW5kcyBIVE1MRWxlbWVudCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIEFwcC5tYXR6aXAgPSBuZXcgTWF0emlwKHN0b3JhZ2UuZ2V0RGF0YShNQVRaSVBfREFUQSksIHN0b3JhZ2UuZ2V0RGF0YShGQVZPUklURV9EQVRBKSk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVIZWFkZXIoKTtcclxuICAgICAgICB0aGlzLm1haW4gPSB0aGlzLmNyZWF0ZU1haW4oKTtcclxuICAgICAgICB0aGlzLnRhYiA9IHRoaXMuY3JlYXRlVGFiKCk7XHJcbiAgICAgICAgdGhpcy50YWJQYW5lID0gdGhpcy5jcmVhdGVUYWJwYW5lKCk7XHJcbiAgICAgICAgdGhpcy5hcHBlbmRNb2RhbCA9IHRoaXMuY3JlYXRlQXBwZW5kTW9kYWwoKTtcclxuICAgICAgICB0aGlzLmxpc3RlblRhYkNoYW5nZSgpO1xyXG4gICAgICAgIHRoaXMuc2V0RXZlbnQoKTtcclxuICAgIH1cclxuICAgIGxpc3RlblRhYkNoYW5nZSgpIHtcclxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0YWJDaGFuZ2VFdmVudCcsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCB0YWJDaGFuZ2VFdmVudCA9IGV2ZW50O1xyXG4gICAgICAgICAgICBjb25zdCBhY3RpdmVUYWJJbmRleCA9IHRhYkNoYW5nZUV2ZW50LmRldGFpbC5hY3RpdmVUYWJJbmRleDtcclxuICAgICAgICAgICAgYWN0aXZlVGFiSW5kZXggPT09IDAgPyB0aGlzLnNldEV2ZW50V2hvbGVNb2RlKCkgOiB0aGlzLnNldE15RmF2b3JpdGVNb2RlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBzZXRFdmVudCgpIHtcclxuICAgICAgICB0aGlzLmxpc3Rlbk1vZGFsVG9nZ2xlKCk7XHJcbiAgICAgICAgdGhpcy5saXN0ZW5SZXN0YXVyYW50QWRkKCk7XHJcbiAgICAgICAgdGhpcy5zZXRFdmVudFdob2xlTW9kZSgpO1xyXG4gICAgICAgIHRoaXMubGlzdGVuUmVzdGF1cmFudERlbGV0ZSgpO1xyXG4gICAgfVxyXG4gICAgc2V0RXZlbnRXaG9sZU1vZGUoKSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVXaG9sZVJlc3RhdXJhbnQoKTtcclxuICAgICAgICB0aGlzLmNoYW5nZUZpbHRlcigpO1xyXG4gICAgfVxyXG4gICAgc2V0TXlGYXZvcml0ZU1vZGUoKSB7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVNeUZhdm9yaXRlTGlzdCgpO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlSGVhZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IGhlYWRlciA9IG5ldyBIZWFkZXIoKTtcclxuICAgICAgICB0aGlzLnByZXBlbmQoaGVhZGVyKTtcclxuICAgIH1cclxuICAgIGNyZWF0ZU1haW4oKSB7XHJcbiAgICAgICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ21haW4nKTtcclxuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKG1haW4pO1xyXG4gICAgICAgIHJldHVybiBtYWluO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlVGFiKCkge1xyXG4gICAgICAgIGNvbnN0IHRhYiA9IG5ldyBUYWIoWyfrqqjrk6Ag7J2M7Iud7KCQJywgJ+yekOyjvCDqsIDripQg7J2M7Iud7KCQJ10pO1xyXG4gICAgICAgIHRoaXMubWFpbi5wcmVwZW5kKHRhYik7XHJcbiAgICAgICAgcmV0dXJuIHRhYjtcclxuICAgIH1cclxuICAgIGNyZWF0ZVRhYnBhbmUoKSB7XHJcbiAgICAgICAgY29uc3QgdGFiUGFuZSA9IG5ldyBUYWJQYW5lKCk7XHJcbiAgICAgICAgdGhpcy5tYWluLmFwcGVuZENoaWxkKHRhYlBhbmUpO1xyXG4gICAgICAgIHJldHVybiB0YWJQYW5lO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlV2hvbGVSZXN0YXVyYW50KCkge1xyXG4gICAgICAgIGNvbnN0IGZpbHRlckNvbnRhaW5lciA9IG5ldyBGaWx0ZXJDb250YWluZXIoKTtcclxuICAgICAgICBjb25zdCB7IGNhdGVnb3J5LCBzb3J0IH0gPSBmaWx0ZXJDb250YWluZXIuZ2V0RmlsdGVyVmFsdWVzKCk7XHJcbiAgICAgICAgY29uc3QgcmVzdGF1cmFudEVsZW1lbnRzID0gQXBwLm1hdHppcC5maWx0ZXJBbmRTb3J0KGNhdGVnb3J5LCBzb3J0KS5tYXAoKHJlc3RhdXJhbnQpID0+IG5ldyBSZXN0YXVyYW50KHJlc3RhdXJhbnQsIEFwcC5tYXR6aXAuaXNGYXZvcml0ZShyZXN0YXVyYW50LmlkKSkpO1xyXG4gICAgICAgIGNvbnN0IGxpc3RDb250YWluZXIgPSBuZXcgTGlzdENvbnRhaW5lcihyZXN0YXVyYW50RWxlbWVudHMpO1xyXG4gICAgICAgIHRoaXMudGFiUGFuZS5zaG93Q29udGVudCh7IGZpbHRlckNvbnRhaW5lciwgbGlzdENvbnRhaW5lciB9KTtcclxuICAgIH1cclxuICAgIGNyZWF0ZU15RmF2b3JpdGVMaXN0KCkge1xyXG4gICAgICAgIGNvbnN0IGZhdm9yaXRlUmVzdGF1cmFudHMgPSBBcHAubWF0emlwLmdldE15RmF2b3JpdGVSZXN0YXVyYW50cygpLm1hcCgocmVzdGF1cmFudCkgPT4gbmV3IFJlc3RhdXJhbnQocmVzdGF1cmFudCwgdHJ1ZSkpO1xyXG4gICAgICAgIGNvbnN0IGxpc3RDb250YWluZXIgPSBuZXcgTGlzdENvbnRhaW5lcihmYXZvcml0ZVJlc3RhdXJhbnRzKTtcclxuICAgICAgICB0aGlzLnRhYlBhbmUuc2hvd0NvbnRlbnQoeyBsaXN0Q29udGFpbmVyIH0pO1xyXG4gICAgfVxyXG4gICAgY3JlYXRlQXBwZW5kTW9kYWwoKSB7XHJcbiAgICAgICAgY29uc3QgbW9kYWwgPSBuZXcgTW9kYWwoeyBjbGFzc25hbWU6ICdtb2RhbCcsIHRpdGxlOiAn7IOI66Gc7Jq0IOydjOyLneygkCcsIGNoaWxkOiBuZXcgUmVzdGF1cmFudEZvcm0oKSB9KTtcclxuICAgICAgICB0aGlzLm1haW4uYXBwZW5kQ2hpbGQobW9kYWwpO1xyXG4gICAgICAgIHJldHVybiBtb2RhbDtcclxuICAgIH1cclxuICAgIGxpc3Rlbk1vZGFsVG9nZ2xlKCkge1xyXG4gICAgICAgIHRoaXMuYXBwZW5kTW9kYWwuYmFja2Ryb3BDbGljayh0aGlzLmFwcGVuZE1vZGFsLCAnbW9kYWwnKTtcclxuICAgICAgICAkKCcubW9kYWwtLWNsb3NlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuYXBwZW5kTW9kYWwudG9nZ2xlTW9kYWwoJ21vZGFsJyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBjaGFuZ2VGaWx0ZXIoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZmlsdGVyQ2hhbmdlJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGN1c3RvbUV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGVkQ2F0ZWdvcnkgPSBjdXN0b21FdmVudC5kZXRhaWwuc2VsZWN0ZWRDYXRlZ29yeTtcclxuICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRTb3J0ID0gY3VzdG9tRXZlbnQuZGV0YWlsLnNlbGVjdGVkU29ydDtcclxuICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudEVsZW1lbnRzID0gQXBwLm1hdHppcC5maWx0ZXJBbmRTb3J0KHNlbGVjdGVkQ2F0ZWdvcnksIHNlbGVjdGVkU29ydCkubWFwKChyZXN0YXVyYW50KSA9PiBuZXcgUmVzdGF1cmFudChyZXN0YXVyYW50LCBBcHAubWF0emlwLmlzRmF2b3JpdGUocmVzdGF1cmFudC5pZCkpKTtcclxuICAgICAgICAgICAgY29uc3QgbGlzdENvbnRhaW5lciA9IG5ldyBMaXN0Q29udGFpbmVyKHJlc3RhdXJhbnRFbGVtZW50cyk7XHJcbiAgICAgICAgICAgIHRoaXMudGFiUGFuZS5zaG93TGlzdENoYW5nZShsaXN0Q29udGFpbmVyKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGxpc3RlblJlc3RhdXJhbnRBZGQoKSB7XHJcbiAgICAgICAgY29uc3QgZm9ybSA9ICQoJyNyZXN0YXVyYW50LWZvcm0nKTtcclxuICAgICAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBjb25zdCBmb3JtRmllbGRzID0gZm9ybS5nZXRGb3JtRmllbGRzKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkVmFsdWVzID0gZm9ybUZpZWxkcy5tYXAoKGZpZWxkKSA9PiBmaWVsZC5nZXRWYWx1ZSgpKTtcclxuICAgICAgICAgICAgY29uc3QgbmV3UmVzdGF1cmFudCA9IHtcclxuICAgICAgICAgICAgICAgIGlkOiBgbWF0emlwJHtjcnlwdG8ucmFuZG9tVVVJRCgpLnJlcGxhY2UoLy0vZywgJycpfWAsXHJcbiAgICAgICAgICAgICAgICBjYXRlZ29yeTogZmllbGRWYWx1ZXNbMF0sXHJcbiAgICAgICAgICAgICAgICBuYW1lOiBmaWVsZFZhbHVlc1sxXSxcclxuICAgICAgICAgICAgICAgIGRpc3RhbmNlOiBOdW1iZXIoZmllbGRWYWx1ZXNbMl0pLFxyXG4gICAgICAgICAgICAgICAgaW50cm9kdWN0aW9uOiBmaWVsZFZhbHVlc1szXSxcclxuICAgICAgICAgICAgICAgIGxpbms6IGZpZWxkVmFsdWVzWzRdLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgQXBwLm1hdHppcC5hZGQobmV3UmVzdGF1cmFudCk7XHJcbiAgICAgICAgICAgICAgICBzdG9yYWdlLmFkZERhdGEoTUFUWklQX0RBVEEsIG5ld1Jlc3RhdXJhbnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hcHBlbmRNb2RhbC50b2dnbGVNb2RhbCgnbW9kYWwnKTtcclxuICAgICAgICAgICAgICAgIHRoaXMudGFiUGFuZS5zaG93TGlzdEFwcGVuZChuZXcgUmVzdGF1cmFudChuZXdSZXN0YXVyYW50LCBmYWxzZSkpO1xyXG4gICAgICAgICAgICAgICAgZm9ybS5yZXNldCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgYWxlcnQoZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBsaXN0ZW5SZXN0YXVyYW50RGVsZXRlKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RlbGV0ZVJlc3RhdXJhbnQnLCAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgcmVzdGF1cmFudERlbGV0ZUV2ZW50ID0gZXZlbnQ7XHJcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldElkID0gcmVzdGF1cmFudERlbGV0ZUV2ZW50LmRldGFpbC50YXJnZXRJZDtcclxuICAgICAgICAgICAgQXBwLm1hdHppcC5kZWxldGUodGFyZ2V0SWQpO1xyXG4gICAgICAgICAgICBzdG9yYWdlLm1vZGlmeURhdGEoTUFUWklQX0RBVEEsIEFwcC5tYXR6aXAuZ2V0UmVzdGF1cmFudHMoKSk7XHJcbiAgICAgICAgICAgIHRoaXMudGFiUGFuZS5zaG93TGlzdERlbGV0ZSh0YXJnZXRJZCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdtYXR6aXAtYXBwJywgQXBwKTtcclxuZXhwb3J0IGRlZmF1bHQgQXBwO1xyXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJpIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJvcHRpb25zIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibiIsImdldHRlciIsIl9fZXNNb2R1bGUiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwicmVwbGFjZSIsInAiLCJuYyIsIkNBVEVHT1JZIiwid2hvbGUiLCJrb3JlYW5Gb29kIiwiY2hpbmVzZUZvb2QiLCJqYXBhbmVzZUZvb2QiLCJ3ZXN0ZXJuRm9vZCIsImFzaWFuRm9vZCIsImV0YyIsIkRJU1RBTkNFIiwiUkVHVUxBUl9FWFBSRVNTSU9OIiwiVVJMIiwiZW1wdHkiLCJjYXRlZ29yeSIsImV4aXN0IiwidmFsdWVzIiwiU3RyaW5nIiwiaW5jbHVkZXMiLCJuYW1lIiwiZGlzdGFuY2UiLCJhZGREYXRhIiwibG9jYWxTdG9yYWdlRGF0YSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZXRJdGVtIiwibmV3RGF0YSIsInBhcnNlIiwiZ2V0RGF0YSIsIm1vZGlmeURhdGEiLCJmcmVlemUiLCJNQVRaSVBfREFUQSIsIkZBVk9SSVRFX0RBVEEiLCJ2YWxpZGF0ZVNlbGVjdG9yIiwic2VsZWN0b3IiLCJhbGVydCIsIiQiLCJ2YWxpZGF0ZUV4aXN0RWxlbWVudCIsIiQkIiwiZWxlbWVudHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwidmFsaWRhdGVFeGlzdEVsZW1lbnRzIiwiaW5zZXJ0RWxlbWVudHNJblRhcmdldCIsImZyYWciLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiZm9yRWFjaCIsIk9wdGlvbiIsIkhUTUxPcHRpb25FbGVtZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN1cGVyIiwidmFsdWUiLCJ0ZXh0IiwidGV4dENvbnRlbnQiLCJjdXN0b21FbGVtZW50cyIsImRlZmluZSIsImV4dGVuZHMiLCJTZWxlY3QiLCJIVE1MU2VsZWN0RWxlbWVudCIsImNsYXNzbmFtZSIsInJlcXVpcmVkIiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkT3B0aW9ucyIsIm9wdGlvbkVsZW1lbnRzIiwib3B0aW9uIiwiZ2V0VmFsdWUiLCJzZWxlY3RlZEluZGV4IiwiaXNWYWxpZGF0ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJGaWx0ZXJDb250YWluZXIiLCJIVE1MRGl2RWxlbWVudCIsImNsYXNzTmFtZSIsImNyZWF0ZUNhdGVnb3J5U2VsZWN0Iiwic29ydCIsImNyZWF0ZVNvcnRTZWxlY3QiLCJzZXRFdmVudCIsImNhdGVnb3J5Q2hhbmdlIiwic29ydENoYW5nZSIsInNlbGVjdCIsImdldEZpbHRlclZhbHVlcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJmaWx0ZXJDaGFuZ2VFdmVudCIsIkN1c3RvbUV2ZW50IiwiZGV0YWlsIiwic2VsZWN0ZWRDYXRlZ29yeSIsInNlbGVjdGVkU29ydCIsImRpc3BhdGNoRXZlbnQiLCJUYWJQYW5lIiwiSFRNTEVsZW1lbnQiLCJmaWx0ZXJDb250YWluZXIiLCJsaXN0Q29udGFpbmVyIiwicmVtb3ZlVGFiUGFuZSIsInJlcGxhY2VDaGlsZHJlbiIsInJlbW92ZUxpc3RDb250YWluZXIiLCJzaG93Q29udGVudCIsInRhYlBhbmVQcm9wcyIsInNob3dMaXN0Q2hhbmdlIiwic2hvd0xpc3RBcHBlbmQiLCJyZXN0YXVyYW50IiwiYWRkUmVzdGF1cmFudHMiLCJzaG93TGlzdERlbGV0ZSIsInRhcmdldElkIiwiZGVsZXRlUmVzdGF1cmFudCIsIkJ1dHRvbiIsIkhUTUxCdXR0b25FbGVtZW50IiwidHlwZSIsImNsYXNzbmFtZXMiLCJhcmlhTGFiZWwiLCJjaGlsZHJlbiIsImRpc2FibGVkIiwidmFyaWVudCIsIkhUTUxJbWFnZUVsZW1lbnQiLCJJbWFnZSIsImFsdCIsIkhlYWRlciIsImNyZWF0ZUgxIiwiZ25iQnV0dG9uIiwiY3JlYXRlQnV0dG9uIiwib3Blbk1vZGFsIiwiaDEiLCJidXR0b24iLCJidXR0b25FbGVtZW50IiwidGFiRWxlbWVudCIsImFjdGl2ZSIsInRhYk5hbWUiLCJpbmRpY2F0b3IiLCJjcmVhdGVJbmRpY2F0b3IiLCJpbml0VGFiIiwic2V0QWN0aXZlIiwic2V0SW5hY3RpdmUiLCJ0YWJDbGljayIsImNsZWFyQWN0aXZhdGUiLCJzZXRBY3RpdmVUYWIiLCJ0YWJDaGFuZ2VFdmVudCIsImFjdGl2ZVRhYkluZGV4IiwidGFiTmFtZXMiLCJhY3RpdmVJbmRleCIsInRhYkVsZW1lbnRzIiwiY3JlYXRlVGFiRWxlbWVudHMiLCJsaXN0ZW5UYWJDaGFuZ2UiLCJiaW5kIiwidGFiIiwiTW9kYWwiLCJtb2RhbEJhY2tkcm9wIiwiY3JlYXRlQmFja2Ryb3AiLCJtb2RhbENvbnRhaW5lciIsImNyZWF0ZU1vZGFsQ29udGFpbmVyIiwiY2hpbGQiLCJ0aXRsZSIsIm1vZGFsVGl0bGUiLCJtb2RhbFRpdGxlQ2xhc3NMaXN0Iiwic3RvcEV2ZW50QnViYmxpbmciLCJldmVudCIsInN0b3BQcm9wYWdhdGlvbiIsImJhY2tkcm9wQ2xpY2siLCJtb2RhbCIsInRvZ2dsZU1vZGFsIiwidG9nZ2xlIiwiQ0FURUdPUllfSU1BR0UiLCJjcmVhdGVSZXN0YXVyYW50Q2F0ZWdvcnkiLCJpbWciLCJpc0NoaWxkIiwiY2hhbmdlU3RhdGUiLCJzaG93U3Rhckljb24iLCJsaXN0ZW5DaGFuZ2VTdGF0ZSIsImFkZEZhdm9yaXRlIiwiZGVsZXRlRmF2b3JpdGUiLCJpY29uU3RhdGVDaGFuZ2VFdmVudCIsInN0YXRlIiwiZmF2b3JpdGVJY29uIiwiY3JlYXRlTGF5b3V0IiwiY2FuY2VsQnV0dG9uIiwiZGVsZXRlQnV0dG9uIiwiY3JlYXRlQnV0dG9ucyIsImxpc3RlblJlcmVuZGVyIiwiaW50cm9kdWN0aW9uIiwibGluayIsImNyZWF0ZUNhdGVnb3J5SW1hZ2UiLCJjcmVhdGVSZXN0YXVyYW50TmFtZSIsImNyZWF0ZURpc3RhbmNlIiwiY3JlYXRlSW50cm9kdWN0aW9uIiwiY3JlYXRlTGluayIsImNhdGVnb3J5SW1hZ2UiLCJzcGFuIiwiY3JlYXRlTGlua0ZhbGxiYWNrIiwiaHJlZiIsImJ1dHRvbkNvbnRhaW5lciIsImJ1dHRvbnMiLCJsaXN0ZW5DbG9zZUJ1dHRvbkNsaWNrIiwicGFyZW50RWxlbWVudCIsImxpc3RlbkRlbGV0ZUJ1dG9uQ2xpY2siLCJjb25maXJtIiwiZGlzcGF0Y2hSZXN0YXVyYW50RGVsZXRlRXZlbnQiLCJyZXN0YXVyYW50RGVsZXRlRXZlbnQiLCJnZXRDaGFuZ2VTdGF0ZSIsIm5ld0VsZW1lbnQiLCJvbGRFbGVtZW50IiwicmVwbGFjZUNoaWxkIiwiUmVzdGF1cmFudCIsIkhUTUxMSUVsZW1lbnQiLCJpc0Zhdm9yaXRlIiwiY3JlYXRlRmF2b3JpdGVJY29uIiwiY3JlYXRlRGV0YWlsTW9kYWwiLCJsaXN0ZW5PcGVuRGV0YWlsTW9kYWwiLCJsaXN0ZW5DYW5jZWxCdXR0b25DbGljayIsImxpc3RlbkRlbGV0ZUJ1dHRvbkNsaWNrIiwicmVyZW5kZXJNb2RhbCIsInJlc3RhdXJhbnRDYXRlZ29yeSIsInJlc3RhdXJhbnRJbmZvIiwiY3JlYXRlUmVzdGF1cmFudEluZm8iLCJoMyIsInJlc3RhdXJhbnREZXRhaWwiLCJvcmlnaW4iLCJjbG9uZSIsIkhUTUxVTGlzdEVsZW1lbnQiLCJyZXN0YXVyYW50cyIsImZhbGxiYWNrVUkiLCJjcmVhdGVSZXN0YXVyYW50cyIsImNyZWF0ZUZhbGxiYWNrIiwibm90aGluZ0NvbnRhaW5lciIsIm5vdGhpbmdNZW50IiwidGFyZ2V0Tm9kZSIsImZpbmQiLCJ0YXJnZXROb2RlSW5kZXgiLCJmaW5kSW5kZXgiLCJyZXN0YXVyYW50Q291bnQiLCJDYXB0aW9uIiwiSFRNTFNwYW5FbGVtZW50IiwiSW5wdXQiLCJIVE1MSW5wdXRFbGVtZW50IiwicGF0dGVybiIsInNsaWNlIiwiTGFiZWwiLCJIVE1MTGFiZWxFbGVtZW50IiwiaHRtbEZvciIsIlRleHRBcmVhIiwiSFRNTFRleHRBcmVhRWxlbWVudCIsImNvbHMiLCJyb3dzIiwiRm9ybUl0ZW0iLCJjcmVhdGVFbGVtZW50cyIsImxhYmVsIiwiY2FwdGlvbiIsImlucHV0IiwidGV4dGFyZWEiLCJjcmVhdGVMYWJlbCIsImNyZWF0ZVNlbGVjdCIsImNyZWF0ZUlucHV0IiwiY3JlYXRlVGV4dEFyZWEiLCJjcmVhdGVDYXB0aW9uIiwiUmVzdGF1cmFudEZvcm0iLCJIVE1MRm9ybUVsZW1lbnQiLCJzdWJtaXRCdXR0b24iLCJjcmVhdGVDYXRlZ29yeUZpZWxkIiwiY3JlYXRlUmVzdGF1cmFudE5hbWVGaWVsZCIsImNyZWF0ZURpc3RhbmNlRmllbGQiLCJjcmVhdGVEZXNjcmlwdGlvbkZpZWxkIiwiY3JlYXRlTGlua0ZpZWxkIiwic2V0dXBWYWxpZGF0aW9uIiwiZ2V0Rm9ybUZpZWxkcyIsImZpbHRlciIsImZpZWxkIiwiQXJyYXkiLCJmcm9tIiwiZ2V0SW5wdXRGaWVsZCIsInRhZ05hbWUiLCJ1cGRhdGVCdXR0b25TdGF0ZSIsImV2ZXJ5IiwicmVtb3ZlQXR0cmlidXRlIiwiQXBwIiwibWF0emlwIiwibXlGYXZvcml0ZXMiLCJnZXRSZXN0YXVyYW50cyIsImdldE15RmF2b3JpdGVzIiwiZ2V0TXlGYXZvcml0ZVJlc3RhdXJhbnRzIiwiZmF2b3JpdGVSZXN0YXVyYW50cyIsImFkZFZhbGlkYXRlIiwidGFyZ2V0SW5kZXgiLCJmaWx0ZXJBbmRTb3J0Iiwic29ydEJ5IiwiZmlsdGVyUmVzdWx0IiwiU09SVF9CWSIsInNvcnRCeU5hbWUiLCJzb3J0QnlEaXN0YW5jZSIsImZpbHRlckJ5Q2F0ZWdvcnkiLCJiIiwiZGVsZXRlIiwiY3JlYXRlSGVhZGVyIiwibWFpbiIsImNyZWF0ZU1haW4iLCJjcmVhdGVUYWIiLCJ0YWJQYW5lIiwiY3JlYXRlVGFicGFuZSIsImFwcGVuZE1vZGFsIiwiY3JlYXRlQXBwZW5kTW9kYWwiLCJzZXRFdmVudFdob2xlTW9kZSIsInNldE15RmF2b3JpdGVNb2RlIiwibGlzdGVuTW9kYWxUb2dnbGUiLCJsaXN0ZW5SZXN0YXVyYW50QWRkIiwibGlzdGVuUmVzdGF1cmFudERlbGV0ZSIsImNyZWF0ZVdob2xlUmVzdGF1cmFudCIsImNoYW5nZUZpbHRlciIsImNyZWF0ZU15RmF2b3JpdGVMaXN0IiwiaGVhZGVyIiwicHJlcGVuZCIsInJlc3RhdXJhbnRFbGVtZW50cyIsImN1c3RvbUV2ZW50IiwiZm9ybSIsInByZXZlbnREZWZhdWx0IiwiZmllbGRWYWx1ZXMiLCJuZXdSZXN0YXVyYW50IiwiY3J5cHRvIiwicmFuZG9tVVVJRCIsIk51bWJlciIsInJlc2V0IiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9